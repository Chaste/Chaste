#ifdef CHASTE_CVODE
//! @file
//!
//! This source file was generated from CellML by chaste_codegen version 0.3.0
//!
//! Model: luo_rudy_1991
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: normal)
//! on 2020-08-04 18:32:24
//!
//! <autogenerated>

#include "LuoRudy1991Cvode.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

    boost::shared_ptr<RegularStimulus> CellLuoRudy1991FromCellMLCvode::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane__stim_amplitude = -25.5; // microA_per_cm2
        const double var_chaste_interface__membrane__stim_duration = 2.0; // millisecond
        const double var_chaste_interface__membrane__stim_period = 1000.0; // millisecond
        const double var_chaste_interface__membrane__stim_start = 100.0; // millisecond
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__stim_amplitude),
                var_chaste_interface__membrane__stim_duration,
                var_chaste_interface__membrane__stim_period,
                var_chaste_interface__membrane__stim_start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }

    double CellLuoRudy1991FromCellMLCvode::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }
    
    CellLuoRudy1991FromCellMLCvode::CellLuoRudy1991FromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                8,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<CellLuoRudy1991FromCellMLCvode>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
        
        NV_Ith_S(this->mParameters, 0) = 0.089999999999999997; // (var_slow_inward_current__P_si) [milliS_per_cm2]
        NV_Ith_S(this->mParameters, 1) = 23.0; // (var_fast_sodium_current__g_Na) [milliS_per_cm2]
        NV_Ith_S(this->mParameters, 2) = 0.28199999999999997; // (var_time_dependent_potassium_current__g_Kmax) [milliS_per_cm2]
    }

    CellLuoRudy1991FromCellMLCvode::~CellLuoRudy1991FromCellMLCvode()
    {
    }
    

    void CellLuoRudy1991FromCellMLCvode::VerifyStateVariables()
    {
        /* We only expect CVODE to keep state variables to within its tolerances,
         * not exactly the bounds prescribed to each variable that are checked here.
         *
         * For 99.99% of paces this->mAbsTol works,
         * For 99.999% of paces 10*this->mAbsTol is fine,
         * but unfortunately 100x seems to be required on rare occasions for upstrokes.
         * This sounds bad, but is probably typically only 1e-5 or 1e-6.
         */
        const double tol = 100*this->mAbsTol;
        N_Vector rY = rGetStateVariables();
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.00187018
        
        if (var_chaste_interface__fast_sodium_current_m_gate__m < 0.0 - tol || var_chaste_interface__fast_sodium_current_m_gate__m > 1.0 + tol)
        {
            EXCEPTION(DumpState("State variable fast_sodium_current_m_gate__m has gone out of range. Check numerical parameters, for example time and space stepsizes, and/or solver tolerances"));
        }
        
    }

    
    double CellLuoRudy1991FromCellMLCvode::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -83.853
        double var_chaste_interface__intracellular_calcium_concentration__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0002
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.00187018
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.9804713
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.98767124
        double var_chaste_interface__slow_inward_current_d_gate__d = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.00316354
        double var_chaste_interface__slow_inward_current_f_gate__f = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.99427859
        double var_chaste_interface__time_dependent_potassium_current_X_gate__X = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.16647703
        
        const double var_background_current__E_b = -59.869999999999997; // millivolt
        const double var_background_current__g_b = 0.039210000000000002; // milliS_per_cm2
        const double var_ionic_concentrations__Ki = 145.0; // millimolar
        const double var_ionic_concentrations__Ko = 5.4000000000000004; // millimolar
        const double var_ionic_concentrations__Nai = 18.0; // millimolar
        const double var_ionic_concentrations__Nao = 140.0; // millimolar
        const double var_membrane__F = 96484.600000000006; // coulomb_per_mole
        const double var_membrane__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(var_ionic_concentrations__Nao / var_ionic_concentrations__Nai) / var_membrane__F; // millivolt
        const double var_background_current__i_b = (-var_background_current__E_b + var_chaste_interface__membrane__V) * var_background_current__g_b; // microA_per_cm2
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 1) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j; // microA_per_cm2
        const double var_plateau_potassium_current__Kp = 1 / (1.0 + exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_plateau_potassium_current__g_Kp = 0.0183; // milliS_per_cm2
        const double var_slow_inward_current__E_si = 7.7000000000000002 - 13.028700000000001 * log(var_chaste_interface__intracellular_calcium_concentration__Cai); // millivolt
        const double var_slow_inward_current__i_si = (-var_slow_inward_current__E_si + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 0) * var_chaste_interface__slow_inward_current_d_gate__d * var_chaste_interface__slow_inward_current_f_gate__f; // microA_per_cm2
        const double var_time_dependent_potassium_current__PR_NaK = 0.018329999999999999; // dimensionless
        const double var_time_dependent_potassium_current__E_K = var_membrane__R * var_membrane__T * log((var_ionic_concentrations__Nao * var_time_dependent_potassium_current__PR_NaK + var_ionic_concentrations__Ko) / (var_ionic_concentrations__Nai * var_time_dependent_potassium_current__PR_NaK + var_ionic_concentrations__Ki)) / var_membrane__F; // millivolt
        const double var_time_dependent_potassium_current__g_K = 0.43033148291193518 * sqrt(var_ionic_concentrations__Ko) * NV_Ith_S(mParameters, 2); // milliS_per_cm2
        const double var_time_dependent_potassium_current_Xi_gate__Xi = ((var_chaste_interface__membrane__V > -100.0) ? (2.8370000000000002 * (-1.0 + exp(3.0800000000000001 + 0.040000000000000001 * var_chaste_interface__membrane__V)) / ((77.0 + var_chaste_interface__membrane__V) * exp(1.4000000000000001 + 0.040000000000000001 * var_chaste_interface__membrane__V))) : (1.0)); // dimensionless
        const double var_time_dependent_potassium_current__i_K = (-var_time_dependent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_time_dependent_potassium_current__g_K * var_chaste_interface__time_dependent_potassium_current_X_gate__X * var_time_dependent_potassium_current_Xi_gate__Xi; // microA_per_cm2
        const double var_time_independent_potassium_current__E_K1 = var_membrane__R * var_membrane__T * log(var_ionic_concentrations__Ko / var_ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_plateau_potassium_current__E_Kp = var_time_independent_potassium_current__E_K1; // millivolt
        const double var_plateau_potassium_current__i_Kp = (-var_plateau_potassium_current__E_Kp + var_chaste_interface__membrane__V) * var_plateau_potassium_current__Kp * var_plateau_potassium_current__g_Kp; // microA_per_cm2
        const double var_time_independent_potassium_current__g_K1 = 0.26022144771684724 * sqrt(var_ionic_concentrations__Ko); // milliS_per_cm2
        const double var_time_independent_potassium_current_K1_gate__alpha_K1 = 1.02 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_time_independent_potassium_current__E_K1)); // per_millisecond
        const double var_time_independent_potassium_current_K1_gate__beta_K1 = (exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_time_independent_potassium_current__E_K1) + 0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_time_independent_potassium_current__E_K1)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_time_independent_potassium_current__E_K1 - 0.51429999999999998 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_time_independent_potassium_current_K1_gate__K1_infinity = var_time_independent_potassium_current_K1_gate__alpha_K1 / (var_time_independent_potassium_current_K1_gate__alpha_K1 + var_time_independent_potassium_current_K1_gate__beta_K1); // dimensionless
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K1 + var_chaste_interface__membrane__V) * var_time_independent_potassium_current__g_K1 * var_time_independent_potassium_current_K1_gate__K1_infinity; // microA_per_cm2
        const double var_chaste_interface__i_ionic = var_background_current__i_b + var_fast_sodium_current__i_Na + var_plateau_potassium_current__i_Kp + var_slow_inward_current__i_si + var_time_dependent_potassium_current__i_K + var_time_independent_potassium_current__i_K1; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void CellLuoRudy1991FromCellMLCvode::EvaluateYDerivatives(double var_chaste_interface__environment__time, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -83.853
        double var_chaste_interface__intracellular_calcium_concentration__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0002
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.00187018
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.9804713
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.98767124
        double var_chaste_interface__slow_inward_current_d_gate__d = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.00316354
        double var_chaste_interface__slow_inward_current_f_gate__f = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.99427859
        double var_chaste_interface__time_dependent_potassium_current_X_gate__X = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.16647703

        // Mathematics
        double d_dt_chaste_interface_var_membrane__V;
        const double var_fast_sodium_current_h_gate__alpha_h = ((var_chaste_interface__membrane__V < -40.0) ? (0.13500000000000001 * exp(-11.764705882352942 - 0.14705882352941177 * var_chaste_interface__membrane__V)) : (0)); // per_millisecond
        const double var_fast_sodium_current_h_gate__beta_h = ((var_chaste_interface__membrane__V < -40.0) ? (310000.0 * exp(0.34999999999999998 * var_chaste_interface__membrane__V) + 3.5600000000000001 * exp(0.079000000000000001 * var_chaste_interface__membrane__V)) : (7.6923076923076916 / (1.0 + exp(-0.96036036036036043 - 0.0900900900900901 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current_h_gate__h = (1.0 - var_chaste_interface__fast_sodium_current_h_gate__h) * var_fast_sodium_current_h_gate__alpha_h - var_fast_sodium_current_h_gate__beta_h * var_chaste_interface__fast_sodium_current_h_gate__h; // 1 / millisecond
        const double var_fast_sodium_current_j_gate__alpha_j = ((var_chaste_interface__membrane__V < -40.0) ? ((37.780000000000001 + var_chaste_interface__membrane__V) * (-127140.0 * exp(0.24440000000000001 * var_chaste_interface__membrane__V) - 3.4740000000000003e-5 * exp(-0.043909999999999998 * var_chaste_interface__membrane__V)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V))) : (0)); // per_millisecond
        const double var_fast_sodium_current_j_gate__beta_j = ((var_chaste_interface__membrane__V < -40.0) ? (0.1212 * exp(-0.01052 * var_chaste_interface__membrane__V) / (1.0 + exp(-5.5312920000000005 - 0.13780000000000001 * var_chaste_interface__membrane__V))) : (0.29999999999999999 * exp(-2.5349999999999999e-7 * var_chaste_interface__membrane__V) / (1.0 + exp(-3.2000000000000002 - 0.10000000000000001 * var_chaste_interface__membrane__V)))); // per_millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current_j_gate__j = (1.0 - var_chaste_interface__fast_sodium_current_j_gate__j) * var_fast_sodium_current_j_gate__alpha_j - var_fast_sodium_current_j_gate__beta_j * var_chaste_interface__fast_sodium_current_j_gate__j; // 1 / millisecond
        const double var_fast_sodium_current_m_gate__alpha_m = 0.32000000000000001 * (47.130000000000003 + var_chaste_interface__membrane__V) / (1.0 - exp(-4.7130000000000001 - 0.10000000000000001 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_fast_sodium_current_m_gate__beta_m = 0.080000000000000002 * exp(-0.090909090909090912 * var_chaste_interface__membrane__V); // per_millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current_m_gate__m = (1.0 - var_chaste_interface__fast_sodium_current_m_gate__m) * var_fast_sodium_current_m_gate__alpha_m - var_fast_sodium_current_m_gate__beta_m * var_chaste_interface__fast_sodium_current_m_gate__m; // 1 / millisecond
        const double var_slow_inward_current__E_si = 7.7000000000000002 - 13.028700000000001 * log(var_chaste_interface__intracellular_calcium_concentration__Cai); // millivolt
        const double var_slow_inward_current_d_gate__alpha_d = 0.095000000000000001 * exp(0.050000000000000003 - 0.01 * var_chaste_interface__membrane__V) / (1.0 + exp(0.35999999999999999 - 0.071999999999999995 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_slow_inward_current_d_gate__beta_d = 0.070000000000000007 * exp(-0.748 - 0.017000000000000001 * var_chaste_interface__membrane__V) / (1.0 + exp(2.2000000000000002 + 0.050000000000000003 * var_chaste_interface__membrane__V)); // per_millisecond
        const double d_dt_chaste_interface_var_slow_inward_current_d_gate__d = (1.0 - var_chaste_interface__slow_inward_current_d_gate__d) * var_slow_inward_current_d_gate__alpha_d - var_slow_inward_current_d_gate__beta_d * var_chaste_interface__slow_inward_current_d_gate__d; // 1 / millisecond
        const double var_slow_inward_current_f_gate__alpha_f = 0.012 * exp(-0.224 - 0.0080000000000000002 * var_chaste_interface__membrane__V) / (1.0 + exp(4.2000000000000002 + 0.14999999999999999 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_slow_inward_current_f_gate__beta_f = 0.0064999999999999997 * exp(-0.59999999999999998 - 0.02 * var_chaste_interface__membrane__V) / (1.0 + exp(-6.0 - 0.20000000000000001 * var_chaste_interface__membrane__V)); // per_millisecond
        const double d_dt_chaste_interface_var_slow_inward_current_f_gate__f = (1.0 - var_chaste_interface__slow_inward_current_f_gate__f) * var_slow_inward_current_f_gate__alpha_f - var_slow_inward_current_f_gate__beta_f * var_chaste_interface__slow_inward_current_f_gate__f; // 1 / millisecond
        const double var_slow_inward_current__i_si = (-var_slow_inward_current__E_si + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 0) * var_chaste_interface__slow_inward_current_d_gate__d * var_chaste_interface__slow_inward_current_f_gate__f; // microA_per_cm2
        const double d_dt_chaste_interface_var_intracellular_calcium_concentration__Cai = 7.0000000000000007e-6 - 0.070000000000000007 * var_chaste_interface__intracellular_calcium_concentration__Cai - 0.0001 * var_slow_inward_current__i_si; // millimolar / millisecond
        const double var_time_dependent_potassium_current_X_gate__alpha_X = 0.00050000000000000001 * exp(4.1500000000000004 + 0.083000000000000004 * var_chaste_interface__membrane__V) / (1.0 + exp(2.8500000000000001 + 0.057000000000000002 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_time_dependent_potassium_current_X_gate__beta_X = 0.0012999999999999999 * exp(-1.2 - 0.059999999999999998 * var_chaste_interface__membrane__V) / (1.0 + exp(-0.80000000000000004 - 0.040000000000000001 * var_chaste_interface__membrane__V)); // per_millisecond
        const double d_dt_chaste_interface_var_time_dependent_potassium_current_X_gate__X = (1.0 - var_chaste_interface__time_dependent_potassium_current_X_gate__X) * var_time_dependent_potassium_current_X_gate__alpha_X - var_chaste_interface__time_dependent_potassium_current_X_gate__X * var_time_dependent_potassium_current_X_gate__beta_X; // 1 / millisecond

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_membrane__V = 0.0;
        }
        else
        {
            const double var_background_current__E_b = -59.869999999999997; // millivolt
            const double var_background_current__g_b = 0.039210000000000002; // milliS_per_cm2
            const double var_ionic_concentrations__Ki = 145.0; // millimolar
            const double var_ionic_concentrations__Ko = 5.4000000000000004; // millimolar
            const double var_ionic_concentrations__Nai = 18.0; // millimolar
            const double var_ionic_concentrations__Nao = 140.0; // millimolar
            const double var_membrane__C = 1.0; // microF_per_cm2
            const double var_membrane__F = 96484.600000000006; // coulomb_per_mole
            const double var_membrane__I_stim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // microA_per_cm2
            const double var_membrane__R = 8314.0; // joule_per_kilomole_kelvin
            const double var_membrane__T = 310.0; // kelvin
            const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(var_ionic_concentrations__Nao / var_ionic_concentrations__Nai) / var_membrane__F; // millivolt
            const double var_background_current__i_b = (-var_background_current__E_b + var_chaste_interface__membrane__V) * var_background_current__g_b; // microA_per_cm2
            const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 1) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j; // microA_per_cm2
            const double var_plateau_potassium_current__Kp = 1 / (1.0 + exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V)); // dimensionless
            const double var_plateau_potassium_current__g_Kp = 0.0183; // milliS_per_cm2
            const double var_time_dependent_potassium_current__PR_NaK = 0.018329999999999999; // dimensionless
            const double var_time_dependent_potassium_current__E_K = var_membrane__R * var_membrane__T * log((var_ionic_concentrations__Nao * var_time_dependent_potassium_current__PR_NaK + var_ionic_concentrations__Ko) / (var_ionic_concentrations__Nai * var_time_dependent_potassium_current__PR_NaK + var_ionic_concentrations__Ki)) / var_membrane__F; // millivolt
            const double var_time_dependent_potassium_current__g_K = 0.43033148291193518 * sqrt(var_ionic_concentrations__Ko) * NV_Ith_S(mParameters, 2); // milliS_per_cm2
            const double var_time_dependent_potassium_current_Xi_gate__Xi = ((var_chaste_interface__membrane__V > -100.0) ? (2.8370000000000002 * (-1.0 + exp(3.0800000000000001 + 0.040000000000000001 * var_chaste_interface__membrane__V)) / ((77.0 + var_chaste_interface__membrane__V) * exp(1.4000000000000001 + 0.040000000000000001 * var_chaste_interface__membrane__V))) : (1.0)); // dimensionless
            const double var_time_dependent_potassium_current__i_K = (-var_time_dependent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_time_dependent_potassium_current__g_K * var_chaste_interface__time_dependent_potassium_current_X_gate__X * var_time_dependent_potassium_current_Xi_gate__Xi; // microA_per_cm2
            const double var_time_independent_potassium_current__E_K1 = var_membrane__R * var_membrane__T * log(var_ionic_concentrations__Ko / var_ionic_concentrations__Ki) / var_membrane__F; // millivolt
            const double var_plateau_potassium_current__E_Kp = var_time_independent_potassium_current__E_K1; // millivolt
            const double var_plateau_potassium_current__i_Kp = (-var_plateau_potassium_current__E_Kp + var_chaste_interface__membrane__V) * var_plateau_potassium_current__Kp * var_plateau_potassium_current__g_Kp; // microA_per_cm2
            const double var_time_independent_potassium_current__g_K1 = 0.26022144771684724 * sqrt(var_ionic_concentrations__Ko); // milliS_per_cm2
            const double var_time_independent_potassium_current_K1_gate__alpha_K1 = 1.02 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_time_independent_potassium_current__E_K1)); // per_millisecond
            const double var_time_independent_potassium_current_K1_gate__beta_K1 = (exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_time_independent_potassium_current__E_K1) + 0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_time_independent_potassium_current__E_K1)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_time_independent_potassium_current__E_K1 - 0.51429999999999998 * var_chaste_interface__membrane__V)); // per_millisecond
            const double var_time_independent_potassium_current_K1_gate__K1_infinity = var_time_independent_potassium_current_K1_gate__alpha_K1 / (var_time_independent_potassium_current_K1_gate__alpha_K1 + var_time_independent_potassium_current_K1_gate__beta_K1); // dimensionless
            const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K1 + var_chaste_interface__membrane__V) * var_time_independent_potassium_current__g_K1 * var_time_independent_potassium_current_K1_gate__K1_infinity; // microA_per_cm2
            d_dt_chaste_interface_var_membrane__V = -1.0 * (var_background_current__i_b + var_fast_sodium_current__i_Na + var_membrane__I_stim + var_plateau_potassium_current__i_Kp + var_slow_inward_current__i_si + var_time_dependent_potassium_current__i_K + var_time_independent_potassium_current__i_K1) / var_membrane__C; // millivolt / millisecond
        }
        
        NV_Ith_S(rDY,0) = d_dt_chaste_interface_var_membrane__V;
        NV_Ith_S(rDY,1) = d_dt_chaste_interface_var_intracellular_calcium_concentration__Cai;
        NV_Ith_S(rDY,2) = d_dt_chaste_interface_var_fast_sodium_current_m_gate__m;
        NV_Ith_S(rDY,3) = d_dt_chaste_interface_var_fast_sodium_current_h_gate__h;
        NV_Ith_S(rDY,4) = d_dt_chaste_interface_var_fast_sodium_current_j_gate__j;
        NV_Ith_S(rDY,5) = d_dt_chaste_interface_var_slow_inward_current_d_gate__d;
        NV_Ith_S(rDY,6) = d_dt_chaste_interface_var_slow_inward_current_f_gate__f;
        NV_Ith_S(rDY,7) = d_dt_chaste_interface_var_time_dependent_potassium_current_X_gate__X;
    }

    void CellLuoRudy1991FromCellMLCvode::EvaluateAnalyticJacobian(double var_chaste_interface__environment__time, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -83.853
        double var_chaste_interface__intracellular_calcium_concentration__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0002
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.00187018
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.9804713
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.98767124
        double var_chaste_interface__slow_inward_current_d_gate__d = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.00316354
        double var_chaste_interface__slow_inward_current_f_gate__f = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.99427859
        double var_chaste_interface__time_dependent_potassium_current_X_gate__X = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.16647703
        
        const double var_x0 = exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V);
        const double var_x1 = 1.0 + var_x0;
        const double var_x2 = exp(6.8396795587418966 + 0.23849999999999999 * var_chaste_interface__membrane__V);
        const double var_x3 = 1.0 + var_x2;
        const double var_x4 = 1 / var_x3;
        const double var_x5 = exp(-47.64778725140863 - 0.51429999999999998 * var_chaste_interface__membrane__V);
        const double var_x6 = 1.0 + var_x5;
        const double var_x7 = 1 / var_x6;
        const double var_x8 = exp(-31.271255819172691 + 0.061749999999999999 * var_chaste_interface__membrane__V);
        const double var_x9 = exp(7.4993901856526177 + 0.080320000000000003 * var_chaste_interface__membrane__V);
        const double var_x10 = var_x8 + 0.49124000000000001 * var_x9;
        const double var_x11 = var_x10 * var_x7;
        const double var_x12 = 1 / (var_x11 + 1.02 * var_x4);
        const double var_x13 = NV_Ith_S(mParameters, 0) * var_chaste_interface__slow_inward_current_d_gate__d * var_chaste_interface__slow_inward_current_f_gate__f;
        const double var_x14 = 87.892901713802502 + var_chaste_interface__membrane__V;
        const double var_x15 = 0.040000000000000001 * var_chaste_interface__membrane__V;
        const double var_x16 = exp(3.0800000000000001 + var_x15);
        const double var_x17 = -1.0 + var_x16;
        const double var_x18 = 1 / exp(1.4000000000000001 + var_x15);
        const double var_x19 = var_x18 / (77.0 + var_chaste_interface__membrane__V);
        const double var_x20 = var_x17 * var_x19;
        const double var_x21 = var_chaste_interface__membrane__V > -100.0;
        const double var_x22 = ((var_x21) ? (2.8370000000000002 * var_x20) : (1.0)) * NV_Ith_S(mParameters, 2);
        const double var_x23 = -77.567584385319392 - 1.0 * var_chaste_interface__membrane__V;
        const double var_x24 = var_x2 / pow(var_x3, 2);
        const double var_x25 = NV_Ith_S(mParameters, 1) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j;
        const double var_x26 = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3);
        const double var_x27 = var_x13 / var_chaste_interface__intracellular_calcium_concentration__Cai;
        const double var_x28 = -54.794463935091848 + var_chaste_interface__membrane__V;
        const double var_x29 = var_x26 * var_x28 * NV_Ith_S(mParameters, 1);
        const double var_x30 = log(var_chaste_interface__intracellular_calcium_concentration__Cai);
        const double var_x31 = (7.7000000000000002 - 1.0 * var_chaste_interface__membrane__V - 13.028700000000001 * var_x30) * NV_Ith_S(mParameters, 0);
        const double var_x32 = (0.00077000000000000007 - 0.0001 * var_chaste_interface__membrane__V - 0.00130287 * var_x30) * NV_Ith_S(mParameters, 0);
        const double var_x33 = 1.0 - var_chaste_interface__fast_sodium_current_m_gate__m;
        const double var_x34 = -0.10000000000000001 * var_chaste_interface__membrane__V;
        const double var_x35 = exp(-4.7130000000000001 + var_x34);
        const double var_x36 = 1.0 - var_x35;
        const double var_x37 = 0.32000000000000001 / var_x36;
        const double var_x38 = exp(-0.090909090909090912 * var_chaste_interface__membrane__V);
        const double var_x39 = 47.130000000000003 + var_chaste_interface__membrane__V;
        const double var_x40 = exp(-11.764705882352942 - 0.14705882352941177 * var_chaste_interface__membrane__V);
        const double var_x41 = var_chaste_interface__membrane__V < -40.0;
        const double var_x42 = exp(0.079000000000000001 * var_chaste_interface__membrane__V);
        const double var_x43 = exp(0.34999999999999998 * var_chaste_interface__membrane__V);
        const double var_x44 = exp(-0.96036036036036043 - 0.0900900900900901 * var_chaste_interface__membrane__V);
        const double var_x45 = 1.0 + var_x44;
        const double var_x46 = exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V);
        const double var_x47 = 1.0 + var_x46;
        const double var_x48 = 1 / var_x47;
        const double var_x49 = exp(0.24440000000000001 * var_chaste_interface__membrane__V);
        const double var_x50 = exp(-0.043909999999999998 * var_chaste_interface__membrane__V);
        const double var_x51 = -127140.0 * var_x49 - 3.4740000000000003e-5 * var_x50;
        const double var_x52 = var_x48 * var_x51;
        const double var_x53 = 37.780000000000001 + var_chaste_interface__membrane__V;
        const double var_x54 = exp(-5.5312920000000005 - 0.13780000000000001 * var_chaste_interface__membrane__V);
        const double var_x55 = 1.0 + var_x54;
        const double var_x56 = exp(-0.01052 * var_chaste_interface__membrane__V);
        const double var_x57 = var_x56 / var_x55;
        const double var_x58 = exp(-3.2000000000000002 + var_x34);
        const double var_x59 = 1.0 + var_x58;
        const double var_x60 = exp(-2.5349999999999999e-7 * var_chaste_interface__membrane__V);
        const double var_x61 = var_x60 / var_x59;
        const double var_x62 = exp(2.2000000000000002 + 0.050000000000000003 * var_chaste_interface__membrane__V);
        const double var_x63 = 1.0 + var_x62;
        const double var_x64 = exp(-0.748 - 0.017000000000000001 * var_chaste_interface__membrane__V);
        const double var_x65 = var_x64 / var_x63;
        const double var_x66 = 1.0 - var_chaste_interface__slow_inward_current_d_gate__d;
        const double var_x67 = exp(0.35999999999999999 - 0.071999999999999995 * var_chaste_interface__membrane__V);
        const double var_x68 = 1.0 + var_x67;
        const double var_x69 = exp(0.050000000000000003 - 0.01 * var_chaste_interface__membrane__V);
        const double var_x70 = var_x69 / var_x68;
        const double var_x71 = exp(-6.0 - 0.20000000000000001 * var_chaste_interface__membrane__V);
        const double var_x72 = 1.0 + var_x71;
        const double var_x73 = exp(-0.59999999999999998 - 0.02 * var_chaste_interface__membrane__V);
        const double var_x74 = var_x73 / var_x72;
        const double var_x75 = 1.0 - var_chaste_interface__slow_inward_current_f_gate__f;
        const double var_x76 = exp(4.2000000000000002 + 0.14999999999999999 * var_chaste_interface__membrane__V);
        const double var_x77 = 1.0 + var_x76;
        const double var_x78 = exp(-0.224 - 0.0080000000000000002 * var_chaste_interface__membrane__V);
        const double var_x79 = var_x78 / var_x77;
        const double var_x80 = exp(-0.80000000000000004 - var_x15);
        const double var_x81 = 1.0 + var_x80;
        const double var_x82 = exp(-1.2 - 0.059999999999999998 * var_chaste_interface__membrane__V);
        const double var_x83 = var_x82 / var_x81;
        const double var_x84 = 1.0 - var_chaste_interface__time_dependent_potassium_current_X_gate__X;
        const double var_x85 = exp(2.8500000000000001 + 0.057000000000000002 * var_chaste_interface__membrane__V);
        const double var_x86 = 1.0 + var_x85;
        const double var_x87 = exp(4.1500000000000004 + 0.083000000000000004 * var_chaste_interface__membrane__V);
        const double var_x88 = var_x87 / var_x86;
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = mSetVoltageDerivativeToZero ? 0.0 : (-0.039210000000000002 - 1.0 * var_x13 - 0.0183 / var_x1 - var_x25 * var_x26 - 0.61679400000000006 * var_x12 * var_x4 - 1.0 * var_x22 * var_chaste_interface__time_dependent_potassium_current_X_gate__X + 0.14710536899999999 * var_x12 * var_x14 * var_x24 - 0.003060200668896321 * var_x0 * var_x14 / pow(var_x1, 2) + var_x23 * ((var_x21) ? (-0.11348000000000001 * var_x20 + 0.11348000000000001 * var_x16 * var_x19 - 0.0004784955304435824 * var_x17 * var_x18 / pow((1 + 0.012987012987012988 * var_chaste_interface__membrane__V), 2)) : (0)) * NV_Ith_S(mParameters, 2) * var_chaste_interface__time_dependent_potassium_current_X_gate__X - 0.59284313725490201 * var_x14 * var_x4 * (0.24326999999999999 * var_x24 - var_x7 * (0.061749999999999999 * var_x8 + 0.039456396800000001 * var_x9) - 0.51429999999999998 * var_x10 * var_x5 / pow(var_x6, 2)) / pow((var_x4 + 0.98039215686274506 * var_x11), 2));
        IJth(rJacobian, 1, 0) = -0.0001 * var_x13;
        IJth(rJacobian, 2, 0) = var_x33 * var_x37 + 0.0072727272727272727 * var_x38 * var_chaste_interface__fast_sodium_current_m_gate__m - 0.032000000000000001 * var_x33 * var_x35 * var_x39 / pow(var_x36, 2);
        IJth(rJacobian, 3, 0) = (1.0 - var_chaste_interface__fast_sodium_current_h_gate__h) * ((var_x41) ? (-0.019852941176470591 * var_x40) : (0)) - ((var_x41) ? (0.28123999999999999 * var_x42 + 108500.0 * var_x43) : (0.693000693000693 * var_x44 / pow(var_x45, 2))) * var_chaste_interface__fast_sodium_current_h_gate__h;
        IJth(rJacobian, 4, 0) = (1.0 - var_chaste_interface__fast_sodium_current_j_gate__j) * ((var_x41) ? (var_x52 + var_x48 * var_x53 * (1.5254334000000001e-6 * var_x50 - 31073.016 * var_x49) - 0.311 * var_x46 * var_x51 * var_x53 / pow(var_x47, 2)) : (0)) - ((var_x41) ? (-0.001275024 * var_x57 + 0.016701360000000002 * var_x54 * var_x56 / pow(var_x55, 2)) : (-7.6049999999999996e-8 * var_x61 + 0.029999999999999999 * var_x58 * var_x60 / pow(var_x59, 2))) * var_chaste_interface__fast_sodium_current_j_gate__j;
        IJth(rJacobian, 5, 0) = 0.0011900000000000003 * var_x65 * var_chaste_interface__slow_inward_current_d_gate__d - 0.00095 * var_x66 * var_x70 + 0.0068399999999999997 * var_x66 * var_x67 * var_x69 / pow(var_x68, 2) + 0.0035000000000000005 * var_x62 * var_x64 * var_chaste_interface__slow_inward_current_d_gate__d / pow(var_x63, 2);
        IJth(rJacobian, 6, 0) = 0.00012999999999999999 * var_x74 * var_chaste_interface__slow_inward_current_f_gate__f - 9.6000000000000002e-5 * var_x75 * var_x79 - 0.0018 * var_x75 * var_x76 * var_x78 / pow(var_x77, 2) - 0.0012999999999999999 * var_x71 * var_x73 * var_chaste_interface__slow_inward_current_f_gate__f / pow(var_x72, 2);
        IJth(rJacobian, 7, 0) = 7.7999999999999999e-5 * var_x83 * var_chaste_interface__time_dependent_potassium_current_X_gate__X + 4.1500000000000006e-5 * var_x84 * var_x88 - 5.1999999999999997e-5 * var_x80 * var_x82 * var_chaste_interface__time_dependent_potassium_current_X_gate__X / pow(var_x81, 2) - 2.8500000000000002e-5 * var_x84 * var_x85 * var_x87 / pow(var_x86, 2);
        IJth(rJacobian, 0, 1) = mSetVoltageDerivativeToZero ? 0.0 : (-13.028700000000001 * var_x27);
        IJth(rJacobian, 1, 1) = -0.070000000000000007 - 0.00130287 * var_x27;
        IJth(rJacobian, 0, 2) = mSetVoltageDerivativeToZero ? 0.0 : (-3.0 * var_x25 * var_x28 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 2));
        IJth(rJacobian, 2, 2) = -0.080000000000000002 * var_x38 - var_x37 * var_x39;
        IJth(rJacobian, 0, 3) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x29 * var_chaste_interface__fast_sodium_current_j_gate__j);
        IJth(rJacobian, 3, 3) = -((var_x41) ? (0.13500000000000001 * var_x40) : (0)) - ((var_x41) ? (310000.0 * var_x43 + 3.5600000000000001 * var_x42) : (7.6923076923076916 / var_x45));
        IJth(rJacobian, 0, 4) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x29 * var_chaste_interface__fast_sodium_current_h_gate__h);
        IJth(rJacobian, 4, 4) = -((var_x41) ? (0.1212 * var_x57) : (0.29999999999999999 * var_x61)) - ((var_x41) ? (var_x52 * var_x53) : (0));
        IJth(rJacobian, 0, 5) = mSetVoltageDerivativeToZero ? 0.0 : (var_x31 * var_chaste_interface__slow_inward_current_f_gate__f);
        IJth(rJacobian, 1, 5) = var_x32 * var_chaste_interface__slow_inward_current_f_gate__f;
        IJth(rJacobian, 5, 5) = -0.070000000000000007 * var_x65 - 0.095000000000000001 * var_x70;
        IJth(rJacobian, 0, 6) = mSetVoltageDerivativeToZero ? 0.0 : (var_x31 * var_chaste_interface__slow_inward_current_d_gate__d);
        IJth(rJacobian, 1, 6) = var_x32 * var_chaste_interface__slow_inward_current_d_gate__d;
        IJth(rJacobian, 6, 6) = -0.012 * var_x79 - 0.0064999999999999997 * var_x74;
        IJth(rJacobian, 0, 7) = mSetVoltageDerivativeToZero ? 0.0 : (var_x22 * var_x23);
        IJth(rJacobian, 7, 7) = -0.00050000000000000001 * var_x88 - 0.0012999999999999999 * var_x83;
    }

    N_Vector CellLuoRudy1991FromCellMLCvode::ComputeDerivedQuantities(double var_chaste_interface__environment__time, const N_Vector & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -83.853
        double var_chaste_interface__time_dependent_potassium_current_X_gate__X = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.16647703
        
        // Mathematics
        const double var_ionic_concentrations__Ki = 145.0; // millimolar
        const double var_ionic_concentrations__Ko = 5.4000000000000004; // millimolar
        const double var_ionic_concentrations__Nai = 18.0; // millimolar
        const double var_ionic_concentrations__Nao = 140.0; // millimolar
        const double var_membrane__F = 96484.600000000006; // coulomb_per_mole
        const double var_membrane__I_stim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // microA_per_cm2
        const double var_membrane__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_membrane__FonRT = var_membrane__F / (var_membrane__R * var_membrane__T); // per_millivolt
        const double var_plateau_potassium_current__Kp = 1 / (1.0 + exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_plateau_potassium_current__g_Kp = 0.0183; // milliS_per_cm2
        const double var_time_dependent_potassium_current__PR_NaK = 0.018329999999999999; // dimensionless
        const double var_time_dependent_potassium_current__E_K = var_membrane__R * var_membrane__T * log((var_ionic_concentrations__Nao * var_time_dependent_potassium_current__PR_NaK + var_ionic_concentrations__Ko) / (var_ionic_concentrations__Nai * var_time_dependent_potassium_current__PR_NaK + var_ionic_concentrations__Ki)) / var_membrane__F; // millivolt
        const double var_time_dependent_potassium_current__g_K = 0.43033148291193518 * sqrt(var_ionic_concentrations__Ko) * NV_Ith_S(mParameters, 2); // milliS_per_cm2
        const double var_time_dependent_potassium_current_Xi_gate__Xi = ((var_chaste_interface__membrane__V > -100.0) ? (2.8370000000000002 * (-1.0 + exp(3.0800000000000001 + 0.040000000000000001 * var_chaste_interface__membrane__V)) / ((77.0 + var_chaste_interface__membrane__V) * exp(1.4000000000000001 + 0.040000000000000001 * var_chaste_interface__membrane__V))) : (1.0)); // dimensionless
        const double var_time_dependent_potassium_current__i_K = (-var_time_dependent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_time_dependent_potassium_current__g_K * var_chaste_interface__time_dependent_potassium_current_X_gate__X * var_time_dependent_potassium_current_Xi_gate__Xi; // microA_per_cm2
        const double var_time_independent_potassium_current__E_K1 = var_membrane__R * var_membrane__T * log(var_ionic_concentrations__Ko / var_ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_plateau_potassium_current__E_Kp = var_time_independent_potassium_current__E_K1; // millivolt
        const double var_plateau_potassium_current__i_Kp = (-var_plateau_potassium_current__E_Kp + var_chaste_interface__membrane__V) * var_plateau_potassium_current__Kp * var_plateau_potassium_current__g_Kp; // microA_per_cm2
        const double var_time_independent_potassium_current__g_K1 = 0.26022144771684724 * sqrt(var_ionic_concentrations__Ko); // milliS_per_cm2
        const double var_time_independent_potassium_current_K1_gate__alpha_K1 = 1.02 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_time_independent_potassium_current__E_K1)); // per_millisecond
        const double var_time_independent_potassium_current_K1_gate__beta_K1 = (exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_time_independent_potassium_current__E_K1) + 0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_time_independent_potassium_current__E_K1)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_time_independent_potassium_current__E_K1 - 0.51429999999999998 * var_chaste_interface__membrane__V)); // per_millisecond
        const double var_time_independent_potassium_current_K1_gate__K1_infinity = var_time_independent_potassium_current_K1_gate__alpha_K1 / (var_time_independent_potassium_current_K1_gate__alpha_K1 + var_time_independent_potassium_current_K1_gate__beta_K1); // dimensionless
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K1 + var_chaste_interface__membrane__V) * var_time_independent_potassium_current__g_K1 * var_time_independent_potassium_current_K1_gate__K1_infinity; // microA_per_cm2
        const double var_membrane__potassium_currents = var_plateau_potassium_current__i_Kp + var_time_dependent_potassium_current__i_K + var_time_independent_potassium_current__i_K1; // microA_per_cm2

        N_Vector dqs = N_VNew_Serial(4);
        NV_Ith_S(dqs, 0) = var_membrane__FonRT;
        NV_Ith_S(dqs, 1) = var_membrane__I_stim;
        NV_Ith_S(dqs, 2) = var_membrane__potassium_currents;
        NV_Ith_S(dqs, 3) = var_chaste_interface__environment__time;
        return dqs;
    }

template<>
void OdeSystemInformation<CellLuoRudy1991FromCellMLCvode>::Initialise(void)
{
    this->mSystemName = "luo_rudy_1991";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";

    // NV_Ith_S(rY, 0):
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-83.853);

    // NV_Ith_S(rY, 1):
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0002);

    // NV_Ith_S(rY, 2):
    this->mVariableNames.push_back("fast_sodium_current_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00187018);

    // NV_Ith_S(rY, 3):
    this->mVariableNames.push_back("fast_sodium_current_h_gate__h");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9804713);

    // NV_Ith_S(rY, 4):
    this->mVariableNames.push_back("fast_sodium_current_j_gate__j");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.98767124);

    // NV_Ith_S(rY, 5):
    this->mVariableNames.push_back("slow_inward_current_d_gate__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00316354);

    // NV_Ith_S(rY, 6):
    this->mVariableNames.push_back("slow_inward_current_f_gate__f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99427859);

    // NV_Ith_S(rY, 7):
    this->mVariableNames.push_back("time_dependent_potassium_current_X_gate__X");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.16647703);

    // mParameters[0]:
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_cm2");

    // mParameters[1]:
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_cm2");

    // mParameters[2]:
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("milliS_per_cm2");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("FonRT");
    this->mDerivedQuantityUnits.push_back("per_millivolt");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("microA_per_cm2");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("potassium_currents");
    this->mDerivedQuantityUnits.push_back("microA_per_cm2");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    
    this->mAttributes["SuggestedCycleLength"] = 750;
    
    this->mAttributes["SuggestedForwardEulerTimestep"] = 0.005;
    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(CellLuoRudy1991FromCellMLCvode)

#endif // CHASTE_CVODE
