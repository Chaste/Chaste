#ifdef CHASTE_CVODE
//! @file
//!
//! This source file was generated from CellML by chaste_codegen version 0.3.0
//!
//! Model: LR_Dynamic_model_2000
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: normal)
//! on 2020-08-04 18:32:33
//!
//! <autogenerated>

#include "FaberRudy2000Cvode.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"


    double CellFaberRudy2000FromCellMLCvode::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }
    
    CellFaberRudy2000FromCellMLCvode::CellFaberRudy2000FromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                25,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<CellFaberRudy2000FromCellMLCvode>::Instance();
        Init();
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
        
        NV_Ith_S(this->mParameters, 0) = 1.0; // (var_rapid_delayed_rectifier_potassium_current__ScaleFactorGkr) [dimensionless]
        NV_Ith_S(this->mParameters, 1) = 1.0; // (var_slow_delayed_rectifier_potassium_current__ScaleFactorGks) [dimensionless]
        NV_Ith_S(this->mParameters, 2) = 0; // (var_transient_outward_current__ScaleFactorIto) [dimensionless]
    }

    CellFaberRudy2000FromCellMLCvode::~CellFaberRudy2000FromCellMLCvode()
    {
    }
    
    double CellFaberRudy2000FromCellMLCvode::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -90.0
        double var_chaste_interface__calcium_dynamics__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 6e-05
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.0008
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.993771
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.995727
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 3.210618e-06
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.999837
        double var_chaste_interface__T_type_Ca_channel_b_gate__b = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.000970231
        double var_chaste_interface__T_type_Ca_channel_g_gate__g = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.994305
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr_gate__xr = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.000124042
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.00445683
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.00445683
        double var_chaste_interface__transient_outward_current_zdv_gate__zdv = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.5
        double var_chaste_interface__transient_outward_current_ydv_gate__ydv = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.5
        double var_chaste_interface__ionic_concentrations__Nai = NV_Ith_S(rY, 23);
        // Units: millimolar; Initial value: 9.0
        double var_chaste_interface__ionic_concentrations__Ki = NV_Ith_S(rY, 24);
        // Units: millimolar; Initial value: 141.2
        
        const double var_ATP_sensitive_potassium_current__ATPi = 3.0; // millimolar
        const double var_ATP_sensitive_potassium_current__hATP = 2.0; // dimensionless
        const double var_ATP_sensitive_potassium_current__i_K_ATP_on = 1.0; // dimensionless
        const double var_ATP_sensitive_potassium_current__kATP = 0.00025000000000000001; // millimolar
        const double var_ATP_sensitive_potassium_current__nATP = 0.23999999999999999; // dimensionless
        const double var_ATP_sensitive_potassium_current__nicholsarea = 5.0000000000000002e-5; // dimensionless
        const double var_ATP_sensitive_potassium_current__g_K_ATP = 0.000193 * var_ATP_sensitive_potassium_current__i_K_ATP_on / var_ATP_sensitive_potassium_current__nicholsarea; // milliS_per_microF
        const double var_ATP_sensitive_potassium_current__pATP = 1 / (1.0 + pow((var_ATP_sensitive_potassium_current__ATPi / var_ATP_sensitive_potassium_current__kATP), var_ATP_sensitive_potassium_current__hATP)); // dimensionless
        const double var_L_type_Ca_channel__P_Ca = 0.00054000000000000001; // cm_per_second
        const double var_L_type_Ca_channel__P_K = 1.9299999999999999e-7; // cm_per_second
        const double var_L_type_Ca_channel__P_Na = 6.75e-7; // cm_per_second
        const double var_L_type_Ca_channel__gamma_Cai = 1.0; // dimensionless
        const double var_L_type_Ca_channel__gamma_Cao = 0.34100000000000003; // dimensionless
        const double var_L_type_Ca_channel__gamma_Ki = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Ko = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nai = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nao = 0.75; // dimensionless
        const double var_L_type_Ca_channel_f_Ca_gate__Km_Ca = 0.00059999999999999995; // millimolar
        const double var_Na_Ca_exchanger__c1 = 0.00025000000000000001; // microA_per_microF
        const double var_Na_Ca_exchanger__c2 = 0.0001; // millimolar
        const double var_Na_Ca_exchanger__gamma = 0.14999999999999999; // dimensionless
        const double var_T_type_Ca_channel__g_CaT = 0.050000000000000003; // milliS_per_microF
        const double var_calcium_background_current__g_Cab = 0.003016; // milliS_per_microF
        const double var_L_type_Ca_channel_f_Ca_gate__f_Ca = 1 / (1.0 + var_chaste_interface__calcium_dynamics__Cai / var_L_type_Ca_channel_f_Ca_gate__Km_Ca); // dimensionless
        const double var_calcium_dynamics__Cao = 1.8; // millimolar
        const double var_fast_sodium_current__g_Na = 16.0; // milliS_per_microF
        const double var_ionic_concentrations__Ko = 4.5; // millimolar
        const double var_ATP_sensitive_potassium_current__GKbaraATP = pow((0.25 * var_ionic_concentrations__Ko), var_ATP_sensitive_potassium_current__nATP) * var_ATP_sensitive_potassium_current__g_K_ATP * var_ATP_sensitive_potassium_current__pATP; // milliS_per_microF
        const double var_ionic_concentrations__Nao = 132.0; // millimolar
        const double var_membrane__F = 96485.0; // coulomb_per_mole
        const double var_membrane__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_calcium_background_current__E_Ca = 0.5 * var_membrane__R * var_membrane__T * log(var_calcium_dynamics__Cao / var_chaste_interface__calcium_dynamics__Cai) / var_membrane__F; // millivolt
        const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(var_ionic_concentrations__Nao / var_chaste_interface__ionic_concentrations__Nai) / var_membrane__F; // millivolt
        const double var_L_type_Ca_channel__I_CaCa = 4.0 * pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Cao * var_calcium_dynamics__Cao + var_L_type_Ca_channel__gamma_Cai * var_chaste_interface__calcium_dynamics__Cai * exp(2.0 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_L_type_Ca_channel__P_Ca * var_chaste_interface__membrane__V / ((-1.0 + exp(2.0 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaK = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Ko * var_ionic_concentrations__Ko + var_L_type_Ca_channel__gamma_Ki * var_chaste_interface__ionic_concentrations__Ki * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_L_type_Ca_channel__P_K * var_chaste_interface__membrane__V / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaNa = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Nao * var_ionic_concentrations__Nao + var_L_type_Ca_channel__gamma_Nai * var_chaste_interface__ionic_concentrations__Nai * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_L_type_Ca_channel__P_Na * var_chaste_interface__membrane__V / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_L_type_Ca_channel__i_CaCa = var_L_type_Ca_channel__I_CaCa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaK = var_L_type_Ca_channel__I_CaK * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaNa = var_L_type_Ca_channel__I_CaNa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_CaCa + var_L_type_Ca_channel__i_CaK + var_L_type_Ca_channel__i_CaNa; // microA_per_microF
        const double var_Na_Ca_exchanger__i_NaCa = (-pow(var_ionic_concentrations__Nao, 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * var_calcium_dynamics__Cao * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_Na_Ca_exchanger__c1 * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) / (1.0 + (pow(var_ionic_concentrations__Nao, 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * var_calcium_dynamics__Cao * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_Na_Ca_exchanger__c2 * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // microA_per_microF
        const double var_T_type_Ca_channel__i_Ca_T = pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2) * (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_T_type_Ca_channel__g_CaT * var_chaste_interface__T_type_Ca_channel_g_gate__g; // microA_per_microF
        const double var_calcium_background_current__i_Ca_b = (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_calcium_background_current__g_Cab; // microA_per_microF
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_fast_sodium_current__g_Na * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j; // microA_per_microF
        const double var_non_specific_calcium_activated_current__K_m_ns_Ca = 0.0011999999999999999; // millimolar
        const double var_non_specific_calcium_activated_current__P_ns_Ca = 0; // cm_per_second
        const double var_non_specific_calcium_activated_current__I_ns_K = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Ko * var_ionic_concentrations__Ko + var_L_type_Ca_channel__gamma_Ki * var_chaste_interface__ionic_concentrations__Ki * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__I_ns_Na = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Nao * var_ionic_concentrations__Nao + var_L_type_Ca_channel__gamma_Nai * var_chaste_interface__ionic_concentrations__Nai * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_K = var_non_specific_calcium_activated_current__I_ns_K / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Na = var_non_specific_calcium_activated_current__I_ns_Na / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Ca = var_non_specific_calcium_activated_current__i_ns_K + var_non_specific_calcium_activated_current__i_ns_Na; // microA_per_microF
        const double var_plateau_potassium_current__Kp = 1 / (1.0 + exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_plateau_potassium_current__g_Kp = 0.0055199999999999997; // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__Rect = 1 / (1.0 + exp(0.4017857142857143 + 0.044642857142857144 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_rapid_delayed_rectifier_potassium_current__g_Kr = 0.011248864963317985 * sqrt(var_ionic_concentrations__Ko) * NV_Ith_S(mParameters, 0); // milliS_per_microF
        const double var_sarcolemmal_calcium_pump__I_pCa = 1.1499999999999999; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__K_mpCa = 0.00050000000000000001; // millimolar
        const double var_sarcolemmal_calcium_pump__i_p_Ca = var_chaste_interface__calcium_dynamics__Cai * var_sarcolemmal_calcium_pump__I_pCa / (var_chaste_interface__calcium_dynamics__Cai + var_sarcolemmal_calcium_pump__K_mpCa); // microA_per_microF
        const double var_slow_delayed_rectifier_potassium_current__PNaK = 0.018329999999999999; // dimensionless
        const double var_slow_delayed_rectifier_potassium_current__E_Ks = var_membrane__R * var_membrane__T * log((var_ionic_concentrations__Nao * var_slow_delayed_rectifier_potassium_current__PNaK + var_ionic_concentrations__Ko) / (var_chaste_interface__ionic_concentrations__Nai * var_slow_delayed_rectifier_potassium_current__PNaK + var_chaste_interface__ionic_concentrations__Ki)) / var_membrane__F; // millivolt
        const double var_slow_delayed_rectifier_potassium_current__g_Ks = 0.433 * (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow(1 / var_chaste_interface__calcium_dynamics__Cai, 1.3999999999999999))) * NV_Ith_S(mParameters, 1); // milliS_per_microF
        const double var_slow_delayed_rectifier_potassium_current__i_Ks = (-var_slow_delayed_rectifier_potassium_current__E_Ks + var_chaste_interface__membrane__V) * var_slow_delayed_rectifier_potassium_current__g_Ks * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2; // microA_per_microF
        const double var_sodium_activated_potassium_current__g_K_Na = 0; // milliS_per_microF
        const double var_sodium_activated_potassium_current__kdKNa = 66.0; // millimolar
        const double var_sodium_activated_potassium_current__nKNa = 2.7999999999999998; // dimensionless
        const double var_sodium_activated_potassium_current__pona = 0.84999999999999998 / (1.0 + pow((var_sodium_activated_potassium_current__kdKNa / var_chaste_interface__ionic_concentrations__Nai), var_sodium_activated_potassium_current__nKNa)); // dimensionless
        const double var_sodium_activated_potassium_current__pov = 0.80000000000000004 - 0.65000000000000002 / (1.0 + exp(8.3333333333333339 + 0.066666666666666666 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_sodium_background_current__g_Nab = 0.0040000000000000001; // milliS_per_microF
        const double var_sodium_background_current__i_Na_b = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_sodium_background_current__g_Nab; // microA_per_microF
        const double var_sodium_potassium_pump__I_NaK = 2.25; // microA_per_microF
        const double var_sodium_potassium_pump__K_mKo = 1.5; // millimolar
        const double var_sodium_potassium_pump__K_mNai = 10.0; // millimolar
        const double var_sodium_potassium_pump__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * var_ionic_concentrations__Nao); // dimensionless
        const double var_sodium_potassium_pump__f_NaK = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) + 0.036499999999999998 * var_sodium_potassium_pump__sigma * exp(-var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // dimensionless
        const double var_sodium_potassium_pump__i_NaK = var_ionic_concentrations__Ko * var_sodium_potassium_pump__I_NaK * var_sodium_potassium_pump__f_NaK / ((1.0 + pow(var_sodium_potassium_pump__K_mNai, 2) / pow(var_chaste_interface__ionic_concentrations__Nai, 2)) * (var_ionic_concentrations__Ko + var_sodium_potassium_pump__K_mKo)); // microA_per_microF
        const double var_time_independent_potassium_current__E_K = var_membrane__R * var_membrane__T * log(var_ionic_concentrations__Ko / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_ATP_sensitive_potassium_current__i_K_ATP = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_ATP_sensitive_potassium_current__GKbaraATP; // microA_per_microF
        const double var_plateau_potassium_current__i_Kp = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_plateau_potassium_current__Kp * var_plateau_potassium_current__g_Kp; // microA_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_rapid_delayed_rectifier_potassium_current__Rect * var_rapid_delayed_rectifier_potassium_current__g_Kr * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr_gate__xr; // microA_per_microF
        const double var_sodium_activated_potassium_current__i_K_Na = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_sodium_activated_potassium_current__g_K_Na * var_sodium_activated_potassium_current__pona * var_sodium_activated_potassium_current__pov; // microA_per_microF
        const double var_time_independent_potassium_current__g_K1 = 0.3227486121839514 * sqrt(var_ionic_concentrations__Ko); // milliS_per_cm2
        const double var_time_independent_potassium_current_K1_gate__alpha_K1 = 1020.0 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_time_independent_potassium_current__E_K)); // per_second
        const double var_time_independent_potassium_current_K1_gate__beta_K1 = 1000.0 * (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_time_independent_potassium_current__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_time_independent_potassium_current__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_time_independent_potassium_current__E_K - 0.51429999999999998 * var_chaste_interface__membrane__V)); // per_second
        const double var_time_independent_potassium_current_K1_gate__K1_infinity = var_time_independent_potassium_current_K1_gate__alpha_K1 / (var_time_independent_potassium_current_K1_gate__alpha_K1 + var_time_independent_potassium_current_K1_gate__beta_K1); // dimensionless
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_time_independent_potassium_current__g_K1 * var_time_independent_potassium_current_K1_gate__K1_infinity; // microA_per_microF
        const double var_transient_outward_current__g_to = 0.5 * NV_Ith_S(mParameters, 2); // milliS_per_microF
        const double var_transient_outward_current__rvdv = exp(0.01 * var_chaste_interface__membrane__V); // dimensionless
        const double var_transient_outward_current__i_to = pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_transient_outward_current__g_to * var_transient_outward_current__rvdv * var_chaste_interface__transient_outward_current_ydv_gate__ydv; // microA_per_microF
        const double var_chaste_interface__i_ionic = (var_ATP_sensitive_potassium_current__i_K_ATP + var_L_type_Ca_channel__i_Ca_L + var_Na_Ca_exchanger__i_NaCa + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_Ca_b + var_fast_sodium_current__i_Na + var_non_specific_calcium_activated_current__i_ns_Ca + var_plateau_potassium_current__i_Kp + var_rapid_delayed_rectifier_potassium_current__i_Kr + var_sarcolemmal_calcium_pump__i_p_Ca + var_slow_delayed_rectifier_potassium_current__i_Ks + var_sodium_activated_potassium_current__i_K_Na + var_sodium_background_current__i_Na_b + var_sodium_potassium_pump__i_NaK + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void CellFaberRudy2000FromCellMLCvode::EvaluateYDerivatives(double var_chaste_interface__environment__time_converted, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -90.0
        double var_chaste_interface__calcium_dynamics__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 6e-05
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.0008
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.993771
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.995727
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 3.210618e-06
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.999837
        double var_chaste_interface__T_type_Ca_channel_b_gate__b = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.000970231
        double var_chaste_interface__T_type_Ca_channel_g_gate__g = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.994305
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr_gate__xr = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.000124042
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.00445683
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.00445683
        double var_chaste_interface__transient_outward_current_zdv_gate__zdv = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.5
        double var_chaste_interface__transient_outward_current_ydv_gate__ydv = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.5
        double var_chaste_interface__calcium_dynamics__Ca_JSR = NV_Ith_S(rY, 14);
        // Units: millimolar; Initial value: 1.8
        double var_chaste_interface__calcium_dynamics__Ca_NSR = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 1.8
        double var_chaste_interface__calcium_dynamics__APtrack = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__APtrack2 = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__APtrack3 = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__Cainfluxtrack = NV_Ith_S(rY, 19);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack2 = NV_Ith_S(rY, 21);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack3 = NV_Ith_S(rY, 22);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ionic_concentrations__Nai = NV_Ith_S(rY, 23);
        // Units: millimolar; Initial value: 9.0
        double var_chaste_interface__ionic_concentrations__Ki = NV_Ith_S(rY, 24);
        // Units: millimolar; Initial value: 141.2

        // Mathematics
        double d_dt_chaste_interface_var_membrane__V;
        const double var_ATP_sensitive_potassium_current__ATPi = 3.0; // millimolar
        const double var_ATP_sensitive_potassium_current__hATP = 2.0; // dimensionless
        const double var_ATP_sensitive_potassium_current__i_K_ATP_on = 1.0; // dimensionless
        const double var_ATP_sensitive_potassium_current__kATP = 0.00025000000000000001; // millimolar
        const double var_ATP_sensitive_potassium_current__nATP = 0.23999999999999999; // dimensionless
        const double var_ATP_sensitive_potassium_current__nicholsarea = 5.0000000000000002e-5; // dimensionless
        const double var_ATP_sensitive_potassium_current__g_K_ATP = 0.000193 * var_ATP_sensitive_potassium_current__i_K_ATP_on / var_ATP_sensitive_potassium_current__nicholsarea; // milliS_per_microF
        const double var_ATP_sensitive_potassium_current__pATP = 1 / (1.0 + pow((var_ATP_sensitive_potassium_current__ATPi / var_ATP_sensitive_potassium_current__kATP), var_ATP_sensitive_potassium_current__hATP)); // dimensionless
        const double var_L_type_Ca_channel__P_Ca = 0.00054000000000000001; // cm_per_second
        const double var_L_type_Ca_channel__P_K = 1.9299999999999999e-7; // cm_per_second
        const double var_L_type_Ca_channel__P_Na = 6.75e-7; // cm_per_second
        const double var_L_type_Ca_channel__gamma_Cai = 1.0; // dimensionless
        const double var_L_type_Ca_channel__gamma_Cao = 0.34100000000000003; // dimensionless
        const double var_L_type_Ca_channel__gamma_Ki = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Ko = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nai = 0.75; // dimensionless
        const double var_L_type_Ca_channel__gamma_Nao = 0.75; // dimensionless
        const double var_L_type_Ca_channel_f_Ca_gate__Km_Ca = 0.00059999999999999995; // millimolar
        const double var_Na_Ca_exchanger__c1 = 0.00025000000000000001; // microA_per_microF
        const double var_Na_Ca_exchanger__c2 = 0.0001; // millimolar
        const double var_Na_Ca_exchanger__gamma = 0.14999999999999999; // dimensionless
        const double var_T_type_Ca_channel__g_CaT = 0.050000000000000003; // milliS_per_microF
        const double var_calcium_background_current__g_Cab = 0.003016; // milliS_per_microF
        const double var_calcium_dynamics__APtrack2_orig_deriv = (((var_chaste_interface__calcium_dynamics__APtrack > 0.17999999999999999) && (var_chaste_interface__calcium_dynamics__APtrack < 0.20000000000000001)) ? (100000.0 - 100500.0 * var_chaste_interface__calcium_dynamics__APtrack2) : (-500.0 * var_chaste_interface__calcium_dynamics__APtrack2)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__APtrack2 = 0.001 * var_calcium_dynamics__APtrack2_orig_deriv; // 1 / millisecond
        const double var_calcium_dynamics__APtrack3_orig_deriv = (((var_chaste_interface__calcium_dynamics__APtrack > 0.17999999999999999) && (var_chaste_interface__calcium_dynamics__APtrack < 0.20000000000000001)) ? (100000.0 - 100500.0 * var_chaste_interface__calcium_dynamics__APtrack3) : (-10.0 * var_chaste_interface__calcium_dynamics__APtrack3)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__APtrack3 = 0.001 * var_calcium_dynamics__APtrack3_orig_deriv; // 1 / millisecond
        const double var_calcium_dynamics__CMDN_max = 0.050000000000000003; // millimolar
        const double var_calcium_dynamics__CSQN_max = 10.0; // millimolar
        const double var_calcium_dynamics__CSQNthresh = 0.69999999999999996; // millimolar
        const double var_calcium_dynamics__Ca_NSR_max = 15.0; // millimolar
        const double var_L_type_Ca_channel_f_Ca_gate__f_Ca = 1 / (1.0 + var_chaste_interface__calcium_dynamics__Cai / var_L_type_Ca_channel_f_Ca_gate__Km_Ca); // dimensionless
        const double var_calcium_dynamics__Cao = 1.8; // millimolar
        const double var_calcium_dynamics__G_rel_max = 60000.0; // per_second
        const double var_calcium_dynamics__G_rel_overload = 4000.0; // per_second
        const double var_calcium_dynamics__I_up = 8.75; // millimolar_per_second
        const double var_calcium_dynamics__K_leak = var_calcium_dynamics__I_up / var_calcium_dynamics__Ca_NSR_max; // per_second
        const double var_calcium_dynamics__K_mCMDN = 0.0023800000000000002; // millimolar
        const double var_calcium_dynamics__K_mCSQN = 0.80000000000000004; // millimolar
        const double var_calcium_dynamics__K_mTn = 0.00050000000000000001; // millimolar
        const double var_calcium_dynamics__K_mrel = 0.00080000000000000004; // millimolar
        const double var_calcium_dynamics__K_mup = 0.00092000000000000003; // millimolar
        const double var_calcium_dynamics__Logicthresh = 0.97999999999999998; // dimensionless
        const double var_calcium_dynamics__OVRLDtrack2_orig_deriv = (((var_calcium_dynamics__Logicthresh > var_chaste_interface__calcium_dynamics__OVRLDtrack2) && (var_calcium_dynamics__Logicthresh < var_chaste_interface__calcium_dynamics__OVRLDtrack)) ? (50000.0 - 50000.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (-500.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack2)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack2 = 0.001 * var_calcium_dynamics__OVRLDtrack2_orig_deriv; // 1 / millisecond
        const double var_calcium_dynamics__OVRLDtrack3_orig_deriv = (((var_calcium_dynamics__Logicthresh > var_chaste_interface__calcium_dynamics__OVRLDtrack3) && (var_calcium_dynamics__Logicthresh < var_chaste_interface__calcium_dynamics__OVRLDtrack)) ? (50000.0 - 50000.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack3) : (-10.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack3)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack3 = 0.001 * var_calcium_dynamics__OVRLDtrack3_orig_deriv; // 1 / millisecond
        const double var_calcium_dynamics__OVRLDtrack_orig_deriv = (((var_chaste_interface__calcium_dynamics__APtrack3 < 0.37) && (var_chaste_interface__calcium_dynamics__OVRLDtrack3 < 0.37) && (var_calcium_dynamics__CSQNthresh < 1 / (1.0 + var_calcium_dynamics__K_mCSQN / var_chaste_interface__calcium_dynamics__Ca_JSR))) ? (50000.0 - 50000.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack) : (-500.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack = 0.001 * var_calcium_dynamics__OVRLDtrack_orig_deriv; // 1 / millisecond
        const double var_calcium_dynamics__Tn_max = 0.070000000000000007; // millimolar
        const double var_calcium_dynamics__delta_Ca_ith = 0.00018000000000000001; // millimolar
        const double var_calcium_dynamics__G_rel = ((var_chaste_interface__calcium_dynamics__Cainfluxtrack > var_calcium_dynamics__delta_Ca_ith) ? ((1.0 - var_chaste_interface__calcium_dynamics__APtrack2) * (-var_calcium_dynamics__delta_Ca_ith + var_chaste_interface__calcium_dynamics__Cainfluxtrack) * var_chaste_interface__calcium_dynamics__APtrack2 * var_calcium_dynamics__G_rel_max / (-var_calcium_dynamics__delta_Ca_ith + var_chaste_interface__calcium_dynamics__Cainfluxtrack + var_calcium_dynamics__K_mrel)) : ((var_chaste_interface__calcium_dynamics__OVRLDtrack2 > 0) ? ((1.0 - var_chaste_interface__calcium_dynamics__OVRLDtrack2) * var_calcium_dynamics__G_rel_overload * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (0))); // per_second
        const double var_calcium_dynamics__i_leak = var_chaste_interface__calcium_dynamics__Ca_NSR * var_calcium_dynamics__K_leak; // millimolar_per_second
        const double var_calcium_dynamics__i_rel = (-var_chaste_interface__calcium_dynamics__Cai + var_chaste_interface__calcium_dynamics__Ca_JSR) * var_calcium_dynamics__G_rel; // millimolar_per_second
        const double var_calcium_dynamics__i_up = var_chaste_interface__calcium_dynamics__Cai * var_calcium_dynamics__I_up / (var_chaste_interface__calcium_dynamics__Cai + var_calcium_dynamics__K_mup); // millimolar_per_second
        const double var_calcium_dynamics__tau_tr = 0.17999999999999999; // second
        const double var_calcium_dynamics__i_tr = (-var_chaste_interface__calcium_dynamics__Ca_JSR + var_chaste_interface__calcium_dynamics__Ca_NSR) / var_calcium_dynamics__tau_tr; // millimolar_per_second
        const double var_calcium_dynamics__Ca_JSR_orig_deriv = (-var_calcium_dynamics__i_rel + var_calcium_dynamics__i_tr) / (1.0 + var_calcium_dynamics__CSQN_max * var_calcium_dynamics__K_mCSQN / pow((var_chaste_interface__calcium_dynamics__Ca_JSR + var_calcium_dynamics__K_mCSQN), 2)); // millimolar / second
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_JSR = 0.001 * var_calcium_dynamics__Ca_JSR_orig_deriv; // millimolar / millisecond
        const double var_fast_sodium_current__g_Na = 16.0; // milliS_per_microF
        const double var_fast_sodium_current_m_gate__delta_m = 1.0000000000000001e-5; // millivolt
        const double var_ionic_concentrations__A_cap = 1.434e-7; // mm2
        const double var_ionic_concentrations__Ko = 4.5; // millimolar
        const double var_ATP_sensitive_potassium_current__GKbaraATP = pow((0.25 * var_ionic_concentrations__Ko), var_ATP_sensitive_potassium_current__nATP) * var_ATP_sensitive_potassium_current__g_K_ATP * var_ATP_sensitive_potassium_current__pATP; // milliS_per_microF
        const double var_ionic_concentrations__Nao = 132.0; // millimolar
        const double var_ionic_concentrations__preplength = 0.001; // mm
        const double var_ionic_concentrations__radius = 0.00011; // mm
        const double var_ionic_concentrations__volume = M_PI * pow(var_ionic_concentrations__radius, 2) * var_ionic_concentrations__preplength; // micro_litre
        const double var_ionic_concentrations__V_myo = 0.68000000000000005 * var_ionic_concentrations__volume; // micro_litre
        const double var_calcium_dynamics__V_JSR = 0.0070588235294117632 * var_ionic_concentrations__V_myo; // micro_litre
        const double var_calcium_dynamics__V_NSR = 0.081176470588235281 * var_ionic_concentrations__V_myo; // micro_litre
        const double var_calcium_dynamics__Ca_NSR_orig_deriv = -var_calcium_dynamics__i_leak - var_calcium_dynamics__V_JSR * var_calcium_dynamics__i_tr / var_calcium_dynamics__V_NSR + var_calcium_dynamics__i_up; // millimolar / second
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_NSR = 0.001 * var_calcium_dynamics__Ca_NSR_orig_deriv; // millimolar / millisecond
        const double var_membrane__Cm = 0.001; // microF
        const double var_membrane__F = 96485.0; // coulomb_per_mole
        const double var_membrane__I_st_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted); // uA_per_cm2
        const double var_membrane__I_st = var_membrane__I_st_converted / HeartConfig::Instance()->GetCapacitance(); // microA_per_microF
        const double var_membrane__R = 8314.0; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_calcium_background_current__E_Ca = 0.5 * var_membrane__R * var_membrane__T * log(var_calcium_dynamics__Cao / var_chaste_interface__calcium_dynamics__Cai) / var_membrane__F; // millivolt
        const double var_fast_sodium_current__E_Na = var_membrane__R * var_membrane__T * log(var_ionic_concentrations__Nao / var_chaste_interface__ionic_concentrations__Nai) / var_membrane__F; // millivolt
        const double var_L_type_Ca_channel__I_CaCa = 4.0 * pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Cao * var_calcium_dynamics__Cao + var_L_type_Ca_channel__gamma_Cai * var_chaste_interface__calcium_dynamics__Cai * exp(2.0 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_L_type_Ca_channel__P_Ca * var_chaste_interface__membrane__V / ((-1.0 + exp(2.0 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaK = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Ko * var_ionic_concentrations__Ko + var_L_type_Ca_channel__gamma_Ki * var_chaste_interface__ionic_concentrations__Ki * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_L_type_Ca_channel__P_K * var_chaste_interface__membrane__V / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_L_type_Ca_channel__I_CaNa = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Nao * var_ionic_concentrations__Nao + var_L_type_Ca_channel__gamma_Nai * var_chaste_interface__ionic_concentrations__Nai * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_L_type_Ca_channel__P_Na * var_chaste_interface__membrane__V / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_L_type_Ca_channel__i_CaCa = var_L_type_Ca_channel__I_CaCa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaK = var_L_type_Ca_channel__I_CaK * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_CaNa = var_L_type_Ca_channel__I_CaNa * var_chaste_interface__L_type_Ca_channel_d_gate__d * var_L_type_Ca_channel_f_Ca_gate__f_Ca * var_chaste_interface__L_type_Ca_channel_f_gate__f; // microA_per_microF
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_CaCa + var_L_type_Ca_channel__i_CaK + var_L_type_Ca_channel__i_CaNa; // microA_per_microF
        const double var_L_type_Ca_channel_d_gate__E0_d = 10.0 + var_chaste_interface__membrane__V; // millivolt
        const double var_L_type_Ca_channel_d_gate__d_infinity = 1 / (1.0 + exp(-0.16025641025641024 * var_L_type_Ca_channel_d_gate__E0_d)); // dimensionless
        const double var_L_type_Ca_channel_d_gate__tau_d = ((fabs(var_L_type_Ca_channel_d_gate__E0_d) < 1.0000000000000001e-5) ? (0.0045787545787545781) : (0.028571428571428571 * (1.0 - exp(-0.16025641025641024 * var_L_type_Ca_channel_d_gate__E0_d)) * var_L_type_Ca_channel_d_gate__d_infinity / var_L_type_Ca_channel_d_gate__E0_d)); // second
        const double var_L_type_Ca_channel_d_gate__alpha_d = var_L_type_Ca_channel_d_gate__d_infinity / var_L_type_Ca_channel_d_gate__tau_d; // per_second
        const double var_L_type_Ca_channel_d_gate__beta_d = (1.0 - var_L_type_Ca_channel_d_gate__d_infinity) / var_L_type_Ca_channel_d_gate__tau_d; // per_second
        const double var_L_type_Ca_channel_d_gate__d_orig_deriv = (1.0 - var_chaste_interface__L_type_Ca_channel_d_gate__d) * var_L_type_Ca_channel_d_gate__alpha_d - var_L_type_Ca_channel_d_gate__beta_d * var_chaste_interface__L_type_Ca_channel_d_gate__d; // 1 / second
        const double d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d = 0.001 * var_L_type_Ca_channel_d_gate__d_orig_deriv; // 1 / millisecond
        const double var_L_type_Ca_channel_f_gate__f_infinity = 1 / (1.0 + exp(4.0 + 0.125 * var_chaste_interface__membrane__V)) + 0.59999999999999998 / (1.0 + exp(2.5 - 0.050000000000000003 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_L_type_Ca_channel_f_gate__tau_f = 0.001 / (0.02 + 0.019699999999999999 * exp(-0.113569 * pow((1 + 0.10000000000000001 * var_chaste_interface__membrane__V), 2))); // second
        const double var_L_type_Ca_channel_f_gate__alpha_f = var_L_type_Ca_channel_f_gate__f_infinity / var_L_type_Ca_channel_f_gate__tau_f; // per_second
        const double var_L_type_Ca_channel_f_gate__beta_f = (1.0 - var_L_type_Ca_channel_f_gate__f_infinity) / var_L_type_Ca_channel_f_gate__tau_f; // per_second
        const double var_L_type_Ca_channel_f_gate__f_orig_deriv = (1.0 - var_chaste_interface__L_type_Ca_channel_f_gate__f) * var_L_type_Ca_channel_f_gate__alpha_f - var_L_type_Ca_channel_f_gate__beta_f * var_chaste_interface__L_type_Ca_channel_f_gate__f; // 1 / second
        const double d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f = 0.001 * var_L_type_Ca_channel_f_gate__f_orig_deriv; // 1 / millisecond
        const double var_Na_Ca_exchanger__i_NaCa = (-pow(var_ionic_concentrations__Nao, 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * var_calcium_dynamics__Cao * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_Na_Ca_exchanger__c1 * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) / (1.0 + (pow(var_ionic_concentrations__Nao, 3) * var_chaste_interface__calcium_dynamics__Cai + pow(var_chaste_interface__ionic_concentrations__Nai, 3) * var_calcium_dynamics__Cao * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_Na_Ca_exchanger__c2 * exp((-1.0 + var_Na_Ca_exchanger__gamma) * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // microA_per_microF
        const double var_T_type_Ca_channel__i_Ca_T = pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2) * (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_T_type_Ca_channel__g_CaT * var_chaste_interface__T_type_Ca_channel_g_gate__g; // microA_per_microF
        const double var_T_type_Ca_channel_b_gate__b_inf = 1 / (1.0 + exp(-1.2962962962962963 - 0.092592592592592587 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_T_type_Ca_channel_b_gate__tau_b = 0.0037000000000000002 + 0.0061000000000000004 / (1.0 + exp(5.5555555555555554 + 0.22222222222222221 * var_chaste_interface__membrane__V)); // second
        const double var_T_type_Ca_channel_b_gate__b_orig_deriv = (-var_chaste_interface__T_type_Ca_channel_b_gate__b + var_T_type_Ca_channel_b_gate__b_inf) / var_T_type_Ca_channel_b_gate__tau_b; // 1 / second
        const double d_dt_chaste_interface_var_T_type_Ca_channel_b_gate__b = 0.001 * var_T_type_Ca_channel_b_gate__b_orig_deriv; // 1 / millisecond
        const double var_T_type_Ca_channel_g_gate__g_inf = 1 / (1.0 + exp(10.714285714285715 + 0.17857142857142858 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_T_type_Ca_channel_g_gate__tau_g = ((var_chaste_interface__membrane__V <= 0) ? (0.012 - 0.00087500000000000002 * var_chaste_interface__membrane__V) : (0.012)); // second
        const double var_T_type_Ca_channel_g_gate__g_orig_deriv = (-var_chaste_interface__T_type_Ca_channel_g_gate__g + var_T_type_Ca_channel_g_gate__g_inf) / var_T_type_Ca_channel_g_gate__tau_g; // 1 / second
        const double d_dt_chaste_interface_var_T_type_Ca_channel_g_gate__g = 0.001 * var_T_type_Ca_channel_g_gate__g_orig_deriv; // 1 / millisecond
        const double var_calcium_background_current__i_Ca_b = (-var_calcium_background_current__E_Ca + var_chaste_interface__membrane__V) * var_calcium_background_current__g_Cab; // microA_per_microF
        const double var_fast_sodium_current__i_Na = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_fast_sodium_current__g_Na * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j; // microA_per_microF
        const double var_fast_sodium_current_h_gate__alpha_h = ((var_chaste_interface__membrane__V < -40.0) ? (135.0 * exp(-11.764705882352942 - 0.14705882352941177 * var_chaste_interface__membrane__V)) : (0)); // per_second
        const double var_fast_sodium_current_h_gate__beta_h = ((var_chaste_interface__membrane__V < -40.0) ? (3560.0 * exp(0.079000000000000001 * var_chaste_interface__membrane__V) + 310000000.0 * exp(0.34999999999999998 * var_chaste_interface__membrane__V)) : (7692.3076923076924 / (1.0 + exp(-0.96036036036036043 - 0.0900900900900901 * var_chaste_interface__membrane__V)))); // per_second
        const double var_fast_sodium_current_h_gate__h_orig_deriv = (1.0 - var_chaste_interface__fast_sodium_current_h_gate__h) * var_fast_sodium_current_h_gate__alpha_h - var_fast_sodium_current_h_gate__beta_h * var_chaste_interface__fast_sodium_current_h_gate__h; // 1 / second
        const double d_dt_chaste_interface_var_fast_sodium_current_h_gate__h = 0.001 * var_fast_sodium_current_h_gate__h_orig_deriv; // 1 / millisecond
        const double var_fast_sodium_current_j_gate__alpha_j = ((var_chaste_interface__membrane__V < -40.0) ? (1000.0 * (37.780000000000001 + var_chaste_interface__membrane__V) * (-127140.0 * exp(0.24440000000000001 * var_chaste_interface__membrane__V) - 3.4740000000000003e-5 * exp(-0.043909999999999998 * var_chaste_interface__membrane__V)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V))) : (0)); // per_second
        const double var_fast_sodium_current_j_gate__beta_j = ((var_chaste_interface__membrane__V < -40.0) ? (121.2 * exp(-0.01052 * var_chaste_interface__membrane__V) / (1.0 + exp(-5.5312920000000005 - 0.13780000000000001 * var_chaste_interface__membrane__V))) : (300.0 * exp(-2.5349999999999999e-7 * var_chaste_interface__membrane__V) / (1.0 + exp(-3.2000000000000002 - 0.10000000000000001 * var_chaste_interface__membrane__V)))); // per_second
        const double var_fast_sodium_current_j_gate__j_orig_deriv = (1.0 - var_chaste_interface__fast_sodium_current_j_gate__j) * var_fast_sodium_current_j_gate__alpha_j - var_fast_sodium_current_j_gate__beta_j * var_chaste_interface__fast_sodium_current_j_gate__j; // 1 / second
        const double d_dt_chaste_interface_var_fast_sodium_current_j_gate__j = 0.001 * var_fast_sodium_current_j_gate__j_orig_deriv; // 1 / millisecond
        const double var_fast_sodium_current_m_gate__E0_m = 47.130000000000003 + var_chaste_interface__membrane__V; // millivolt
        const double var_fast_sodium_current_m_gate__alpha_m = ((var_fast_sodium_current_m_gate__delta_m <= fabs(var_fast_sodium_current_m_gate__E0_m)) ? (320.0 * var_fast_sodium_current_m_gate__E0_m / (1.0 - exp(-0.10000000000000001 * var_fast_sodium_current_m_gate__E0_m))) : (3200.0)); // per_second
        const double var_fast_sodium_current_m_gate__beta_m = 80.0 * exp(-0.090909090909090912 * var_chaste_interface__membrane__V); // per_second
        const double var_fast_sodium_current_m_gate__m_orig_deriv = (1.0 - var_chaste_interface__fast_sodium_current_m_gate__m) * var_fast_sodium_current_m_gate__alpha_m - var_fast_sodium_current_m_gate__beta_m * var_chaste_interface__fast_sodium_current_m_gate__m; // 1 / second
        const double d_dt_chaste_interface_var_fast_sodium_current_m_gate__m = 0.001 * var_fast_sodium_current_m_gate__m_orig_deriv; // 1 / millisecond
        const double var_non_specific_calcium_activated_current__K_m_ns_Ca = 0.0011999999999999999; // millimolar
        const double var_non_specific_calcium_activated_current__P_ns_Ca = 0; // cm_per_second
        const double var_non_specific_calcium_activated_current__I_ns_K = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Ko * var_ionic_concentrations__Ko + var_L_type_Ca_channel__gamma_Ki * var_chaste_interface__ionic_concentrations__Ki * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__I_ns_Na = pow(var_membrane__F, 2) * (-var_L_type_Ca_channel__gamma_Nao * var_ionic_concentrations__Nao + var_L_type_Ca_channel__gamma_Nai * var_chaste_interface__ionic_concentrations__Nai * exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_chaste_interface__membrane__V * var_non_specific_calcium_activated_current__P_ns_Ca / ((-1.0 + exp(var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))) * var_membrane__R * var_membrane__T); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_K = var_non_specific_calcium_activated_current__I_ns_K / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Na = var_non_specific_calcium_activated_current__I_ns_Na / (1.0 + pow(var_non_specific_calcium_activated_current__K_m_ns_Ca, 3) / pow(var_chaste_interface__calcium_dynamics__Cai, 3)); // microA_per_microF
        const double var_non_specific_calcium_activated_current__i_ns_Ca = var_non_specific_calcium_activated_current__i_ns_K + var_non_specific_calcium_activated_current__i_ns_Na; // microA_per_microF
        const double var_plateau_potassium_current__Kp = 1 / (1.0 + exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_plateau_potassium_current__g_Kp = 0.0055199999999999997; // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__Rect = 1 / (1.0 + exp(0.4017857142857143 + 0.044642857142857144 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_rapid_delayed_rectifier_potassium_current__g_Kr = 0.011248864963317985 * sqrt(var_ionic_concentrations__Ko) * NV_Ith_S(mParameters, 0); // milliS_per_microF
        const double var_rapid_delayed_rectifier_potassium_current_xr_gate__tau_xr = 0.001 / (0.00060999999999999997 * (38.899999999999999 + var_chaste_interface__membrane__V) / (-1.0 + exp(5.6404999999999994 + 0.14499999999999999 * var_chaste_interface__membrane__V)) + 0.0013799999999999999 * (14.199999999999999 + var_chaste_interface__membrane__V) / (1.0 - exp(-1.7465999999999999 - 0.123 * var_chaste_interface__membrane__V))); // second
        const double var_rapid_delayed_rectifier_potassium_current_xr_gate__xr_infinity = 1 / (1.0 + exp(-2.8666666666666667 - 0.13333333333333333 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_rapid_delayed_rectifier_potassium_current_xr_gate__xr_orig_deriv = (-var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr_gate__xr + var_rapid_delayed_rectifier_potassium_current_xr_gate__xr_infinity) / var_rapid_delayed_rectifier_potassium_current_xr_gate__tau_xr; // 1 / second
        const double d_dt_chaste_interface_var_rapid_delayed_rectifier_potassium_current_xr_gate__xr = 0.001 * var_rapid_delayed_rectifier_potassium_current_xr_gate__xr_orig_deriv; // 1 / millisecond
        const double var_sarcolemmal_calcium_pump__I_pCa = 1.1499999999999999; // microA_per_microF
        const double var_sarcolemmal_calcium_pump__K_mpCa = 0.00050000000000000001; // millimolar
        const double var_sarcolemmal_calcium_pump__i_p_Ca = var_chaste_interface__calcium_dynamics__Cai * var_sarcolemmal_calcium_pump__I_pCa / (var_chaste_interface__calcium_dynamics__Cai + var_sarcolemmal_calcium_pump__K_mpCa); // microA_per_microF
        const double var_calcium_dynamics__Cai_orig_deriv = ((-var_calcium_dynamics__i_up + var_calcium_dynamics__i_leak) * var_calcium_dynamics__V_NSR / var_ionic_concentrations__V_myo + var_calcium_dynamics__V_JSR * var_calcium_dynamics__i_rel / var_ionic_concentrations__V_myo - 0.5 * (-2.0 * var_Na_Ca_exchanger__i_NaCa + var_L_type_Ca_channel__i_CaCa + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_Ca_b + var_sarcolemmal_calcium_pump__i_p_Ca) * var_ionic_concentrations__A_cap / (var_ionic_concentrations__V_myo * var_membrane__F)) / (1.0 + var_calcium_dynamics__CMDN_max * var_calcium_dynamics__K_mCMDN / pow((var_chaste_interface__calcium_dynamics__Cai + var_calcium_dynamics__K_mCMDN), 2) + var_calcium_dynamics__K_mTn * var_calcium_dynamics__Tn_max / pow((var_chaste_interface__calcium_dynamics__Cai + var_calcium_dynamics__K_mTn), 2)); // millimolar / second
        const double d_dt_chaste_interface_var_calcium_dynamics__Cai = 0.001 * var_calcium_dynamics__Cai_orig_deriv; // millimolar / millisecond
        const double var_calcium_dynamics__Cainfluxtrack_orig_deriv = ((var_chaste_interface__calcium_dynamics__APtrack > 0.20000000000000001) ? (-0.5 * (-var_Na_Ca_exchanger__i_NaCa + var_L_type_Ca_channel__i_CaCa + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_Ca_b + var_sarcolemmal_calcium_pump__i_p_Ca) * var_ionic_concentrations__A_cap / (var_ionic_concentrations__V_myo * var_membrane__F)) : ((var_chaste_interface__calcium_dynamics__APtrack2 > 0.01) ? (0) : (-500.0 * var_chaste_interface__calcium_dynamics__Cainfluxtrack))); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__Cainfluxtrack = 0.001 * var_calcium_dynamics__Cainfluxtrack_orig_deriv; // 1 / millisecond
        const double var_slow_delayed_rectifier_potassium_current__PNaK = 0.018329999999999999; // dimensionless
        const double var_slow_delayed_rectifier_potassium_current__E_Ks = var_membrane__R * var_membrane__T * log((var_ionic_concentrations__Nao * var_slow_delayed_rectifier_potassium_current__PNaK + var_ionic_concentrations__Ko) / (var_chaste_interface__ionic_concentrations__Nai * var_slow_delayed_rectifier_potassium_current__PNaK + var_chaste_interface__ionic_concentrations__Ki)) / var_membrane__F; // millivolt
        const double var_slow_delayed_rectifier_potassium_current__g_Ks = 0.433 * (1.0 + 0.59999999999999998 / (1.0 + 6.4818210260626455e-7 * pow(1 / var_chaste_interface__calcium_dynamics__Cai, 1.3999999999999999))) * NV_Ith_S(mParameters, 1); // milliS_per_microF
        const double var_slow_delayed_rectifier_potassium_current_xs1_gate__tau_xs1 = 0.001 / (0.00013100000000000001 * (30.0 + var_chaste_interface__membrane__V) / (-1.0 + exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__membrane__V)) + 7.1899999999999999e-5 * (30.0 + var_chaste_interface__membrane__V) / (1.0 - exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__membrane__V))); // second
        const double var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1_infinity = 1 / (1.0 + exp(0.089820359281437126 - 0.059880239520958084 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1_orig_deriv = (-var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 + var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1_infinity) / var_slow_delayed_rectifier_potassium_current_xs1_gate__tau_xs1; // 1 / second
        const double d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = 0.001 * var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1_orig_deriv; // 1 / millisecond
        const double var_slow_delayed_rectifier_potassium_current_xs2_gate__tau_xs2 = 0.0040000000000000001 / (0.00013100000000000001 * (30.0 + var_chaste_interface__membrane__V) / (-1.0 + exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__membrane__V)) + 7.1899999999999999e-5 * (30.0 + var_chaste_interface__membrane__V) / (1.0 - exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__membrane__V))); // second
        const double var_slow_delayed_rectifier_potassium_current__i_Ks = (-var_slow_delayed_rectifier_potassium_current__E_Ks + var_chaste_interface__membrane__V) * var_slow_delayed_rectifier_potassium_current__g_Ks * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2; // microA_per_microF
        const double var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2_infinity = 1 / (1.0 + exp(0.089820359281437126 - 0.059880239520958084 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2_orig_deriv = (-var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 + var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2_infinity) / var_slow_delayed_rectifier_potassium_current_xs2_gate__tau_xs2; // 1 / second
        const double d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = 0.001 * var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2_orig_deriv; // 1 / millisecond
        const double var_sodium_activated_potassium_current__g_K_Na = 0; // milliS_per_microF
        const double var_sodium_activated_potassium_current__kdKNa = 66.0; // millimolar
        const double var_sodium_activated_potassium_current__nKNa = 2.7999999999999998; // dimensionless
        const double var_sodium_activated_potassium_current__pona = 0.84999999999999998 / (1.0 + pow((var_sodium_activated_potassium_current__kdKNa / var_chaste_interface__ionic_concentrations__Nai), var_sodium_activated_potassium_current__nKNa)); // dimensionless
        const double var_sodium_activated_potassium_current__pov = 0.80000000000000004 - 0.65000000000000002 / (1.0 + exp(8.3333333333333339 + 0.066666666666666666 * var_chaste_interface__membrane__V)); // dimensionless
        const double var_sodium_background_current__g_Nab = 0.0040000000000000001; // milliS_per_microF
        const double var_sodium_background_current__i_Na_b = (-var_fast_sodium_current__E_Na + var_chaste_interface__membrane__V) * var_sodium_background_current__g_Nab; // microA_per_microF
        const double var_sodium_potassium_pump__I_NaK = 2.25; // microA_per_microF
        const double var_sodium_potassium_pump__K_mKo = 1.5; // millimolar
        const double var_sodium_potassium_pump__K_mNai = 10.0; // millimolar
        const double var_sodium_potassium_pump__sigma = -0.14285714285714285 + 0.14285714285714285 * exp(0.01485884101040119 * var_ionic_concentrations__Nao); // dimensionless
        const double var_sodium_potassium_pump__f_NaK = 1 / (1.0 + 0.1245 * exp(-0.10000000000000001 * var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T)) + 0.036499999999999998 * var_sodium_potassium_pump__sigma * exp(-var_membrane__F * var_chaste_interface__membrane__V / (var_membrane__R * var_membrane__T))); // dimensionless
        const double var_sodium_potassium_pump__i_NaK = var_ionic_concentrations__Ko * var_sodium_potassium_pump__I_NaK * var_sodium_potassium_pump__f_NaK / ((1.0 + pow(var_sodium_potassium_pump__K_mNai, 2) / pow(var_chaste_interface__ionic_concentrations__Nai, 2)) * (var_ionic_concentrations__Ko + var_sodium_potassium_pump__K_mKo)); // microA_per_microF
        const double var_ionic_concentrations__Nai_orig_deriv = (-var_L_type_Ca_channel__i_CaNa - var_fast_sodium_current__i_Na - var_non_specific_calcium_activated_current__i_ns_Na - var_sodium_background_current__i_Na_b - 3.0 * var_Na_Ca_exchanger__i_NaCa - 3.0 * var_sodium_potassium_pump__i_NaK) * var_ionic_concentrations__A_cap / (var_ionic_concentrations__V_myo * var_membrane__F); // millimolar / second
        const double d_dt_chaste_interface_var_ionic_concentrations__Nai = 0.001 * var_ionic_concentrations__Nai_orig_deriv; // millimolar / millisecond
        const double var_time_independent_potassium_current__E_K = var_membrane__R * var_membrane__T * log(var_ionic_concentrations__Ko / var_chaste_interface__ionic_concentrations__Ki) / var_membrane__F; // millivolt
        const double var_ATP_sensitive_potassium_current__i_K_ATP = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_ATP_sensitive_potassium_current__GKbaraATP; // microA_per_microF
        const double var_plateau_potassium_current__i_Kp = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_plateau_potassium_current__Kp * var_plateau_potassium_current__g_Kp; // microA_per_microF
        const double var_rapid_delayed_rectifier_potassium_current__i_Kr = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_rapid_delayed_rectifier_potassium_current__Rect * var_rapid_delayed_rectifier_potassium_current__g_Kr * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr_gate__xr; // microA_per_microF
        const double var_sodium_activated_potassium_current__i_K_Na = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_sodium_activated_potassium_current__g_K_Na * var_sodium_activated_potassium_current__pona * var_sodium_activated_potassium_current__pov; // microA_per_microF
        const double var_time_independent_potassium_current__g_K1 = 0.3227486121839514 * sqrt(var_ionic_concentrations__Ko); // milliS_per_cm2
        const double var_time_independent_potassium_current_K1_gate__alpha_K1 = 1020.0 / (1.0 + exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 0.23849999999999999 * var_time_independent_potassium_current__E_K)); // per_second
        const double var_time_independent_potassium_current_K1_gate__beta_K1 = 1000.0 * (0.49124000000000001 * exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 0.080320000000000003 * var_time_independent_potassium_current__E_K) + exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 0.061749999999999999 * var_time_independent_potassium_current__E_K)) / (1.0 + exp(-2.4444678999999998 + 0.51429999999999998 * var_time_independent_potassium_current__E_K - 0.51429999999999998 * var_chaste_interface__membrane__V)); // per_second
        const double var_time_independent_potassium_current_K1_gate__K1_infinity = var_time_independent_potassium_current_K1_gate__alpha_K1 / (var_time_independent_potassium_current_K1_gate__alpha_K1 + var_time_independent_potassium_current_K1_gate__beta_K1); // dimensionless
        const double var_time_independent_potassium_current__i_K1 = (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_time_independent_potassium_current__g_K1 * var_time_independent_potassium_current_K1_gate__K1_infinity; // microA_per_microF
        const double var_transient_outward_current__g_to = 0.5 * NV_Ith_S(mParameters, 2); // milliS_per_microF
        const double var_transient_outward_current__rvdv = exp(0.01 * var_chaste_interface__membrane__V); // dimensionless
        const double var_transient_outward_current_ydv_gate__alpha_ydv = 15.0 / (1.0 + exp(12.0 + 0.20000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double var_transient_outward_current_ydv_gate__beta_ydv = 100.0 * exp(5.0 + 0.20000000000000001 * var_chaste_interface__membrane__V) / (1.0 + exp(5.0 + 0.20000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double var_transient_outward_current_ydv_gate__tau_ydv = 1 / (var_transient_outward_current_ydv_gate__alpha_ydv + var_transient_outward_current_ydv_gate__beta_ydv); // second
        const double var_transient_outward_current_ydv_gate__ydv_ss = var_transient_outward_current_ydv_gate__alpha_ydv / (var_transient_outward_current_ydv_gate__alpha_ydv + var_transient_outward_current_ydv_gate__beta_ydv); // dimensionless
        const double var_transient_outward_current_ydv_gate__ydv_orig_deriv = (-var_chaste_interface__transient_outward_current_ydv_gate__ydv + var_transient_outward_current_ydv_gate__ydv_ss) / var_transient_outward_current_ydv_gate__tau_ydv; // 1 / second
        const double d_dt_chaste_interface_var_transient_outward_current_ydv_gate__ydv = 0.001 * var_transient_outward_current_ydv_gate__ydv_orig_deriv; // 1 / millisecond
        const double var_transient_outward_current_zdv_gate__alpha_zdv = 10000.0 * exp(-1.6000000000000001 + 0.040000000000000001 * var_chaste_interface__membrane__V) / (1.0 + exp(-1.6000000000000001 + 0.040000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double var_transient_outward_current_zdv_gate__beta_zdv = 10000.0 * exp(-3.6000000000000001 - 0.040000000000000001 * var_chaste_interface__membrane__V) / (1.0 + exp(-3.6000000000000001 - 0.040000000000000001 * var_chaste_interface__membrane__V)); // per_second
        const double var_transient_outward_current_zdv_gate__tau_zdv = 1 / (var_transient_outward_current_zdv_gate__alpha_zdv + var_transient_outward_current_zdv_gate__beta_zdv); // second
        const double var_transient_outward_current__i_to = pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 3) * (-var_time_independent_potassium_current__E_K + var_chaste_interface__membrane__V) * var_transient_outward_current__g_to * var_transient_outward_current__rvdv * var_chaste_interface__transient_outward_current_ydv_gate__ydv; // microA_per_microF
        const double var_ionic_concentrations__Ki_orig_deriv = (-var_ATP_sensitive_potassium_current__i_K_ATP - var_L_type_Ca_channel__i_CaK - var_non_specific_calcium_activated_current__i_ns_K - var_plateau_potassium_current__i_Kp - var_rapid_delayed_rectifier_potassium_current__i_Kr - var_slow_delayed_rectifier_potassium_current__i_Ks - var_sodium_activated_potassium_current__i_K_Na - var_time_independent_potassium_current__i_K1 - var_transient_outward_current__i_to + 2.0 * var_sodium_potassium_pump__i_NaK) * var_ionic_concentrations__A_cap / (var_ionic_concentrations__V_myo * var_membrane__F); // millimolar / second
        const double d_dt_chaste_interface_var_ionic_concentrations__Ki = 0.001 * var_ionic_concentrations__Ki_orig_deriv; // millimolar / millisecond
        const double var_membrane__dVdt = -1.0 * (var_ATP_sensitive_potassium_current__i_K_ATP + var_L_type_Ca_channel__i_Ca_L + var_Na_Ca_exchanger__i_NaCa + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_Ca_b + var_fast_sodium_current__i_Na + var_membrane__I_st + var_non_specific_calcium_activated_current__i_ns_Ca + var_plateau_potassium_current__i_Kp + var_rapid_delayed_rectifier_potassium_current__i_Kr + var_sarcolemmal_calcium_pump__i_p_Ca + var_slow_delayed_rectifier_potassium_current__i_Ks + var_sodium_activated_potassium_current__i_K_Na + var_sodium_background_current__i_Na_b + var_sodium_potassium_pump__i_NaK + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to) / var_membrane__Cm; // dimensionless
        const double var_calcium_dynamics__APtrack_orig_deriv = ((var_membrane__dVdt > 150000.0) ? (100000.0 - 100500.0 * var_chaste_interface__calcium_dynamics__APtrack) : (-500.0 * var_chaste_interface__calcium_dynamics__APtrack)); // 1 / second
        const double d_dt_chaste_interface_var_calcium_dynamics__APtrack = 0.001 * var_calcium_dynamics__APtrack_orig_deriv; // 1 / millisecond
        const double var_transient_outward_current_zdv_gate__zdv_ss = var_transient_outward_current_zdv_gate__alpha_zdv / (var_transient_outward_current_zdv_gate__alpha_zdv + var_transient_outward_current_zdv_gate__beta_zdv); // dimensionless
        const double var_transient_outward_current_zdv_gate__zdv_orig_deriv = (-var_chaste_interface__transient_outward_current_zdv_gate__zdv + var_transient_outward_current_zdv_gate__zdv_ss) / var_transient_outward_current_zdv_gate__tau_zdv; // 1 / second
        const double d_dt_chaste_interface_var_transient_outward_current_zdv_gate__zdv = 0.001 * var_transient_outward_current_zdv_gate__zdv_orig_deriv; // 1 / millisecond

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_membrane__V = 0.0;
        }
        else
        {
            const double var_membrane__V_orig_deriv = -1.0 * (var_ATP_sensitive_potassium_current__i_K_ATP + var_L_type_Ca_channel__i_Ca_L + var_Na_Ca_exchanger__i_NaCa + var_T_type_Ca_channel__i_Ca_T + var_calcium_background_current__i_Ca_b + var_fast_sodium_current__i_Na + var_membrane__I_st + var_non_specific_calcium_activated_current__i_ns_Ca + var_plateau_potassium_current__i_Kp + var_rapid_delayed_rectifier_potassium_current__i_Kr + var_sarcolemmal_calcium_pump__i_p_Ca + var_slow_delayed_rectifier_potassium_current__i_Ks + var_sodium_activated_potassium_current__i_K_Na + var_sodium_background_current__i_Na_b + var_sodium_potassium_pump__i_NaK + var_time_independent_potassium_current__i_K1 + var_transient_outward_current__i_to) / var_membrane__Cm; // millivolt / second
            d_dt_chaste_interface_var_membrane__V = 0.001 * var_membrane__V_orig_deriv; // millivolt / millisecond
        }
        
        NV_Ith_S(rDY,0) = d_dt_chaste_interface_var_membrane__V;
        NV_Ith_S(rDY,1) = d_dt_chaste_interface_var_calcium_dynamics__Cai;
        NV_Ith_S(rDY,2) = d_dt_chaste_interface_var_fast_sodium_current_m_gate__m;
        NV_Ith_S(rDY,3) = d_dt_chaste_interface_var_fast_sodium_current_h_gate__h;
        NV_Ith_S(rDY,4) = d_dt_chaste_interface_var_fast_sodium_current_j_gate__j;
        NV_Ith_S(rDY,5) = d_dt_chaste_interface_var_L_type_Ca_channel_d_gate__d;
        NV_Ith_S(rDY,6) = d_dt_chaste_interface_var_L_type_Ca_channel_f_gate__f;
        NV_Ith_S(rDY,7) = d_dt_chaste_interface_var_T_type_Ca_channel_b_gate__b;
        NV_Ith_S(rDY,8) = d_dt_chaste_interface_var_T_type_Ca_channel_g_gate__g;
        NV_Ith_S(rDY,9) = d_dt_chaste_interface_var_rapid_delayed_rectifier_potassium_current_xr_gate__xr;
        NV_Ith_S(rDY,10) = d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs1_gate__xs1;
        NV_Ith_S(rDY,11) = d_dt_chaste_interface_var_slow_delayed_rectifier_potassium_current_xs2_gate__xs2;
        NV_Ith_S(rDY,12) = d_dt_chaste_interface_var_transient_outward_current_zdv_gate__zdv;
        NV_Ith_S(rDY,13) = d_dt_chaste_interface_var_transient_outward_current_ydv_gate__ydv;
        NV_Ith_S(rDY,14) = d_dt_chaste_interface_var_calcium_dynamics__Ca_JSR;
        NV_Ith_S(rDY,15) = d_dt_chaste_interface_var_calcium_dynamics__Ca_NSR;
        NV_Ith_S(rDY,16) = d_dt_chaste_interface_var_calcium_dynamics__APtrack;
        NV_Ith_S(rDY,17) = d_dt_chaste_interface_var_calcium_dynamics__APtrack2;
        NV_Ith_S(rDY,18) = d_dt_chaste_interface_var_calcium_dynamics__APtrack3;
        NV_Ith_S(rDY,19) = d_dt_chaste_interface_var_calcium_dynamics__Cainfluxtrack;
        NV_Ith_S(rDY,20) = d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack;
        NV_Ith_S(rDY,21) = d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack2;
        NV_Ith_S(rDY,22) = d_dt_chaste_interface_var_calcium_dynamics__OVRLDtrack3;
        NV_Ith_S(rDY,23) = d_dt_chaste_interface_var_ionic_concentrations__Nai;
        NV_Ith_S(rDY,24) = d_dt_chaste_interface_var_ionic_concentrations__Ki;
    }

    void CellFaberRudy2000FromCellMLCvode::EvaluateAnalyticJacobian(double var_chaste_interface__environment__time_converted, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -90.0
        double var_chaste_interface__calcium_dynamics__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 6e-05
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.0008
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.993771
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.995727
        double var_chaste_interface__L_type_Ca_channel_d_gate__d = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 3.210618e-06
        double var_chaste_interface__L_type_Ca_channel_f_gate__f = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.999837
        double var_chaste_interface__T_type_Ca_channel_b_gate__b = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.000970231
        double var_chaste_interface__T_type_Ca_channel_g_gate__g = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.994305
        double var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr_gate__xr = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.000124042
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1 = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.00445683
        double var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2 = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.00445683
        double var_chaste_interface__transient_outward_current_zdv_gate__zdv = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.5
        double var_chaste_interface__transient_outward_current_ydv_gate__ydv = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.5
        double var_chaste_interface__calcium_dynamics__Ca_JSR = NV_Ith_S(rY, 14);
        // Units: millimolar; Initial value: 1.8
        double var_chaste_interface__calcium_dynamics__Ca_NSR = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 1.8
        double var_chaste_interface__calcium_dynamics__APtrack = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__APtrack2 = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__APtrack3 = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__Cainfluxtrack = NV_Ith_S(rY, 19);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack2 = NV_Ith_S(rY, 21);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__calcium_dynamics__OVRLDtrack3 = NV_Ith_S(rY, 22);
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__ionic_concentrations__Nai = NV_Ith_S(rY, 23);
        // Units: millimolar; Initial value: 9.0
        double var_chaste_interface__ionic_concentrations__Ki = NV_Ith_S(rY, 24);
        // Units: millimolar; Initial value: 141.2
        
        const double var_x0 = exp(1.2521739130434781 - 0.16722408026755853 * var_chaste_interface__membrane__V);
        const double var_x1 = 1.0 + var_x0;
        const double var_x2 = 1 / var_x1;
        const double var_x3 = 1 / var_chaste_interface__ionic_concentrations__Ki;
        const double var_x4 = log(4.5 * var_x3);
        const double var_x5 = exp(-14.1227775 + 0.23849999999999999 * var_chaste_interface__membrane__V - 6.3708927812613361 * var_x4);
        const double var_x6 = 1.0 + var_x5;
        const double var_x7 = 1 / var_x6;
        const double var_x8 = exp(-2.4444678999999998 + 13.738155796237757 * var_x4 - 0.51429999999999998 * var_chaste_interface__membrane__V);
        const double var_x9 = 1.0 + var_x8;
        const double var_x10 = 1 / var_x9;
        const double var_x11 = exp(0.43983232 + 0.080320000000000003 * var_chaste_interface__membrane__V - 2.1455350448256207 * var_x4);
        const double var_x12 = exp(-36.698642499999998 + 0.061749999999999999 * var_chaste_interface__membrane__V - 1.6494869150645177 * var_x4);
        const double var_x13 = var_x12 + 0.49124000000000001 * var_x11;
        const double var_x14 = var_x10 * var_x13;
        const double var_x15 = 1 / (1000.0 * var_x14 + 1020.0 * var_x7);
        const double var_x16 = var_x15 * var_x7;
        const double var_x17 = pow(var_chaste_interface__T_type_Ca_channel_b_gate__b, 2);
        const double var_x18 = 0.050000000000000003 * var_x17;
        const double var_x19 = 2299968.0 * var_chaste_interface__calcium_dynamics__Cai;
        const double var_x20 = pow(var_chaste_interface__ionic_concentrations__Nai, 3);
        const double var_x21 = 0.037435883507802616 * var_chaste_interface__membrane__V;
        const double var_x22 = exp(var_x21);
        const double var_x23 = var_x20 * var_x22;
        const double var_x24 = 1.8 * var_x23;
        const double var_x25 = var_x24 - var_x19;
        const double var_x26 = exp(-0.031820500981632228 * var_chaste_interface__membrane__V);
        const double var_x27 = 1.0 + 0.0001 * var_x26 * (var_x19 + var_x24);
        const double var_x28 = var_x26 / var_x27;
        const double var_x29 = var_x25 * var_x28;
        const double var_x30 = exp(0.4017857142857143 + 0.044642857142857144 * var_chaste_interface__membrane__V);
        const double var_x31 = 1.0 + var_x30;
        const double var_x32 = NV_Ith_S(mParameters, 0) / var_x31;
        const double var_x33 = 0.023862446088641735 * var_x32;
        const double var_x34 = pow(var_chaste_interface__ionic_concentrations__Nai, 2);
        const double var_x35 = 1 / var_x34;
        const double var_x36 = 1 / (1.0 + 100.0 * var_x35);
        const double var_x37 = exp(-0.003743588350780262 * var_chaste_interface__membrane__V);
        const double var_x38 = exp(1.961367013372957);
        const double var_x39 = exp(-var_x21);
        const double var_x40 = 1.0 + 0.1245 * var_x37 + 0.036499999999999998 * var_x39 * (-0.14285714285714285 + 0.14285714285714285 * var_x38);
        const double var_x41 = var_x36 * (0.00046607674967214262 * var_x37 + 0.037435883507802616 * var_x39 * (-0.0052142857142857138 + 0.0052142857142857138 * var_x38)) / pow(var_x40, 2);
        const double var_x42 = -26.712338705498265 * var_x4 + var_chaste_interface__membrane__V;
        const double var_x43 = var_x0 * var_x42 / pow(var_x1, 2);
        const double var_x44 = var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j;
        const double var_x45 = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3);
        const double var_x46 = 16.0 * var_x45;
        const double var_x47 = 1 / var_chaste_interface__calcium_dynamics__Cai;
        const double var_x48 = pow(var_x47, 1.3999999999999999);
        const double var_x49 = 1.0 + 6.4818210260626455e-7 * var_x48;
        const double var_x50 = 1 / var_x49;
        const double var_x51 = -0.433 - 0.25979999999999998 * var_x50;
        const double var_x52 = NV_Ith_S(mParameters, 1) * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2;
        const double var_x53 = var_x51 * var_x52;
        const double var_x54 = var_x53 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1;
        const double var_x55 = var_x5 / pow(var_x6, 2);
        const double var_x56 = var_x15 * var_x42;
        const double var_x57 = var_x55 * var_x56;
        const double var_x58 = var_x23 * var_x28;
        const double var_x59 = var_x25 / pow(var_x27, 2);
        const double var_x60 = var_x26 * var_x59 * (0.031820500981632228 * var_x26 * (229.99680000000001 * var_chaste_interface__calcium_dynamics__Cai + 0.00018000000000000001 * var_x23) - 6.7384590314044719e-6 * var_x23 * var_x26);
        const double var_x61 = 1000.0 * var_x10;
        const double var_x62 = var_x13 * var_x8 / pow(var_x9, 2);
        const double var_x63 = 243.26999999999998 * var_x55 - 514.29999999999995 * var_x62 - var_x61 * (0.061749999999999999 * var_x12 + 0.039456396800000001 * var_x11);
        const double var_x64 = var_x42 * var_x7 / pow((var_x7 + 0.98039215686274506 * var_x14), 2);
        const double var_x65 = 0.00067122862439358594 * var_x64;
        const double var_x66 = exp(0.01 * var_chaste_interface__membrane__V);
        const double var_x67 = var_x66 * NV_Ith_S(mParameters, 2) * var_chaste_interface__transient_outward_current_ydv_gate__ydv;
        const double var_x68 = pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 3);
        const double var_x69 = 0.5 * var_x68;
        const double var_x70 = var_x30 * var_x42 * NV_Ith_S(mParameters, 0) * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr_gate__xr / pow(var_x31, 2);
        const double var_x71 = -1.0 + var_x22;
        const double var_x72 = 1 / var_x71;
        const double var_x73 = 1 / (1.0 + 1666.6666666666667 * var_chaste_interface__calcium_dynamics__Cai);
        const double var_x74 = var_x73 * var_chaste_interface__L_type_Ca_channel_f_gate__f;
        const double var_x75 = var_x74 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x76 = var_x72 * var_x75;
        const double var_x77 = 0.75 * var_x22;
        const double var_x78 = -99.0 + var_x77 * var_chaste_interface__ionic_concentrations__Nai;
        const double var_x79 = 0.0024381008236689767 * var_x78;
        const double var_x80 = var_x67 * var_x68;
        const double var_x81 = var_x42 * var_x80;
        const double var_x82 = -3.375 + var_x77 * var_chaste_interface__ionic_concentrations__Ki;
        const double var_x83 = 0.00069711623550831479 * var_x82;
        const double var_x84 = exp(0.074871767015605231 * var_chaste_interface__membrane__V);
        const double var_x85 = -1.0 + var_x84;
        const double var_x86 = 1 / var_x85;
        const double var_x87 = var_x84 * var_chaste_interface__calcium_dynamics__Cai;
        const double var_x88 = -0.61380000000000001 + var_x87;
        const double var_x89 = var_x86 * var_x88;
        const double var_x90 = 7.8019226357407252 * var_x89;
        const double var_x91 = var_x75 * var_chaste_interface__membrane__V;
        const double var_x92 = 0.58414373385695628 * var_x91;
        const double var_x93 = var_x84 * var_x88 / pow(var_x85, 2);
        const double var_x94 = var_x22 * var_x91 / pow(var_x71, 2);
        const double var_x95 = var_x78 * var_x94;
        const double var_x96 = var_x82 * var_x94;
        const double var_x97 = var_x22 * var_x76 * var_chaste_interface__membrane__V;
        const double var_x98 = var_x97 * var_chaste_interface__ionic_concentrations__Ki;
        const double var_x99 = var_x86 * var_x87;
        const double var_x100 = var_x97 * var_chaste_interface__ionic_concentrations__Nai;
        const double var_x101 = 0.00050000000000000001 + var_chaste_interface__calcium_dynamics__Cai;
        const double var_x102 = 1 / var_x101;
        const double var_x103 = pow(var_x101, (-2));
        const double var_x104 = var_x103 * var_chaste_interface__calcium_dynamics__Cai;
        const double var_x105 = var_x59 * pow(var_x26, 2);
        const double var_x106 = var_x17 * var_chaste_interface__T_type_Ca_channel_g_gate__g;
        const double var_x107 = var_x106 * var_x47;
        const double var_x108 = var_chaste_interface__L_type_Ca_channel_d_gate__d * var_chaste_interface__membrane__V;
        const double var_x109 = var_x108 * var_chaste_interface__L_type_Ca_channel_f_gate__f / pow((0.00059999999999999995 + var_chaste_interface__calcium_dynamics__Cai), 2);
        const double var_x110 = var_x109 * var_x72;
        const double var_x111 = var_x110 * var_x78;
        const double var_x112 = var_x109 * var_x89;
        const double var_x113 = var_x110 * var_x82;
        const double var_x114 = var_x84 * var_x86;
        const double var_x115 = 0.018329999999999999 * var_chaste_interface__ionic_concentrations__Nai + var_chaste_interface__ionic_concentrations__Ki;
        const double var_x116 = -26.712338705498265 * log(6.9195599999999997 / var_x115) + var_chaste_interface__membrane__V;
        const double var_x117 = var_x116 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1;
        const double var_x118 = var_x117 * var_x52;
        const double var_x119 = var_x118 * var_x47 * var_x48 / pow(var_x49, 2);
        const double var_x120 = 1 / var_chaste_interface__ionic_concentrations__Nai;
        const double var_x121 = log(132.0 * var_x120);
        const double var_x122 = -26.712338705498265 * var_x121 + var_chaste_interface__membrane__V;
        const double var_x123 = var_x122 * var_x44 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 2);
        const double var_x124 = var_x122 * var_x46;
        const double var_x125 = var_x74 * var_chaste_interface__membrane__V;
        const double var_x126 = var_x125 * var_x72;
        const double var_x127 = var_x108 * var_x73;
        const double var_x128 = var_x127 * var_x72;
        const double var_x129 = log(1.8 * var_x47);
        const double var_x130 = -13.356169352749133 * var_x129 + var_chaste_interface__membrane__V;
        const double var_x131 = var_x130 * var_chaste_interface__T_type_Ca_channel_b_gate__b * var_chaste_interface__T_type_Ca_channel_g_gate__g;
        const double var_x132 = var_x117 * NV_Ith_S(mParameters, 1);
        const double var_x133 = var_x67 * pow(var_chaste_interface__transient_outward_current_zdv_gate__zdv, 2);
        const double var_x134 = var_x42 * var_x66 * NV_Ith_S(mParameters, 2);
        const double var_x135 = 1 / var_x40;
        const double var_x136 = var_x135 / (var_x20 * pow((0.01 + var_x35), 2));
        const double var_x137 = var_x22 * var_x34;
        const double var_x138 = var_x137 * var_x28;
        const double var_x139 = var_x44 * var_x45;
        const double var_x140 = var_x120 * var_x139;
        const double var_x141 = var_x105 * var_x137;
        const double var_x142 = (0.14451785951707913 * var_chaste_interface__ionic_concentrations__Ki + 0.0026490123649480601 * var_chaste_interface__ionic_concentrations__Nai) / pow(var_x115, 2);
        const double var_x143 = var_x142 * var_x54;
        const double var_x144 = var_x2 * var_x3;
        const double var_x145 = var_x16 * var_x3;
        const double var_x146 = var_x32 * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr_gate__xr;
        const double var_x147 = var_x146 * var_x3;
        const double var_x148 = var_x3 * var_x55;
        const double var_x149 = 6498.310636886562 * var_x148 - var_x61 * (1.053972635420138 * var_x11 * var_x3 + 1.6494869150645177 * var_x12 * var_x3) - 13738.155796237757 * var_x3 * var_x62;
        const double var_x150 = var_x148 * var_x56;
        const double var_x151 = var_x3 * var_x80;
        const double var_x152 = 0.050000000000000003 * var_x106;
        const double var_x153 = 7.8019226357407252 * var_x75;
        const double var_x154 = var_x153 * var_x89;
        const double var_x155 = 0.58414373385695628 * var_x91;
        const double var_x156 = 0.003016 + var_x152 + var_x154 + var_x155 * var_x99 - var_x155 * var_x93;
        const double var_x157 = 0.0023800000000000002 + var_chaste_interface__calcium_dynamics__Cai;
        const double var_x158 = 1.0 + 0.00011900000000000002 / pow(var_x157, 2) + 3.5000000000000004e-5 * var_x103;
        const double var_x159 = 1 / var_x158;
        const double var_x160 = 1 / M_PI;
        const double var_x161 = var_x159 * var_x160;
        const double var_x162 = 9.0316078310111333e-5 * var_x161;
        const double var_x163 = 0.00092000000000000003 + var_chaste_interface__calcium_dynamics__Cai;
        const double var_x164 = 1 / var_x163;
        const double var_x165 = 0.71029411764705874 * var_x164;
        const double var_x166 = 1.0 - var_chaste_interface__calcium_dynamics__APtrack2;
        const double var_x167 = 0.00062 + var_chaste_interface__calcium_dynamics__Cainfluxtrack;
        const double var_x168 = 1 / var_x167;
        const double var_x169 = -0.00018000000000000001 + var_chaste_interface__calcium_dynamics__Cainfluxtrack;
        const double var_x170 = 60000.0 * var_x168 * var_x169;
        const double var_x171 = var_x166 * var_x170;
        const double var_x172 = var_chaste_interface__calcium_dynamics__Cainfluxtrack > 0.00018000000000000001;
        const double var_x173 = var_chaste_interface__calcium_dynamics__OVRLDtrack2 > 0;
        const double var_x174 = ((var_x172) ? (var_x171 * var_chaste_interface__calcium_dynamics__APtrack2) : ((var_x173) ? (4000.0 * (1.0 - var_chaste_interface__calcium_dynamics__OVRLDtrack2) * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (0)));
        const double var_x175 = 0.0070588235294117632 * var_x174;
        const double var_x176 = var_chaste_interface__calcium_dynamics__Cai / pow(var_x163, 2);
        const double var_x177 = 1.1499999999999999 * var_x102;
        const double var_x178 = var_x177 + 0.040282206767891383 * var_x47 + 0.6678084676374566 * var_x107 - 1.1499999999999999 * var_x104 - 0.0046811535814444347 * var_x112 + var_x114 * var_x153 * var_chaste_interface__membrane__V;
        const double var_x179 = 0.090316078310111333 * var_x160;
        const double var_x180 = 0.001 * var_x159;
        const double var_x181 = -var_chaste_interface__calcium_dynamics__Cai + var_chaste_interface__calcium_dynamics__Ca_JSR;
        const double var_x182 = var_x125 * var_x89;
        const double var_x183 = 0.00070463905573898956 * var_x161;
        const double var_x184 = var_x127 * var_x89;
        const double var_x185 = var_x130 * var_x17;
        const double var_x186 = ((var_x172) ? (var_x171 - var_x170 * var_chaste_interface__calcium_dynamics__APtrack2) : (0));
        const double var_x187 = var_x180 * (0.0070588235294117632 * var_chaste_interface__calcium_dynamics__Ca_JSR - 0.0070588235294117632 * var_chaste_interface__calcium_dynamics__Cai);
        const double var_x188 = 60000.0 * var_x166 * var_chaste_interface__calcium_dynamics__APtrack2;
        const double var_x189 = ((var_x172) ? (var_x168 * var_x188 - var_x169 * var_x188 / pow(var_x167, 2)) : (0));
        const double var_x190 = ((var_x172) ? (0) : ((var_x173) ? (4000.0 - 8000.0 * var_chaste_interface__calcium_dynamics__OVRLDtrack2) : (0)));
        const double var_x191 = -0.10000000000000001 * var_chaste_interface__membrane__V;
        const double var_x192 = exp(-4.7130000000000001 + var_x191);
        const double var_x193 = 1.0 - var_x192;
        const double var_x194 = 320.0 / var_x193;
        const double var_x195 = 47.130000000000003 + var_chaste_interface__membrane__V;
        const double var_x196 = fabs(var_x195) >= 1.0000000000000001e-5;
        const double var_x197 = exp(-0.090909090909090912 * var_chaste_interface__membrane__V);
        const double var_x198 = 0.001 * var_chaste_interface__fast_sodium_current_h_gate__h;
        const double var_x199 = exp(-11.764705882352942 - 0.14705882352941177 * var_chaste_interface__membrane__V);
        const double var_x200 = var_chaste_interface__membrane__V < -40.0;
        const double var_x201 = exp(0.079000000000000001 * var_chaste_interface__membrane__V);
        const double var_x202 = exp(0.34999999999999998 * var_chaste_interface__membrane__V);
        const double var_x203 = exp(-0.96036036036036043 - 0.0900900900900901 * var_chaste_interface__membrane__V);
        const double var_x204 = 1.0 + var_x203;
        const double var_x205 = 0.001 * var_chaste_interface__fast_sodium_current_j_gate__j;
        const double var_x206 = exp(0.24440000000000001 * var_chaste_interface__membrane__V);
        const double var_x207 = exp(-0.043909999999999998 * var_chaste_interface__membrane__V);
        const double var_x208 = -127140.0 * var_x206 - 3.4740000000000003e-5 * var_x207;
        const double var_x209 = exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V);
        const double var_x210 = 1.0 + var_x209;
        const double var_x211 = 1000.0 / var_x210;
        const double var_x212 = var_x208 * var_x211;
        const double var_x213 = 37.780000000000001 + var_chaste_interface__membrane__V;
        const double var_x214 = exp(-5.5312920000000005 - 0.13780000000000001 * var_chaste_interface__membrane__V);
        const double var_x215 = 1.0 + var_x214;
        const double var_x216 = exp(-0.01052 * var_chaste_interface__membrane__V);
        const double var_x217 = var_x216 / var_x215;
        const double var_x218 = exp(-3.2000000000000002 + var_x191);
        const double var_x219 = 1.0 + var_x218;
        const double var_x220 = exp(-2.5349999999999999e-7 * var_chaste_interface__membrane__V);
        const double var_x221 = var_x220 / var_x219;
        const double var_x222 = exp(-1.6025641025641024 - 0.16025641025641024 * var_chaste_interface__membrane__V);
        const double var_x223 = 1.0 + var_x222;
        const double var_x224 = 0.001 / var_x223;
        const double var_x225 = -0.001 + var_x224;
        const double var_x226 = 10.0 + var_chaste_interface__membrane__V;
        const double var_x227 = fabs(var_x226) < 1.0000000000000001e-5;
        const double var_x228 = 1.0 - var_x222;
        const double var_x229 = 1 / var_x228;
        const double var_x230 = 35.0 * var_x223 * var_x229;
        const double var_x231 = 5.6089743589743595 * var_x222 * var_x226;
        const double var_x232 = ((var_x227) ? (0) : (var_x230 - var_x229 * var_x231 - var_x223 * var_x231 / pow(var_x228, 2)));
        const double var_x233 = 1.0 - var_chaste_interface__L_type_Ca_channel_d_gate__d;
        const double var_x234 = ((var_x227) ? (218.40000000000003) : (var_x226 * var_x230));
        const double var_x235 = 0.00016025641025641026 * var_x222 * var_x234 / pow(var_x223, 2);
        const double var_x236 = exp(-0.113569 * pow((1 + 0.10000000000000001 * var_chaste_interface__membrane__V), 2));
        const double var_x237 = 19.699999999999999 * var_x236;
        const double var_x238 = 0.001 - 0.001 * var_chaste_interface__L_type_Ca_channel_f_gate__f;
        const double var_x239 = exp(2.5 - 0.050000000000000003 * var_chaste_interface__membrane__V);
        const double var_x240 = 1.0 + var_x239;
        const double var_x241 = 0.029999999999999999 * var_x239 / pow(var_x240, 2);
        const double var_x242 = exp(4.0 + 0.125 * var_chaste_interface__membrane__V);
        const double var_x243 = 1.0 + var_x242;
        const double var_x244 = 0.125 * var_x242 / pow(var_x243, 2);
        const double var_x245 = 0.019699999999999999 * var_x236;
        const double var_x246 = -0.02 - var_x245;
        const double var_x247 = 1 / var_x243;
        const double var_x248 = 0.59999999999999998 / var_x240;
        const double var_x249 = var_x247 + var_x248;
        const double var_x250 = -0.022713800000000003 - 0.0022713799999999999 * var_chaste_interface__membrane__V;
        const double var_x251 = 1.0 - var_x247 - var_x248;
        const double var_x252 = exp(-1.2962962962962963 - 0.092592592592592587 * var_chaste_interface__membrane__V);
        const double var_x253 = 1.0 + var_x252;
        const double var_x254 = exp(5.5555555555555554 + 0.22222222222222221 * var_chaste_interface__membrane__V);
        const double var_x255 = 1.0 + var_x254;
        const double var_x256 = 1 / var_x255;
        const double var_x257 = 1 / (0.0037000000000000002 + 0.0061000000000000004 * var_x256);
        const double var_x258 = exp(10.714285714285715 + 0.17857142857142858 * var_chaste_interface__membrane__V);
        const double var_x259 = 1.0 + var_x258;
        const double var_x260 = var_chaste_interface__membrane__V <= 0;
        const double var_x261 = ((var_x260) ? (1 / (0.012 - 0.00087500000000000002 * var_chaste_interface__membrane__V)) : (83.333333333333329));
        const double var_x262 = exp(-2.8666666666666667 - 0.13333333333333333 * var_chaste_interface__membrane__V);
        const double var_x263 = 1.0 + var_x262;
        const double var_x264 = exp(5.6404999999999994 + 0.14499999999999999 * var_chaste_interface__membrane__V);
        const double var_x265 = -1.0 + var_x264;
        const double var_x266 = 1 / var_x265;
        const double var_x267 = 0.60999999999999999 * var_x266;
        const double var_x268 = exp(-1.7465999999999999 - 0.123 * var_chaste_interface__membrane__V);
        const double var_x269 = 1.0 - var_x268;
        const double var_x270 = 1 / var_x269;
        const double var_x271 = 1.3799999999999999 * var_x270;
        const double var_x272 = 14.199999999999999 + var_chaste_interface__membrane__V;
        const double var_x273 = 38.899999999999999 + var_chaste_interface__membrane__V;
        const double var_x274 = exp(0.089820359281437126 - 0.059880239520958084 * var_chaste_interface__membrane__V);
        const double var_x275 = 1.0 + var_x274;
        const double var_x276 = 0.001 / var_x275;
        const double var_x277 = exp(2.0609999999999999 + 0.068699999999999997 * var_chaste_interface__membrane__V);
        const double var_x278 = -1.0 + var_x277;
        const double var_x279 = 1 / var_x278;
        const double var_x280 = 0.13100000000000001 * var_x279;
        const double var_x281 = exp(-4.4399999999999995 - 0.14799999999999999 * var_chaste_interface__membrane__V);
        const double var_x282 = 1.0 - var_x281;
        const double var_x283 = 1 / var_x282;
        const double var_x284 = 0.071899999999999992 * var_x283;
        const double var_x285 = 30.0 + var_chaste_interface__membrane__V;
        const double var_x286 = var_x277 * var_x285 / pow(var_x278, 2);
        const double var_x287 = var_x281 * var_x285 / pow(var_x282, 2);
        const double var_x288 = 5.9880239520958083e-5 * var_x274 / pow(var_x275, 2);
        const double var_x289 = var_x279 * var_x285;
        const double var_x290 = var_x283 * var_x285;
        const double var_x291 = 0.032750000000000001 * var_x279;
        const double var_x292 = 0.017974999999999998 * var_x283;
        const double var_x293 = 0.040000000000000001 * var_chaste_interface__membrane__V;
        const double var_x294 = exp(-1.6000000000000001 + var_x293);
        const double var_x295 = 1.0 + var_x294;
        const double var_x296 = var_x294 / var_x295;
        const double var_x297 = exp(-3.6000000000000001 - var_x293);
        const double var_x298 = 1.0 + var_x297;
        const double var_x299 = var_x297 / var_x298;
        const double var_x300 = 10000.0 * var_x296 + 10000.0 * var_x299;
        const double var_x301 = 1 / var_x300;
        const double var_x302 = 10.0 * var_x296;
        const double var_x303 = 400.0 * var_x296;
        const double var_x304 = 400.0 * pow(var_x297, 2) / pow(var_x298, 2);
        const double var_x305 = pow(var_x294, 2) / pow(var_x295, 2);
        const double var_x306 = 400.0 * var_x305;
        const double var_x307 = 400.0 * var_x299;
        const double var_x308 = 0.40000000000000002 * var_x301;
        const double var_x309 = 0.20000000000000001 * var_chaste_interface__membrane__V;
        const double var_x310 = exp(12.0 + var_x309);
        const double var_x311 = 1.0 + var_x310;
        const double var_x312 = 1 / var_x311;
        const double var_x313 = exp(5.0 + var_x309);
        const double var_x314 = 1.0 + var_x313;
        const double var_x315 = var_x313 / var_x314;
        const double var_x316 = 15.0 * var_x312 + 100.0 * var_x315;
        const double var_x317 = var_x310 / pow(var_x311, 2);
        const double var_x318 = 3.0 * var_x317;
        const double var_x319 = 20.0 * pow(var_x313, 2) / pow(var_x314, 2);
        const double var_x320 = 20.0 * var_x315;
        const double var_x321 = 1 / var_x316;
        const double var_x322 = 0.014999999999999999 * var_x312;
        const double var_x323 = 0.80000000000000004 + var_chaste_interface__calcium_dynamics__Ca_JSR;
        const double var_x324 = pow(var_x323, (-2));
        const double var_x325 = 1 / (1.0 + 8.0 * var_x324);
        const double var_x326 = 0.001 * var_x325;
        const double var_x327 = var_x326 * (-var_chaste_interface__calcium_dynamics__Ca_JSR + var_chaste_interface__calcium_dynamics__Cai);
        const double var_x328 = var_x76 * var_x78;
        const double var_x329 = var_x76 * var_x82;
        const double var_x330 = (var_chaste_interface__calcium_dynamics__APtrack > 0.17999999999999999) && (var_chaste_interface__calcium_dynamics__APtrack < 0.20000000000000001);
        const double var_x331 = var_chaste_interface__calcium_dynamics__APtrack > 0.20000000000000001;
        const double var_x332 = 0.70463905573898955 * var_x160;
        const double var_x333 = var_chaste_interface__calcium_dynamics__OVRLDtrack > 0.97999999999999998;
        const double var_x334 = 0.00018063215662022267 * var_x160;
        const double var_x335 = 0.0028901145059235626 * var_x122 * var_x160 * var_x45;
        const double var_x336 = var_x126 * var_x160;
        const double var_x337 = 4.4039940983686847e-7 * var_x78;
        const double var_x338 = var_x128 * var_x160;
        const double var_x339 = -0.433 - 0.25979999999999998 * var_x50;
        const double var_x340 = var_x339 * var_x52;
        const double var_x341 = var_x340 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1;
        const double var_x342 = 0.00067122862439358594 * var_x64;
        const double var_x343 = 1.2592160903483795e-7 * var_x82;
        const double var_x344 = var_x160 * var_x42;
        const double var_x345 = var_x142 * var_x341;
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = mSetVoltageDerivativeToZero ? 0.0 : (-0.0070160275741043606 + var_x54 + 7.9551252454080567e-6 * var_x29 + 0.0010652877718143633 * var_x70 + 166.55558320535218 * var_x57 + 9.1272458415149417e-5 * var_x95 + 2.6097162183887167e-5 * var_x96 - 1.9572871637915374e-5 * var_x98 - 0.0055199999999999997 * var_x2 - 1.684614757851118e-5 * var_x58 - 698.34626081908675 * var_x16 - 0.00025000000000000001 * var_x60 - 0.0050000000000000001 * var_x81 - 6.8454343811362063e-5 * var_x100 - 1.6875 * var_x41 - 0.00092307692307692295 * var_x43 + var_x92 * var_x93 - var_x18 * var_chaste_interface__T_type_Ca_channel_g_gate__g - var_x33 * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr_gate__xr - var_x44 * var_x46 - var_x63 * var_x65 - var_x67 * var_x69 - var_x75 * var_x90 - var_x76 * var_x79 - var_x76 * var_x83 - var_x92 * var_x99);
        IJth(rJacobian, 1, 0) = -var_x162 * (var_x156 + 1.5910250490816113e-5 * var_x29 - 0.00050000000000000001 * var_x60 - 3.369229515702236e-5 * var_x58);
        IJth(rJacobian, 2, 0) = (0.001 - 0.001 * var_chaste_interface__fast_sodium_current_m_gate__m) * ((var_x196) ? (var_x194 - 32.0 * var_x192 * var_x195 / pow(var_x193, 2)) : (0)) + 0.0072727272727272727 * var_x197 * var_chaste_interface__fast_sodium_current_m_gate__m;
        IJth(rJacobian, 3, 0) = (0.001 - var_x198) * ((var_x200) ? (-19.852941176470587 * var_x199) : (0)) - var_x198 * ((var_x200) ? (281.24000000000001 * var_x201 + 108500000.0 * var_x202) : (693.00069300069299 * var_x203 / pow(var_x204, 2)));
        IJth(rJacobian, 4, 0) = (0.001 - var_x205) * ((var_x200) ? (var_x212 + var_x211 * var_x213 * (1.5254334000000001e-6 * var_x207 - 31073.016 * var_x206) - 311.0 * var_x208 * var_x209 * var_x213 / pow(var_x210, 2)) : (0)) - var_x205 * ((var_x200) ? (-1.2750239999999999 * var_x217 + 16.701360000000001 * var_x214 * var_x216 / pow(var_x215, 2)) : (-7.6049999999999992e-5 * var_x221 + 30.0 * var_x218 * var_x220 / pow(var_x219, 2)));
        IJth(rJacobian, 5, 0) = var_x233 * var_x235 + var_x235 * var_chaste_interface__L_type_Ca_channel_d_gate__d + var_x224 * var_x232 * var_x233 + var_x225 * var_x232 * var_chaste_interface__L_type_Ca_channel_d_gate__d;
        IJth(rJacobian, 6, 0) = var_x238 * (20.0 + var_x237) * (var_x241 - var_x244) + var_x246 * (var_x244 - var_x241) * var_chaste_interface__L_type_Ca_channel_f_gate__f + var_x237 * var_x238 * var_x249 * var_x250 - var_x245 * var_x250 * var_x251 * var_chaste_interface__L_type_Ca_channel_f_gate__f;
        IJth(rJacobian, 7, 0) = 9.2592592592592588e-5 * var_x252 * var_x257 / pow(var_x253, 2) + 0.036429872495446262 * var_x254 * (-var_chaste_interface__T_type_Ca_channel_b_gate__b + 1 / var_x253) / (pow(var_x255, 2) * pow((0.60655737704918034 + var_x256), 2));
        IJth(rJacobian, 8, 0) = (0.001 / var_x259 - 0.001 * var_chaste_interface__T_type_Ca_channel_g_gate__g) * ((var_x260) ? (6.0763888888888884 / pow((1 - 0.072916666666666671 * var_chaste_interface__membrane__V), 2)) : (0)) - 0.00017857142857142857 * var_x258 * var_x261 / pow(var_x259, 2);
        IJth(rJacobian, 9, 0) = (0.001 / var_x263 - 0.001 * var_chaste_interface__rapid_delayed_rectifier_potassium_current_xr_gate__xr) * (var_x267 + var_x271 - 0.16973999999999997 * var_x268 * var_x272 / pow(var_x269, 2) - 0.088449999999999987 * var_x264 * var_x273 / pow(var_x265, 2)) + 0.00013333333333333334 * var_x262 * (var_x267 * var_x273 + var_x271 * var_x272) / pow(var_x263, 2);
        IJth(rJacobian, 10, 0) = var_x288 * (var_x280 * var_x285 + var_x284 * var_x285) + (var_x276 - 0.001 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs1_gate__xs1) * (var_x280 + var_x284 - 0.0089997000000000011 * var_x286 - 0.0106412 * var_x287);
        IJth(rJacobian, 11, 0) = var_x288 * (var_x285 * var_x291 + var_x285 * var_x292) + (var_x276 - 0.001 * var_chaste_interface__slow_delayed_rectifier_potassium_current_xs2_gate__xs2) * (var_x291 + var_x292 - 0.0022499250000000003 * var_x286 - 0.0026603 * var_x287);
        IJth(rJacobian, 12, 0) = var_x300 * (var_x296 * var_x308 - var_x305 * var_x308 + 9.9999999999999995e-8 * var_x296 * (var_x306 + var_x307 - var_x303 - var_x304) / pow((var_x296 + var_x299), 2)) + (-0.001 * var_chaste_interface__transient_outward_current_zdv_gate__zdv + var_x301 * var_x302) * (var_x303 + var_x304 - var_x306 - var_x307);
        IJth(rJacobian, 13, 0) = var_x316 * (-0.0030000000000000001 * var_x317 * var_x321 + 1.5e-6 * var_x312 * (var_x318 + var_x319 - var_x320) / pow((var_x315 + 0.14999999999999999 * var_x312), 2)) + (-0.001 * var_chaste_interface__transient_outward_current_ydv_gate__ydv + var_x321 * var_x322) * (var_x320 - var_x318 - var_x319);
        IJth(rJacobian, 19, 0) = 0.001 * ((var_x331) ? (-var_x179 * (var_x156 + 7.9551252454080567e-6 * var_x29 - 0.00025000000000000001 * var_x60 - 1.684614757851118e-5 * var_x58)) : (0));
        IJth(rJacobian, 23, 0) = var_x334 * (-0.0040000000000000001 + 9.1272458415149417e-5 * var_x95 + 2.386537573622417e-5 * var_x29 - 16.0 * var_x139 - 5.0625 * var_x41 - 0.00075000000000000002 * var_x60 - 0.0024381008236689767 * var_x328 - 6.8454343811362063e-5 * var_x100 - 5.0538442735533534e-5 * var_x58);
        IJth(rJacobian, 24, 0) = var_x334 * (-2.7574104360798206e-8 + var_x341 + 3.375 * var_x41 + 2.6097162183887167e-5 * var_x96 + 0.0010652877718143633 * var_x70 + 166.55558320535218 * var_x57 - 0.5 * var_x80 - 0.0055199999999999997 * var_x2 - 0.00069711623550831479 * var_x329 - 0.0050000000000000001 * var_x81 - 1.9572871637915374e-5 * var_x98 - 698.34626081908675 * var_x16 - 0.023862446088641735 * var_x146 - 0.00092307692307692295 * var_x43 - var_x342 * var_x63);
        IJth(rJacobian, 0, 1) = mSetVoltageDerivativeToZero ? 0.0 : (1.4628604942013857e-6 * var_x111 + 0.0574992 * var_x105 + 574.99199999999996 * var_x28 + 1.1499999999999999 * var_x104 + 0.0046811535814444347 * var_x112 + 4.1826974130498878e-7 * var_x113 - 0.040282206767891383 * var_x47 - 0.6678084676374566 * var_x107 - 2.3575679435995049e-7 * var_x119 - 1.1499999999999999 * var_x102 - 7.8019226357407252 * var_x114 * var_x91);
        IJth(rJacobian, 1, 1) = var_x180 * (-var_x165 - var_x175 + 0.71029411764705874 * var_x176 - var_x179 * (var_x178 + 1149.9839999999999 * var_x28 + 0.11499840000000001 * var_x105)) + 0.001 * (0.00023800000000000004 / pow(var_x157, 3) + 7.0000000000000007e-5 / pow(var_x101, 3)) * (0.047352941176470584 * var_chaste_interface__calcium_dynamics__Ca_NSR + var_x175 * var_x181 - var_x165 * var_chaste_interface__calcium_dynamics__Cai - var_x179 * (0.003016 * var_chaste_interface__membrane__V - 0.00050000000000000001 * var_x29 - 0.040282206767891383 * var_x129 + var_x130 * var_x152 + var_x154 * var_chaste_interface__membrane__V + var_x177 * var_chaste_interface__calcium_dynamics__Cai)) / pow(var_x158, 2);
        IJth(rJacobian, 14, 1) = var_x174 * var_x326;
        IJth(rJacobian, 15, 1) = 0.0087500000000000008 * var_x164 - 0.0087500000000000008 * var_x176;
        IJth(rJacobian, 19, 1) = 0.001 * ((var_x331) ? (-var_x179 * (var_x178 + 574.99199999999996 * var_x28 + 0.057499200000000007 * var_x105)) : (0));
        IJth(rJacobian, 23, 1) = var_x334 * (1.4628604942013857e-6 * var_x111 + 0.1724976 * var_x105 + 1724.9760000000001 * var_x28);
        IJth(rJacobian, 24, 1) = var_x334 * (4.1826974130498884e-7 * var_x113 - 2.3575679435995052e-7 * var_x119);
        IJth(rJacobian, 0, 2) = mSetVoltageDerivativeToZero ? 0.0 : (-48.0 * var_x123);
        IJth(rJacobian, 2, 2) = -0.001 * ((var_x196) ? (var_x194 * var_x195) : (3200.0)) - 0.080000000000000002 * var_x197;
        IJth(rJacobian, 23, 2) = -0.0086703435177706879 * var_x123 * var_x160;
        IJth(rJacobian, 0, 3) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x124 * var_chaste_interface__fast_sodium_current_j_gate__j);
        IJth(rJacobian, 3, 3) = -0.001 * ((var_x200) ? (135.0 * var_x199) : (0)) - 0.001 * ((var_x200) ? (3560.0 * var_x201 + 310000000.0 * var_x202) : (7692.3076923076924 / var_x204));
        IJth(rJacobian, 23, 3) = -var_x335 * var_chaste_interface__fast_sodium_current_j_gate__j;
        IJth(rJacobian, 0, 4) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x124 * var_chaste_interface__fast_sodium_current_h_gate__h);
        IJth(rJacobian, 4, 4) = -0.001 * ((var_x200) ? (121.2 * var_x217) : (300.0 * var_x221)) - 0.001 * ((var_x200) ? (var_x212 * var_x213) : (0));
        IJth(rJacobian, 23, 4) = -var_x335 * var_chaste_interface__fast_sodium_current_h_gate__h;
        IJth(rJacobian, 0, 5) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x125 * var_x90 - var_x126 * var_x79 - var_x126 * var_x83);
        IJth(rJacobian, 1, 5) = -var_x182 * var_x183;
        IJth(rJacobian, 5, 5) = var_x225 * var_x234 - var_x224 * var_x234;
        IJth(rJacobian, 19, 5) = 0.001 * ((var_x331) ? (-var_x182 * var_x332) : (0));
        IJth(rJacobian, 23, 5) = -var_x336 * var_x337;
        IJth(rJacobian, 24, 5) = -var_x336 * var_x343;
        IJth(rJacobian, 0, 6) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x127 * var_x90 - var_x128 * var_x79 - var_x128 * var_x83);
        IJth(rJacobian, 1, 6) = -var_x183 * var_x184;
        IJth(rJacobian, 6, 6) = var_x246 * var_x249 + var_x246 * var_x251;
        IJth(rJacobian, 19, 6) = 0.001 * ((var_x331) ? (-var_x184 * var_x332) : (0));
        IJth(rJacobian, 23, 6) = -var_x337 * var_x338;
        IJth(rJacobian, 24, 6) = -var_x338 * var_x343;
        IJth(rJacobian, 0, 7) = mSetVoltageDerivativeToZero ? 0.0 : (-0.10000000000000001 * var_x131);
        IJth(rJacobian, 1, 7) = -9.0316078310111336e-6 * var_x131 * var_x161;
        IJth(rJacobian, 7, 7) = -0.001 * var_x257;
        IJth(rJacobian, 19, 7) = 0.001 * ((var_x331) ? (-0.0090316078310111337 * var_x131 * var_x160) : (0));
        IJth(rJacobian, 0, 8) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x130 * var_x18);
        IJth(rJacobian, 1, 8) = -4.5158039155055668e-6 * var_x161 * var_x185;
        IJth(rJacobian, 8, 8) = -0.001 * var_x261;
        IJth(rJacobian, 19, 8) = 0.001 * ((var_x331) ? (-0.0045158039155055668 * var_x160 * var_x185) : (0));
        IJth(rJacobian, 0, 9) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x33 * var_x42);
        IJth(rJacobian, 9, 9) = -0.0013799999999999999 * var_x270 * var_x272 - 0.00060999999999999997 * var_x266 * var_x273;
        IJth(rJacobian, 24, 9) = -4.3103250992251538e-6 * var_x32 * var_x344;
        IJth(rJacobian, 0, 10) = mSetVoltageDerivativeToZero ? 0.0 : (var_x116 * var_x53);
        IJth(rJacobian, 10, 10) = -0.00013100000000000001 * var_x289 - 7.1899999999999999e-5 * var_x290;
        IJth(rJacobian, 24, 10) = var_x116 * var_x334 * var_x340;
        IJth(rJacobian, 0, 11) = mSetVoltageDerivativeToZero ? 0.0 : (var_x132 * var_x51);
        IJth(rJacobian, 11, 11) = -3.2750000000000003e-5 * var_x289 - 1.7975e-5 * var_x290;
        IJth(rJacobian, 24, 11) = var_x132 * var_x334 * var_x339;
        IJth(rJacobian, 0, 12) = mSetVoltageDerivativeToZero ? 0.0 : (-1.5 * var_x133 * var_x42);
        IJth(rJacobian, 12, 12) = -var_x302 - 10.0 * var_x299;
        IJth(rJacobian, 24, 12) = -0.000270948234930334 * var_x133 * var_x344;
        IJth(rJacobian, 0, 13) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x134 * var_x69);
        IJth(rJacobian, 13, 13) = -var_x322 - 0.10000000000000001 * var_x315;
        IJth(rJacobian, 24, 13) = -9.0316078310111333e-5 * var_x134 * var_x160 * var_x68;
        IJth(rJacobian, 1, 14) = 7.0588235294117632e-6 * var_x159 * var_x174;
        IJth(rJacobian, 14, 14) = var_x326 * (-5.5555555555555554 - var_x174) + 0.00025000000000000001 * (5.5555555555555554 * var_chaste_interface__calcium_dynamics__Ca_NSR - 5.5555555555555554 * var_chaste_interface__calcium_dynamics__Ca_JSR - var_x174 * var_x181) / (pow(var_x323, 3) * pow((0.125 + var_x324), 2));
        IJth(rJacobian, 15, 14) = 0.00048309178743961351;
        IJth(rJacobian, 1, 15) = 4.7352941176470584e-5 * var_x159;
        IJth(rJacobian, 14, 15) = 0.0055555555555555558 * var_x325;
        IJth(rJacobian, 15, 15) = -0.001066425120772947;
        IJth(rJacobian, 16, 16) = 0.001 * ((0.25 * var_x29 + 7.0160275741043607 * var_chaste_interface__membrane__V + 500.0 * var_x81 - 106.84935482199306 * var_x121 - 40.282206767891381 * var_x129 - 0.00073656881518639836 * var_x4 + 50.0 * var_x106 * var_x130 + 698346.2608190868 * var_x16 * var_x42 + 7801.9226357407251 * var_x89 * var_x91 + 2.4381008236689765 * var_x328 * var_chaste_interface__membrane__V + 0.6971162355083147 * var_x329 * var_chaste_interface__membrane__V + 1150.0 * var_x102 * var_chaste_interface__calcium_dynamics__Cai + 5.5199999999999996 * var_x2 * var_x42 + 23.862446088641736 * var_x146 * var_x42 + 1687.5 * var_x135 * var_x36 + 433.0 * var_x118 * (1.0 + 0.59999999999999998 * var_x50) + 1000.0 * GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted) / HeartConfig::Instance()->GetCapacitance() + 16000.0 * var_x122 * var_x139 < -150000.0) ? (-100500.0) : (-500.0));
        IJth(rJacobian, 1, 17) = var_x186 * var_x187;
        IJth(rJacobian, 14, 17) = var_x186 * var_x327;
        IJth(rJacobian, 17, 17) = 0.001 * ((var_x330) ? (-100500.0) : (-500.0));
        IJth(rJacobian, 18, 18) = 0.001 * ((var_x330) ? (-100500.0) : (-10.0));
        IJth(rJacobian, 1, 19) = var_x187 * var_x189;
        IJth(rJacobian, 14, 19) = var_x189 * var_x327;
        IJth(rJacobian, 19, 19) = 0.001 * (((var_x331) || (var_chaste_interface__calcium_dynamics__APtrack2 > 0.01)) ? (0) : (-500.0));
        IJth(rJacobian, 20, 20) = 0.001 * (((var_chaste_interface__calcium_dynamics__APtrack3 < 0.37) && (var_chaste_interface__calcium_dynamics__OVRLDtrack3 < 0.37) && (1 / (1.0 + 0.80000000000000004 / var_chaste_interface__calcium_dynamics__Ca_JSR) > 0.69999999999999996)) ? (-50000.0) : (-500.0));
        IJth(rJacobian, 1, 21) = var_x187 * var_x190;
        IJth(rJacobian, 14, 21) = var_x190 * var_x327;
        IJth(rJacobian, 21, 21) = 0.001 * (((var_x333) && (var_chaste_interface__calcium_dynamics__OVRLDtrack2 < 0.97999999999999998)) ? (-50000.0) : (-500.0));
        IJth(rJacobian, 22, 22) = 0.001 * (((var_x333) && (var_chaste_interface__calcium_dynamics__OVRLDtrack3 < 0.97999999999999998)) ? (-50000.0) : (-10.0));
        IJth(rJacobian, 0, 23) = mSetVoltageDerivativeToZero ? 0.0 : (1.35e-7 * var_x141 + 3.3880737654706117 * var_x143 - 0.0013500000000000001 * var_x138 - 427.39741928797224 * var_x140 - 0.033750000000000002 * var_x136 - 0.10684935482199305 * var_x120 - 0.0018285756177517324 * var_x97);
        IJth(rJacobian, 1, 23) = -var_x162 * (2.7000000000000001e-7 * var_x141 - 0.0027000000000000001 * var_x138);
        IJth(rJacobian, 19, 23) = 0.001 * ((var_x331) ? (-var_x179 * (1.35e-7 * var_x141 - 0.0013500000000000001 * var_x138)) : (0));
        IJth(rJacobian, 23, 23) = var_x334 * (4.0500000000000004e-7 * var_x141 - 0.0040499999999999998 * var_x138 - 0.10684935482199306 * var_x120 - 0.0018285756177517324 * var_x97 - 0.10125000000000001 * var_x136 - 427.39741928797224 * var_x140);
        IJth(rJacobian, 24, 23) = var_x334 * (3.3880737654706117 * var_x345 + 0.067500000000000004 * var_x136);
        IJth(rJacobian, 0, 24) = mSetVoltageDerivativeToZero ? 0.0 : (4449.089151873166 * var_x150 + 184.83763041301756 * var_x143 - 0.63742174226149029 * var_x147 - 0.00052283717663123607 * var_x97 - 18654.461852717675 * var_x145 - 13.356169352749133 * var_x151 - 0.14745210965435041 * var_x144 - 7.3656881518639831e-7 * var_x3 - var_x149 * var_x65);
        IJth(rJacobian, 24, 24) = var_x334 * (4449.089151873166 * var_x150 + 184.83763041301756 * var_x345 - 0.00052283717663123607 * var_x97 - 18654.461852717679 * var_x145 - 0.63742174226149029 * var_x147 - 0.14745210965435041 * var_x144 - 7.3656881518639831e-7 * var_x3 - 13.356169352749133 * var_x151 - var_x149 * var_x342);
    }

    N_Vector CellFaberRudy2000FromCellMLCvode::ComputeDerivedQuantities(double var_chaste_interface__environment__time_converted, const N_Vector & rY)
    {
        // Inputs:
        // Time units: millisecond
        
        // Mathematics
        const double var_membrane__I_st_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time_converted); // uA_per_cm2

        N_Vector dqs = N_VNew_Serial(2);
        NV_Ith_S(dqs, 0) = var_chaste_interface__environment__time_converted;
        NV_Ith_S(dqs, 1) = var_membrane__I_st_converted;
        return dqs;
    }

template<>
void OdeSystemInformation<CellFaberRudy2000FromCellMLCvode>::Initialise(void)
{
    this->mSystemName = "LR_Dynamic_model_2000";
    this->mFreeVariableName = "environment__time";
    this->mFreeVariableUnits = "millisecond";

    // NV_Ith_S(rY, 0):
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-90.0);

    // NV_Ith_S(rY, 1):
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(6e-05);

    // NV_Ith_S(rY, 2):
    this->mVariableNames.push_back("fast_sodium_current_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0008);

    // NV_Ith_S(rY, 3):
    this->mVariableNames.push_back("fast_sodium_current_h_gate__h");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.993771);

    // NV_Ith_S(rY, 4):
    this->mVariableNames.push_back("fast_sodium_current_j_gate__j");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.995727);

    // NV_Ith_S(rY, 5):
    this->mVariableNames.push_back("L_type_Ca_channel_d_gate__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.210618e-06);

    // NV_Ith_S(rY, 6):
    this->mVariableNames.push_back("L_type_Ca_channel_f_gate__f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.999837);

    // NV_Ith_S(rY, 7):
    this->mVariableNames.push_back("T_type_Ca_channel_b_gate__b");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000970231);

    // NV_Ith_S(rY, 8):
    this->mVariableNames.push_back("T_type_Ca_channel_g_gate__g");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.994305);

    // NV_Ith_S(rY, 9):
    this->mVariableNames.push_back("rapid_delayed_rectifier_potassium_current_xr_gate__xr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000124042);

    // NV_Ith_S(rY, 10):
    this->mVariableNames.push_back("slow_delayed_rectifier_potassium_current_xs1_gate__xs1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00445683);

    // NV_Ith_S(rY, 11):
    this->mVariableNames.push_back("slow_delayed_rectifier_potassium_current_xs2_gate__xs2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00445683);

    // NV_Ith_S(rY, 12):
    this->mVariableNames.push_back("transient_outward_current_zdv_gate__zdv");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.5);

    // NV_Ith_S(rY, 13):
    this->mVariableNames.push_back("transient_outward_current_ydv_gate__ydv");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.5);

    // NV_Ith_S(rY, 14):
    this->mVariableNames.push_back("calcium_dynamics__Ca_JSR");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.8);

    // NV_Ith_S(rY, 15):
    this->mVariableNames.push_back("calcium_dynamics__Ca_NSR");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.8);

    // NV_Ith_S(rY, 16):
    this->mVariableNames.push_back("calcium_dynamics__APtrack");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 17):
    this->mVariableNames.push_back("calcium_dynamics__APtrack2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 18):
    this->mVariableNames.push_back("calcium_dynamics__APtrack3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 19):
    this->mVariableNames.push_back("calcium_dynamics__Cainfluxtrack");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 20):
    this->mVariableNames.push_back("calcium_dynamics__OVRLDtrack");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 21):
    this->mVariableNames.push_back("calcium_dynamics__OVRLDtrack2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 22):
    this->mVariableNames.push_back("calcium_dynamics__OVRLDtrack3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // NV_Ith_S(rY, 23):
    this->mVariableNames.push_back("ionic_concentrations__Nai");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(9.0);

    // NV_Ith_S(rY, 24):
    this->mVariableNames.push_back("ionic_concentrations__Ki");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(141.2);

    // mParameters[0]:
    this->mParameterNames.push_back("ScaleFactorGkr");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[1]:
    this->mParameterNames.push_back("ScaleFactorGks");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[2]:
    this->mParameterNames.push_back("ScaleFactorIto");
    this->mParameterUnits.push_back("dimensionless");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("environment__time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(CellFaberRudy2000FromCellMLCvode)

#endif // CHASTE_CVODE
