#ifdef CHASTE_CVODE
//! @file
//!
//! This source file was generated from CellML by chaste_codegen version 0.3.0
//!
//! Model: tentusscher_model_2006_epi
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: normal)
//! on 2020-08-04 18:32:33
//!
//! <autogenerated>

#include "TenTusscher2006EpiCvodeOpt.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"


    double CellTenTusscher2006EpiFromCellMLCvodeOpt::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }
    
    CellTenTusscher2006EpiFromCellMLCvodeOpt::CellTenTusscher2006EpiFromCellMLCvodeOpt(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                19,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<CellTenTusscher2006EpiFromCellMLCvodeOpt>::Instance();
        Init();
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
        
        NV_Ith_S(this->mParameters, 0) = 1.0; // (var_rapid_time_dependent_potassium_current__ScaleFactorGkr) [dimensionless]
        NV_Ith_S(this->mParameters, 1) = 1.0; // (var_slow_time_dependent_potassium_current__ScaleFactorGks) [dimensionless]
        NV_Ith_S(this->mParameters, 2) = 1.0; // (var_transient_outward_current__ScaleFactorIto) [dimensionless]
        NV_Ith_S(this->mParameters, 3) = 2.0; // (var_calcium_dynamics__Ca_o) [millimolar]
        NV_Ith_S(this->mParameters, 4) = 5.4000000000000004; // (var_potassium_dynamics__K_o) [millimolar]
        NV_Ith_S(this->mParameters, 5) = 140.0; // (var_sodium_dynamics__Na_o) [millimolar]
        NV_Ith_S(this->mParameters, 6) = 0.185; // (var_membrane__Cm) [microF_per_cm2]
        NV_Ith_S(this->mParameters, 7) = -52.0; // (var_membrane__stim_amplitude) [picoA_per_picoF]
        NV_Ith_S(this->mParameters, 8) = 1.0; // (var_membrane__stim_duration) [millisecond]
        NV_Ith_S(this->mParameters, 9) = 9000.0; // (var_membrane__stim_end) [millisecond]
        NV_Ith_S(this->mParameters, 10) = 50.0; // (var_membrane__stim_start) [millisecond]
        NV_Ith_S(this->mParameters, 11) = 1000.0; // (var_membrane__stim_period) [millisecond]
    }

    CellTenTusscher2006EpiFromCellMLCvodeOpt::~CellTenTusscher2006EpiFromCellMLCvodeOpt()
    {
    }
    
    double CellTenTusscher2006EpiFromCellMLCvodeOpt::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -85.23
        double var_chaste_interface__calcium_dynamics__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.000126
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.00621
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.4712
        double var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.0095
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.00172
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.7444
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.7045
        double var_chaste_interface__L_type_Ca_current_d_gate__d = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 3.373e-05
        double var_chaste_interface__L_type_Ca_current_f_gate__f = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.7888
        double var_chaste_interface__L_type_Ca_current_f2_gate__f2 = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.9755
        double var_chaste_interface__L_type_Ca_current_fCass_gate__fCass = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.9953
        double var_chaste_interface__transient_outward_current_s_gate__s = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.999998
        double var_chaste_interface__transient_outward_current_r_gate__r = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 2.42e-08
        double var_chaste_interface__calcium_dynamics__Ca_ss = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 0.00036
        double var_chaste_interface__sodium_dynamics__Na_i = NV_Ith_S(rY, 17);
        // Units: millimolar; Initial value: 8.604
        double var_chaste_interface__potassium_dynamics__K_i = NV_Ith_S(rY, 18);
        // Units: millimolar; Initial value: 136.89
        
        const double var_calcium_pump_current__i_p_Ca = 0.12379999999999999 * var_chaste_interface__calcium_dynamics__Ca_i / (0.00050000000000000001 + var_chaste_interface__calcium_dynamics__Ca_i); // picoA_per_picoF
        const double var_L_type_Ca_current__i_CaL = 0.57500202096124498 * (-15.0 + var_chaste_interface__membrane__V) * (-NV_Ith_S(mParameters, 3) + 0.25 * var_chaste_interface__calcium_dynamics__Ca_ss * exp(-1.1230167246823641 + 0.074867781645490947 * var_chaste_interface__membrane__V)) * var_chaste_interface__L_type_Ca_current_d_gate__d * var_chaste_interface__L_type_Ca_current_f2_gate__f2 * var_chaste_interface__L_type_Ca_current_fCass_gate__fCass * var_chaste_interface__L_type_Ca_current_f_gate__f / (-1.0 + exp(-1.1230167246823641 + 0.074867781645490947 * var_chaste_interface__membrane__V)); // picoA_per_picoF
        const double var_calcium_background_current__i_b_Ca = 0.00059199999999999997 * var_chaste_interface__membrane__V - 0.0079072731552699126 * log(NV_Ith_S(mParameters, 3) / var_chaste_interface__calcium_dynamics__Ca_i); // picoA_per_picoF
        const double var_reversal_potentials__E_K = 26.713760659695652 * log(NV_Ith_S(mParameters, 4) / var_chaste_interface__potassium_dynamics__K_i); // millivolt
        const double var_inward_rectifier_potassium_current__i_K1 = 0.54050000000000009 * (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) / ((1.0 + exp(-12.0 + 0.059999999999999998 * var_chaste_interface__membrane__V - 0.059999999999999998 * var_reversal_potentials__E_K)) * (0.10000000000000001 / (1.0 + exp(-12.0 + 0.059999999999999998 * var_chaste_interface__membrane__V - 0.059999999999999998 * var_reversal_potentials__E_K)) + (3.0 * exp(0.02 + 0.00020000000000000001 * var_chaste_interface__membrane__V - 0.00020000000000000001 * var_reversal_potentials__E_K) + exp(-1.0 + 0.10000000000000001 * var_chaste_interface__membrane__V - 0.10000000000000001 * var_reversal_potentials__E_K)) / (1.0 + exp(0.5 * var_reversal_potentials__E_K - 0.5 * var_chaste_interface__membrane__V)))); // picoA_per_picoF
        const double var_potassium_pump_current__i_p_K = 0.0146 * (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) / (1.0 + exp(4.1806020066889626 - 0.16722408026755853 * var_chaste_interface__membrane__V)); // picoA_per_picoF
        const double var_rapid_time_dependent_potassium_current__i_Kr = 0.06584071688552609 * sqrt(NV_Ith_S(mParameters, 4)) * (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 0) * var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 * var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2; // picoA_per_picoF
        const double var_reversal_potentials__E_Na = 26.713760659695652 * log(NV_Ith_S(mParameters, 5) / var_chaste_interface__sodium_dynamics__Na_i); // millivolt
        const double var_fast_sodium_current__i_Na = 14.837999999999999 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_reversal_potentials__E_Na + var_chaste_interface__membrane__V) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j; // picoA_per_picoF
        const double var_slow_time_dependent_potassium_current__i_Ks = 0.39200000000000002 * pow(var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs, 2) * (-26.713760659695652 * log((0.029999999999999999 * NV_Ith_S(mParameters, 5) + NV_Ith_S(mParameters, 4)) / (0.029999999999999999 * var_chaste_interface__sodium_dynamics__Na_i + var_chaste_interface__potassium_dynamics__K_i)) + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 1); // picoA_per_picoF
        const double var_sodium_background_current__i_b_Na = 0.00029 * var_chaste_interface__membrane__V - 0.00029 * var_reversal_potentials__E_Na; // picoA_per_picoF
        const double var_sodium_calcium_exchanger_current__i_NaCa = 1000.0 * (pow(var_chaste_interface__sodium_dynamics__Na_i, 3) * NV_Ith_S(mParameters, 3) * exp(0.013101861787960915 * var_chaste_interface__membrane__V) - 2.5 * pow(NV_Ith_S(mParameters, 5), 3) * var_chaste_interface__calcium_dynamics__Ca_i * exp(-0.024332029034784559 * var_chaste_interface__membrane__V)) / ((1.0 + 0.10000000000000001 * exp(-0.024332029034784559 * var_chaste_interface__membrane__V)) * (669921.875 + pow(NV_Ith_S(mParameters, 5), 3)) * (1.3799999999999999 + NV_Ith_S(mParameters, 3))); // picoA_per_picoF
        const double var_sodium_potassium_pump_current__i_NaK = 2.7240000000000002 * NV_Ith_S(mParameters, 4) * var_chaste_interface__sodium_dynamics__Na_i / ((1.0 + NV_Ith_S(mParameters, 4)) * (40.0 + var_chaste_interface__sodium_dynamics__Na_i) * (1.0 + 0.035299999999999998 * exp(-0.037433890822745473 * var_chaste_interface__membrane__V) + 0.1245 * exp(-0.0037433890822745472 * var_chaste_interface__membrane__V))); // picoA_per_picoF
        const double var_transient_outward_current__i_to = 0.29399999999999998 * (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 2) * var_chaste_interface__transient_outward_current_r_gate__r * var_chaste_interface__transient_outward_current_s_gate__s; // picoA_per_picoF
        const double var_chaste_interface__i_ionic = (var_L_type_Ca_current__i_CaL + var_calcium_background_current__i_b_Ca + var_calcium_pump_current__i_p_Ca + var_fast_sodium_current__i_Na + var_inward_rectifier_potassium_current__i_K1 + var_potassium_pump_current__i_p_K + var_rapid_time_dependent_potassium_current__i_Kr + var_slow_time_dependent_potassium_current__i_Ks + var_sodium_background_current__i_b_Na + var_sodium_calcium_exchanger_current__i_NaCa + var_sodium_potassium_pump_current__i_NaK + var_transient_outward_current__i_to) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void CellTenTusscher2006EpiFromCellMLCvodeOpt::EvaluateYDerivatives(double var_chaste_interface__environment__time, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -85.23
        double var_chaste_interface__calcium_dynamics__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.000126
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.00621
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.4712
        double var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.0095
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.00172
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.7444
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.7045
        double var_chaste_interface__L_type_Ca_current_d_gate__d = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 3.373e-05
        double var_chaste_interface__L_type_Ca_current_f_gate__f = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.7888
        double var_chaste_interface__L_type_Ca_current_f2_gate__f2 = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.9755
        double var_chaste_interface__L_type_Ca_current_fCass_gate__fCass = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.9953
        double var_chaste_interface__transient_outward_current_s_gate__s = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.999998
        double var_chaste_interface__transient_outward_current_r_gate__r = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 2.42e-08
        double var_chaste_interface__calcium_dynamics__Ca_SR = NV_Ith_S(rY, 14);
        // Units: millimolar; Initial value: 3.64
        double var_chaste_interface__calcium_dynamics__Ca_ss = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 0.00036
        double var_chaste_interface__calcium_dynamics__R_prime = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.9073
        double var_chaste_interface__sodium_dynamics__Na_i = NV_Ith_S(rY, 17);
        // Units: millimolar; Initial value: 8.604
        double var_chaste_interface__potassium_dynamics__K_i = NV_Ith_S(rY, 18);
        // Units: millimolar; Initial value: 136.89

        // Mathematics
        double d_dt_chaste_interface_var_membrane__V;
        const double d_dt_chaste_interface_var_L_type_Ca_current_fCass_gate__fCass = (0.40000000000000002 - var_chaste_interface__L_type_Ca_current_fCass_gate__fCass + 0.59999999999999998 / (1.0 + 399.99999999999994 * pow(var_chaste_interface__calcium_dynamics__Ca_ss, 2))) / (2.0 + 80.0 / (1.0 + 399.99999999999994 * pow(var_chaste_interface__calcium_dynamics__Ca_ss, 2))); // 1 / millisecond
        const double var_calcium_dynamics__i_leak = 0.00036000000000000002 * var_chaste_interface__calcium_dynamics__Ca_SR - 0.00036000000000000002 * var_chaste_interface__calcium_dynamics__Ca_i; // millimolar_per_millisecond
        const double var_calcium_dynamics__i_up = 0.0063749999999999996 / (1.0 + 6.2499999999999997e-8 / pow(var_chaste_interface__calcium_dynamics__Ca_i, 2)); // millimolar_per_millisecond
        const double var_calcium_dynamics__i_xfer = 0.0038 * var_chaste_interface__calcium_dynamics__Ca_ss - 0.0038 * var_chaste_interface__calcium_dynamics__Ca_i; // millimolar_per_millisecond
        const double var_calcium_dynamics__kcasr = 2.5 - 1.5 / (1.0 + 2.25 / pow(var_chaste_interface__calcium_dynamics__Ca_SR, 2)); // dimensionless
        const double var_calcium_dynamics__i_rel = 0.015299999999999998 * pow(var_chaste_interface__calcium_dynamics__Ca_ss, 2) * (-var_chaste_interface__calcium_dynamics__Ca_ss + var_chaste_interface__calcium_dynamics__Ca_SR) * var_chaste_interface__calcium_dynamics__R_prime / ((0.059999999999999998 + 0.14999999999999999 * pow(var_chaste_interface__calcium_dynamics__Ca_ss, 2) / var_calcium_dynamics__kcasr) * var_calcium_dynamics__kcasr); // millimolar_per_millisecond
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_SR = (-var_calcium_dynamics__i_leak - var_calcium_dynamics__i_rel + var_calcium_dynamics__i_up) / (1.0 + 3.0 / pow((0.29999999999999999 + var_chaste_interface__calcium_dynamics__Ca_SR), 2)); // millimolar / millisecond
        const double d_dt_chaste_interface_var_calcium_dynamics__R_prime = 0.0050000000000000001 - 0.0050000000000000001 * var_chaste_interface__calcium_dynamics__R_prime - 0.044999999999999998 * var_chaste_interface__calcium_dynamics__Ca_ss * var_chaste_interface__calcium_dynamics__R_prime * var_calcium_dynamics__kcasr; // 1 / millisecond
        const double var_calcium_pump_current__i_p_Ca = 0.12379999999999999 * var_chaste_interface__calcium_dynamics__Ca_i / (0.00050000000000000001 + var_chaste_interface__calcium_dynamics__Ca_i); // picoA_per_picoF
        const double var_L_type_Ca_current__i_CaL = 0.57500202096124498 * (-15.0 + var_chaste_interface__membrane__V) * (-NV_Ith_S(mParameters, 3) + 0.25 * var_chaste_interface__calcium_dynamics__Ca_ss * exp(-1.1230167246823641 + 0.074867781645490947 * var_chaste_interface__membrane__V)) * var_chaste_interface__L_type_Ca_current_d_gate__d * var_chaste_interface__L_type_Ca_current_f2_gate__f2 * var_chaste_interface__L_type_Ca_current_fCass_gate__fCass * var_chaste_interface__L_type_Ca_current_f_gate__f / (-1.0 + exp(-1.1230167246823641 + 0.074867781645490947 * var_chaste_interface__membrane__V)); // picoA_per_picoF
        const double d_dt_chaste_interface_var_L_type_Ca_current_d_gate__d = (-var_chaste_interface__L_type_Ca_current_d_gate__d + 1 / (1.0 + exp(-1.0666666666666667 - 0.13333333333333333 * var_chaste_interface__membrane__V))) / (1 / (1.0 + exp(2.5 - 0.050000000000000003 * var_chaste_interface__membrane__V)) + 1.3999999999999999 * (0.25 + 1.3999999999999999 / (1.0 + exp(-2.6923076923076925 - 0.076923076923076927 * var_chaste_interface__membrane__V))) / (1.0 + exp(1.0 + 0.20000000000000001 * var_chaste_interface__membrane__V))); // 1 / millisecond
        const double d_dt_chaste_interface_var_L_type_Ca_current_f2_gate__f2 = (0.33000000000000002 - var_chaste_interface__L_type_Ca_current_f2_gate__f2 + 0.67000000000000004 / (1.0 + exp(5.0 + 0.14285714285714285 * var_chaste_interface__membrane__V))) / (80.0 / (1.0 + exp(3.0 + 0.10000000000000001 * var_chaste_interface__membrane__V)) + 31.0 / (1.0 + exp(2.5 - 0.10000000000000001 * var_chaste_interface__membrane__V)) + 562.0 * exp(-3.0375000000000001 * pow((1 + 0.037037037037037035 * var_chaste_interface__membrane__V), 2))); // 1 / millisecond
        const double d_dt_chaste_interface_var_L_type_Ca_current_f_gate__f = (-var_chaste_interface__L_type_Ca_current_f_gate__f + 1 / (1.0 + exp(2.8571428571428572 + 0.14285714285714285 * var_chaste_interface__membrane__V))) / (20.0 + 200.0 / (1.0 + exp(1.3 - 0.10000000000000001 * var_chaste_interface__membrane__V)) + 180.0 / (1.0 + exp(3.0 + 0.10000000000000001 * var_chaste_interface__membrane__V)) + 1102.5 * exp(-3.2400000000000002 * pow((1 + 0.037037037037037035 * var_chaste_interface__membrane__V), 2))); // 1 / millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current_h_gate__h = (-var_chaste_interface__fast_sodium_current_h_gate__h + 1 / pow((1.0 + exp(9.6298788694481825 + 0.13458950201884254 * var_chaste_interface__membrane__V)), 2)) * (((var_chaste_interface__membrane__V < -40.0) ? (0.057000000000000002 * exp(-11.764705882352942 - 0.14705882352941177 * var_chaste_interface__membrane__V)) : (0)) + ((var_chaste_interface__membrane__V < -40.0) ? (310000.0 * exp(0.34849999999999998 * var_chaste_interface__membrane__V) + 2.7000000000000002 * exp(0.079000000000000001 * var_chaste_interface__membrane__V)) : (5.9230769230769234 / (1.0 + exp(-0.96036036036036043 - 0.0900900900900901 * var_chaste_interface__membrane__V))))); // 1 / millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current_j_gate__j = (-var_chaste_interface__fast_sodium_current_j_gate__j + 1 / pow((1.0 + exp(9.6298788694481825 + 0.13458950201884254 * var_chaste_interface__membrane__V)), 2)) * (((var_chaste_interface__membrane__V < -40.0) ? (0.024240000000000001 * exp(-0.01052 * var_chaste_interface__membrane__V) / (1.0 + exp(-5.5312920000000005 - 0.13780000000000001 * var_chaste_interface__membrane__V))) : (0.59999999999999998 * exp(0.057000000000000002 * var_chaste_interface__membrane__V) / (1.0 + exp(-3.2000000000000002 - 0.10000000000000001 * var_chaste_interface__membrane__V)))) + ((var_chaste_interface__membrane__V < -40.0) ? ((37.780000000000001 + var_chaste_interface__membrane__V) * (-25428.0 * exp(0.24440000000000001 * var_chaste_interface__membrane__V) - 6.9480000000000002e-6 * exp(-0.043909999999999998 * var_chaste_interface__membrane__V)) / (1.0 + exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V))) : (0))); // 1 / millisecond
        const double d_dt_chaste_interface_var_fast_sodium_current_m_gate__m = (1.0 + exp(-12.0 - 0.20000000000000001 * var_chaste_interface__membrane__V)) * (-var_chaste_interface__fast_sodium_current_m_gate__m + 1 / pow((1.0 + exp(-6.2967884828349945 - 0.11074197120708749 * var_chaste_interface__membrane__V)), 2)) / (0.10000000000000001 / (1.0 + exp(7.0 + 0.20000000000000001 * var_chaste_interface__membrane__V)) + 0.10000000000000001 / (1.0 + exp(-0.25 + 0.0050000000000000001 * var_chaste_interface__membrane__V))); // 1 / millisecond
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_ss = (20.007315288953912 * var_calcium_dynamics__i_rel - 300.0 * var_calcium_dynamics__i_xfer - 0.094772024954610332 * var_L_type_Ca_current__i_CaL * NV_Ith_S(mParameters, 6)) / (1.0 + 0.0001 / pow((0.00025000000000000001 + var_chaste_interface__calcium_dynamics__Ca_ss), 2)); // millimolar / millisecond
        const double var_membrane__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time) / HeartConfig::Instance()->GetCapacitance(); // picoA_per_picoF
        const double d_dt_chaste_interface_var_rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = 0.00037037037037037035 * (1.0 + exp(2.6086956521739131 + 0.086956521739130432 * var_chaste_interface__membrane__V)) * (1.0 + exp(-4.5 - 0.10000000000000001 * var_chaste_interface__membrane__V)) * (-var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 + 1 / (1.0 + exp(-3.7142857142857144 - 0.14285714285714285 * var_chaste_interface__membrane__V))); // 1 / millisecond
        const double d_dt_chaste_interface_var_rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = 0.29761904761904762 * (1.0 + exp(-3.0 + 0.050000000000000003 * var_chaste_interface__membrane__V)) * (1.0 + exp(-3.0 - 0.050000000000000003 * var_chaste_interface__membrane__V)) * (-var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 + 1 / (1.0 + exp(3.6666666666666665 + 0.041666666666666664 * var_chaste_interface__membrane__V))); // 1 / millisecond
        const double var_calcium_background_current__i_b_Ca = 0.00059199999999999997 * var_chaste_interface__membrane__V - 0.0079072731552699126 * log(NV_Ith_S(mParameters, 3) / var_chaste_interface__calcium_dynamics__Ca_i); // picoA_per_picoF
        const double var_reversal_potentials__E_K = 26.713760659695652 * log(NV_Ith_S(mParameters, 4) / var_chaste_interface__potassium_dynamics__K_i); // millivolt
        const double var_inward_rectifier_potassium_current__i_K1 = 0.54050000000000009 * (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) / ((1.0 + exp(-12.0 + 0.059999999999999998 * var_chaste_interface__membrane__V - 0.059999999999999998 * var_reversal_potentials__E_K)) * (0.10000000000000001 / (1.0 + exp(-12.0 + 0.059999999999999998 * var_chaste_interface__membrane__V - 0.059999999999999998 * var_reversal_potentials__E_K)) + (3.0 * exp(0.02 + 0.00020000000000000001 * var_chaste_interface__membrane__V - 0.00020000000000000001 * var_reversal_potentials__E_K) + exp(-1.0 + 0.10000000000000001 * var_chaste_interface__membrane__V - 0.10000000000000001 * var_reversal_potentials__E_K)) / (1.0 + exp(0.5 * var_reversal_potentials__E_K - 0.5 * var_chaste_interface__membrane__V)))); // picoA_per_picoF
        const double var_potassium_pump_current__i_p_K = 0.0146 * (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) / (1.0 + exp(4.1806020066889626 - 0.16722408026755853 * var_chaste_interface__membrane__V)); // picoA_per_picoF
        const double var_rapid_time_dependent_potassium_current__i_Kr = 0.06584071688552609 * sqrt(NV_Ith_S(mParameters, 4)) * (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 0) * var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 * var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2; // picoA_per_picoF
        const double d_dt_chaste_interface_var_slow_time_dependent_potassium_current_Xs_gate__Xs = (-var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs + 1 / (1.0 + exp(-0.35714285714285715 - 0.071428571428571425 * var_chaste_interface__membrane__V))) / (80.0 + 1400.0 / (sqrt(1.0 + exp(0.83333333333333337 - 0.16666666666666666 * var_chaste_interface__membrane__V)) * (1.0 + exp(-2.3333333333333335 + 0.066666666666666666 * var_chaste_interface__membrane__V)))); // 1 / millisecond
        const double var_reversal_potentials__E_Na = 26.713760659695652 * log(NV_Ith_S(mParameters, 5) / var_chaste_interface__sodium_dynamics__Na_i); // millivolt
        const double var_fast_sodium_current__i_Na = 14.837999999999999 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3) * (-var_reversal_potentials__E_Na + var_chaste_interface__membrane__V) * var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j; // picoA_per_picoF
        const double var_slow_time_dependent_potassium_current__i_Ks = 0.39200000000000002 * pow(var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs, 2) * (-26.713760659695652 * log((0.029999999999999999 * NV_Ith_S(mParameters, 5) + NV_Ith_S(mParameters, 4)) / (0.029999999999999999 * var_chaste_interface__sodium_dynamics__Na_i + var_chaste_interface__potassium_dynamics__K_i)) + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 1); // picoA_per_picoF
        const double var_sodium_background_current__i_b_Na = 0.00029 * var_chaste_interface__membrane__V - 0.00029 * var_reversal_potentials__E_Na; // picoA_per_picoF
        const double var_sodium_calcium_exchanger_current__i_NaCa = 1000.0 * (pow(var_chaste_interface__sodium_dynamics__Na_i, 3) * NV_Ith_S(mParameters, 3) * exp(0.013101861787960915 * var_chaste_interface__membrane__V) - 2.5 * pow(NV_Ith_S(mParameters, 5), 3) * var_chaste_interface__calcium_dynamics__Ca_i * exp(-0.024332029034784559 * var_chaste_interface__membrane__V)) / ((1.0 + 0.10000000000000001 * exp(-0.024332029034784559 * var_chaste_interface__membrane__V)) * (669921.875 + pow(NV_Ith_S(mParameters, 5), 3)) * (1.3799999999999999 + NV_Ith_S(mParameters, 3))); // picoA_per_picoF
        const double d_dt_chaste_interface_var_calcium_dynamics__Ca_i = (0.066691050963179718 * var_calcium_dynamics__i_leak - 0.066691050963179718 * var_calcium_dynamics__i_up - 0.00031590674984870116 * (-2.0 * var_sodium_calcium_exchanger_current__i_NaCa + var_calcium_background_current__i_b_Ca + var_calcium_pump_current__i_p_Ca) * NV_Ith_S(mParameters, 6) + var_calcium_dynamics__i_xfer) / (1.0 + 0.00020000000000000001 / pow((0.001 + var_chaste_interface__calcium_dynamics__Ca_i), 2)); // millimolar / millisecond
        const double var_sodium_potassium_pump_current__i_NaK = 2.7240000000000002 * NV_Ith_S(mParameters, 4) * var_chaste_interface__sodium_dynamics__Na_i / ((1.0 + NV_Ith_S(mParameters, 4)) * (40.0 + var_chaste_interface__sodium_dynamics__Na_i) * (1.0 + 0.035299999999999998 * exp(-0.037433890822745473 * var_chaste_interface__membrane__V) + 0.1245 * exp(-0.0037433890822745472 * var_chaste_interface__membrane__V))); // picoA_per_picoF
        const double d_dt_chaste_interface_var_sodium_dynamics__Na_i = 0.00063181349969740233 * (-var_fast_sodium_current__i_Na - var_sodium_background_current__i_b_Na - 3.0 * var_sodium_calcium_exchanger_current__i_NaCa - 3.0 * var_sodium_potassium_pump_current__i_NaK) * NV_Ith_S(mParameters, 6); // millimolar / millisecond
        const double d_dt_chaste_interface_var_transient_outward_current_r_gate__r = (-var_chaste_interface__transient_outward_current_r_gate__r + 1 / (1.0 + exp(3.3333333333333335 - 0.16666666666666666 * var_chaste_interface__membrane__V))) / (0.80000000000000004 + 9.5 * exp(-0.88888888888888884 * pow((1 + 0.025000000000000001 * var_chaste_interface__membrane__V), 2))); // 1 / millisecond
        const double var_transient_outward_current__i_to = 0.29399999999999998 * (-var_reversal_potentials__E_K + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 2) * var_chaste_interface__transient_outward_current_r_gate__r * var_chaste_interface__transient_outward_current_s_gate__s; // picoA_per_picoF
        const double d_dt_chaste_interface_var_potassium_dynamics__K_i = 0.00063181349969740233 * (-var_inward_rectifier_potassium_current__i_K1 - var_membrane__i_Stim - var_potassium_pump_current__i_p_K - var_rapid_time_dependent_potassium_current__i_Kr - var_slow_time_dependent_potassium_current__i_Ks - var_transient_outward_current__i_to + 2.0 * var_sodium_potassium_pump_current__i_NaK) * NV_Ith_S(mParameters, 6); // millimolar / millisecond
        const double d_dt_chaste_interface_var_transient_outward_current_s_gate__s = (-var_chaste_interface__transient_outward_current_s_gate__s + 1 / (1.0 + exp(4.0 + 0.20000000000000001 * var_chaste_interface__membrane__V))) / (3.0 + 5.0 / (1.0 + exp(-4.0 + 0.20000000000000001 * var_chaste_interface__membrane__V)) + 85.0 * exp(-6.328125 * pow((1 + 0.022222222222222223 * var_chaste_interface__membrane__V), 2))); // 1 / millisecond

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_membrane__V = 0.0;
        }
        else
        {
            d_dt_chaste_interface_var_membrane__V = -1.0 * var_L_type_Ca_current__i_CaL - 1.0 * var_calcium_background_current__i_b_Ca - 1.0 * var_calcium_pump_current__i_p_Ca - 1.0 * var_fast_sodium_current__i_Na - 1.0 * var_inward_rectifier_potassium_current__i_K1 - 1.0 * var_membrane__i_Stim - 1.0 * var_potassium_pump_current__i_p_K - 1.0 * var_rapid_time_dependent_potassium_current__i_Kr - 1.0 * var_slow_time_dependent_potassium_current__i_Ks - 1.0 * var_sodium_background_current__i_b_Na - 1.0 * var_sodium_calcium_exchanger_current__i_NaCa - 1.0 * var_sodium_potassium_pump_current__i_NaK - 1.0 * var_transient_outward_current__i_to; // millivolt / millisecond
        }
        
        NV_Ith_S(rDY,0) = d_dt_chaste_interface_var_membrane__V;
        NV_Ith_S(rDY,1) = d_dt_chaste_interface_var_calcium_dynamics__Ca_i;
        NV_Ith_S(rDY,2) = d_dt_chaste_interface_var_rapid_time_dependent_potassium_current_Xr1_gate__Xr1;
        NV_Ith_S(rDY,3) = d_dt_chaste_interface_var_rapid_time_dependent_potassium_current_Xr2_gate__Xr2;
        NV_Ith_S(rDY,4) = d_dt_chaste_interface_var_slow_time_dependent_potassium_current_Xs_gate__Xs;
        NV_Ith_S(rDY,5) = d_dt_chaste_interface_var_fast_sodium_current_m_gate__m;
        NV_Ith_S(rDY,6) = d_dt_chaste_interface_var_fast_sodium_current_h_gate__h;
        NV_Ith_S(rDY,7) = d_dt_chaste_interface_var_fast_sodium_current_j_gate__j;
        NV_Ith_S(rDY,8) = d_dt_chaste_interface_var_L_type_Ca_current_d_gate__d;
        NV_Ith_S(rDY,9) = d_dt_chaste_interface_var_L_type_Ca_current_f_gate__f;
        NV_Ith_S(rDY,10) = d_dt_chaste_interface_var_L_type_Ca_current_f2_gate__f2;
        NV_Ith_S(rDY,11) = d_dt_chaste_interface_var_L_type_Ca_current_fCass_gate__fCass;
        NV_Ith_S(rDY,12) = d_dt_chaste_interface_var_transient_outward_current_s_gate__s;
        NV_Ith_S(rDY,13) = d_dt_chaste_interface_var_transient_outward_current_r_gate__r;
        NV_Ith_S(rDY,14) = d_dt_chaste_interface_var_calcium_dynamics__Ca_SR;
        NV_Ith_S(rDY,15) = d_dt_chaste_interface_var_calcium_dynamics__Ca_ss;
        NV_Ith_S(rDY,16) = d_dt_chaste_interface_var_calcium_dynamics__R_prime;
        NV_Ith_S(rDY,17) = d_dt_chaste_interface_var_sodium_dynamics__Na_i;
        NV_Ith_S(rDY,18) = d_dt_chaste_interface_var_potassium_dynamics__K_i;
    }

    void CellTenTusscher2006EpiFromCellMLCvodeOpt::EvaluateAnalyticJacobian(double var_chaste_interface__environment__time, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -85.23
        double var_chaste_interface__calcium_dynamics__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.000126
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.00621
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.4712
        double var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.0095
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.00172
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.7444
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.7045
        double var_chaste_interface__L_type_Ca_current_d_gate__d = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 3.373e-05
        double var_chaste_interface__L_type_Ca_current_f_gate__f = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.7888
        double var_chaste_interface__L_type_Ca_current_f2_gate__f2 = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.9755
        double var_chaste_interface__L_type_Ca_current_fCass_gate__fCass = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.9953
        double var_chaste_interface__transient_outward_current_s_gate__s = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.999998
        double var_chaste_interface__transient_outward_current_r_gate__r = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 2.42e-08
        double var_chaste_interface__calcium_dynamics__Ca_SR = NV_Ith_S(rY, 14);
        // Units: millimolar; Initial value: 3.64
        double var_chaste_interface__calcium_dynamics__Ca_ss = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 0.00036
        double var_chaste_interface__calcium_dynamics__R_prime = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.9073
        double var_chaste_interface__sodium_dynamics__Na_i = NV_Ith_S(rY, 17);
        // Units: millimolar; Initial value: 8.604
        double var_chaste_interface__potassium_dynamics__K_i = NV_Ith_S(rY, 18);
        // Units: millimolar; Initial value: 136.89
        
        const double var_x0 = exp(4.1806020066889626 - 0.16722408026755853 * var_chaste_interface__membrane__V);
        const double var_x1 = 1.0 + var_x0;
        const double var_x2 = 1 / var_x1;
        const double var_x3 = pow(var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs, 2) * NV_Ith_S(mParameters, 1);
        const double var_x4 = 1 / var_chaste_interface__potassium_dynamics__K_i;
        const double var_x5 = log(var_x4 * NV_Ith_S(mParameters, 4));
        const double var_x6 = exp(-12.0 + 0.059999999999999998 * var_chaste_interface__membrane__V - 1.6028256395817388 * var_x5);
        const double var_x7 = 1.0 + var_x6;
        const double var_x8 = 1 / var_x7;
        const double var_x9 = exp(13.356880329847826 * var_x5 - 0.5 * var_chaste_interface__membrane__V);
        const double var_x10 = 1.0 + var_x9;
        const double var_x11 = 1 / var_x10;
        const double var_x12 = exp(0.02 + 0.00020000000000000001 * var_chaste_interface__membrane__V - 0.0053427521319391299 * var_x5);
        const double var_x13 = 0.10000000000000001 * var_chaste_interface__membrane__V;
        const double var_x14 = exp(-1.0 + var_x13 - 2.6713760659695653 * var_x5);
        const double var_x15 = var_x14 + 3.0 * var_x12;
        const double var_x16 = 0.10000000000000001 * var_x8 + var_x11 * var_x15;
        const double var_x17 = 1 / var_x16;
        const double var_x18 = var_x17 * var_x8;
        const double var_x19 = NV_Ith_S(mParameters, 2) * var_chaste_interface__transient_outward_current_r_gate__r * var_chaste_interface__transient_outward_current_s_gate__s;
        const double var_x20 = var_chaste_interface__fast_sodium_current_h_gate__h * var_chaste_interface__fast_sodium_current_j_gate__j;
        const double var_x21 = pow(var_chaste_interface__fast_sodium_current_m_gate__m, 3);
        const double var_x22 = 14.837999999999999 * var_x21;
        const double var_x23 = -26.713760659695652 * var_x5 + var_chaste_interface__membrane__V;
        const double var_x24 = var_x0 * var_x23 / pow(var_x1, 2);
        const double var_x25 = var_x6 / pow(var_x7, 2);
        const double var_x26 = var_x17 * var_x23;
        const double var_x27 = var_x25 * var_x26;
        const double var_x28 = exp(-0.024332029034784559 * var_chaste_interface__membrane__V);
        const double var_x29 = pow(NV_Ith_S(mParameters, 5), 3);
        const double var_x30 = var_x28 * var_x29;
        const double var_x31 = var_x30 * var_chaste_interface__calcium_dynamics__Ca_i;
        const double var_x32 = NV_Ith_S(mParameters, 3) * exp(0.013101861787960915 * var_chaste_interface__membrane__V);
        const double var_x33 = var_x32 * pow(var_chaste_interface__sodium_dynamics__Na_i, 3);
        const double var_x34 = 1.0 + 0.10000000000000001 * var_x28;
        const double var_x35 = 1 / ((669921.875 + var_x29) * (1.3799999999999999 + NV_Ith_S(mParameters, 3)));
        const double var_x36 = var_x35 / var_x34;
        const double var_x37 = var_x36 * (0.060830072586961395 * var_x31 + 0.013101861787960915 * var_x33);
        const double var_x38 = var_x15 * var_x9 / pow(var_x10, 2);
        const double var_x39 = 0.0060000000000000001 * var_x25 - 0.5 * var_x38 - var_x11 * (0.10000000000000001 * var_x14 + 0.00060000000000000006 * var_x12);
        const double var_x40 = var_x23 * var_x8 / pow(var_x16, 2);
        const double var_x41 = 0.54050000000000009 * var_x40;
        const double var_x42 = sqrt(NV_Ith_S(mParameters, 4));
        const double var_x43 = var_x42 * NV_Ith_S(mParameters, 0) * var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2;
        const double var_x44 = 0.06584071688552609 * var_x43;
        const double var_x45 = var_x33 - 2.5 * var_x31;
        const double var_x46 = var_x28 * var_x35 * var_x45 / pow(var_x34, 2);
        const double var_x47 = 1 / (1.0 + NV_Ith_S(mParameters, 4));
        const double var_x48 = 1 / (40.0 + var_chaste_interface__sodium_dynamics__Na_i);
        const double var_x49 = exp(-0.037433890822745473 * var_chaste_interface__membrane__V);
        const double var_x50 = exp(-0.0037433890822745472 * var_chaste_interface__membrane__V);
        const double var_x51 = 1.0 + 0.035299999999999998 * var_x49 + 0.1245 * var_x50;
        const double var_x52 = var_x47 * var_x48 * (0.001321416346042915 * var_x49 + 0.00046605194074318115 * var_x50) * NV_Ith_S(mParameters, 4) * var_chaste_interface__sodium_dynamics__Na_i / pow(var_x51, 2);
        const double var_x53 = exp(-1.1230167246823641 + 0.074867781645490947 * var_chaste_interface__membrane__V);
        const double var_x54 = -1.0 + var_x53;
        const double var_x55 = 1 / var_x54;
        const double var_x56 = var_x55 * var_chaste_interface__L_type_Ca_current_d_gate__d * var_chaste_interface__L_type_Ca_current_f2_gate__f2 * var_chaste_interface__L_type_Ca_current_fCass_gate__fCass * var_chaste_interface__L_type_Ca_current_f_gate__f;
        const double var_x57 = var_x53 * var_chaste_interface__calcium_dynamics__Ca_ss;
        const double var_x58 = -NV_Ith_S(mParameters, 3) + 0.25 * var_x57;
        const double var_x59 = 0.57500202096124498 * var_x58;
        const double var_x60 = -15.0 + var_chaste_interface__membrane__V;
        const double var_x61 = var_x60 * var_chaste_interface__L_type_Ca_current_f2_gate__f2 * var_chaste_interface__L_type_Ca_current_fCass_gate__fCass * var_chaste_interface__L_type_Ca_current_f_gate__f;
        const double var_x62 = var_x53 * var_x61 * var_chaste_interface__L_type_Ca_current_d_gate__d / pow(var_x54, 2);
        const double var_x63 = var_x56 * var_x60;
        const double var_x64 = var_x57 * var_x63;
        const double var_x65 = 0.00050000000000000001 + var_chaste_interface__calcium_dynamics__Ca_i;
        const double var_x66 = 1 / var_x65;
        const double var_x67 = 0.12379999999999999 * var_x66;
        const double var_x68 = 1 / var_chaste_interface__calcium_dynamics__Ca_i;
        const double var_x69 = var_chaste_interface__calcium_dynamics__Ca_i / pow(var_x65, 2);
        const double var_x70 = var_x30 * var_x36;
        const double var_x71 = var_x23 * var_x42 * NV_Ith_S(mParameters, 0) * var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1;
        const double var_x72 = 1 / (0.029999999999999999 * var_chaste_interface__sodium_dynamics__Na_i + var_chaste_interface__potassium_dynamics__K_i);
        const double var_x73 = (-26.713760659695652 * log(var_x72 * (0.029999999999999999 * NV_Ith_S(mParameters, 5) + NV_Ith_S(mParameters, 4))) + var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 1) * var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs;
        const double var_x74 = 1 / var_chaste_interface__sodium_dynamics__Na_i;
        const double var_x75 = -26.713760659695652 * log(var_x74 * NV_Ith_S(mParameters, 5)) + var_chaste_interface__membrane__V;
        const double var_x76 = var_x20 * var_x75 * pow(var_chaste_interface__fast_sodium_current_m_gate__m, 2);
        const double var_x77 = var_x22 * var_x75;
        const double var_x78 = var_x55 * var_x59;
        const double var_x79 = var_x60 * var_chaste_interface__L_type_Ca_current_d_gate__d * var_chaste_interface__L_type_Ca_current_fCass_gate__fCass;
        const double var_x80 = var_x78 * var_x79;
        const double var_x81 = var_x60 * var_chaste_interface__L_type_Ca_current_d_gate__d * var_chaste_interface__L_type_Ca_current_f2_gate__f2 * var_chaste_interface__L_type_Ca_current_f_gate__f;
        const double var_x82 = (7.8538456339505203 * var_x5 - 0.29399999999999998 * var_chaste_interface__membrane__V) * NV_Ith_S(mParameters, 2);
        const double var_x83 = var_x82 * var_chaste_interface__transient_outward_current_r_gate__r;
        const double var_x84 = var_x82 * var_chaste_interface__transient_outward_current_s_gate__s;
        const double var_x85 = var_x53 * var_x63;
        const double var_x86 = var_x3 * var_x72;
        const double var_x87 = var_x47 * NV_Ith_S(mParameters, 4) / var_x51;
        const double var_x88 = var_x48 * var_x87;
        const double var_x89 = var_x20 * var_x21;
        const double var_x90 = var_x74 * var_x89;
        const double var_x91 = var_x87 * var_chaste_interface__sodium_dynamics__Na_i / pow((1 + 0.025000000000000001 * var_chaste_interface__sodium_dynamics__Na_i), 2);
        const double var_x92 = var_x32 * var_x36 * pow(var_chaste_interface__sodium_dynamics__Na_i, 2);
        const double var_x93 = var_x2 * var_x4;
        const double var_x94 = var_x18 * var_x4;
        const double var_x95 = var_x25 * var_x4;
        const double var_x96 = 0.16028256395817389 * var_x95 - var_x11 * (2.6713760659695653 * var_x14 * var_x4 + 0.01602825639581739 * var_x12 * var_x4) - 13.356880329847826 * var_x38 * var_x4;
        const double var_x97 = var_x19 * var_x4;
        const double var_x98 = var_x26 * var_x95;
        const double var_x99 = var_x43 * var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1;
        const double var_x100 = var_x4 * var_x99;
        const double var_x101 = 0.001 + var_chaste_interface__calcium_dynamics__Ca_i;
        const double var_x102 = 1.0 + 0.00020000000000000001 / pow(var_x101, 2);
        const double var_x103 = 1 / var_x102;
        const double var_x104 = var_x103;
        const double var_x105 = 1.0 + 6.2499999999999997e-8 / pow(var_chaste_interface__calcium_dynamics__Ca_i, 2);
        const double var_x106 = 1 / (pow(var_x105, 2) * pow(var_chaste_interface__calcium_dynamics__Ca_i, 3));
        const double var_x107 = 1 / var_x105;
        const double var_x108 = 0.10000000000000001 * var_chaste_interface__membrane__V;
        const double var_x109 = -var_x108;
        const double var_x110 = exp(-4.5 + var_x109);
        const double var_x111 = 1.0 + var_x110;
        const double var_x112 = 0.14285714285714285 * var_chaste_interface__membrane__V;
        const double var_x113 = exp(-3.7142857142857144 - var_x112);
        const double var_x114 = 1.0 + var_x113;
        const double var_x115 = -var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 + 1 / var_x114;
        const double var_x116 = exp(2.6086956521739131 + 0.086956521739130432 * var_chaste_interface__membrane__V);
        const double var_x117 = 0.00037037037037037035 + 0.00037037037037037035 * var_x116;
        const double var_x118 = var_x111 * var_x117;
        const double var_x119 = 0.050000000000000003 * var_chaste_interface__membrane__V;
        const double var_x120 = -var_x119;
        const double var_x121 = exp(-3.0 + var_x120);
        const double var_x122 = 1.0 + var_x121;
        const double var_x123 = exp(3.6666666666666665 + 0.041666666666666664 * var_chaste_interface__membrane__V);
        const double var_x124 = 1.0 + var_x123;
        const double var_x125 = -var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 + 1 / var_x124;
        const double var_x126 = exp(-3.0 + var_x119);
        const double var_x127 = 0.29761904761904762 + 0.29761904761904762 * var_x126;
        const double var_x128 = var_x122 * var_x127;
        const double var_x129 = -0.16666666666666666 * var_chaste_interface__membrane__V;
        const double var_x130 = exp(0.83333333333333337 + var_x129);
        const double var_x131 = 1.0 + var_x130;
        const double var_x132 = 1 / sqrt(var_x131);
        const double var_x133 = exp(-2.3333333333333335 + 0.066666666666666666 * var_chaste_interface__membrane__V);
        const double var_x134 = 1.0 + var_x133;
        const double var_x135 = 1 / var_x134;
        const double var_x136 = var_x132 * var_x135;
        const double var_x137 = exp(-0.35714285714285715 - 0.071428571428571425 * var_chaste_interface__membrane__V);
        const double var_x138 = 1.0 + var_x137;
        const double var_x139 = 1 / (80.0 + 1400.0 * var_x136);
        const double var_x140 = 0.20000000000000001 * var_chaste_interface__membrane__V;
        const double var_x141 = exp(7.0 + var_x140);
        const double var_x142 = 1.0 + var_x141;
        const double var_x143 = 1 / var_x142;
        const double var_x144 = exp(-0.25 + 0.0050000000000000001 * var_chaste_interface__membrane__V);
        const double var_x145 = 1.0 + var_x144;
        const double var_x146 = 1 / var_x145;
        const double var_x147 = 1 / (0.10000000000000001 * var_x143 + 0.10000000000000001 * var_x146);
        const double var_x148 = exp(-6.2967884828349945 - 0.11074197120708749 * var_chaste_interface__membrane__V);
        const double var_x149 = 1.0 + var_x148;
        const double var_x150 = -var_chaste_interface__fast_sodium_current_m_gate__m + 1 / pow(var_x149, 2);
        const double var_x151 = exp(-12.0 - var_x140);
        const double var_x152 = 1.0 + var_x151;
        const double var_x153 = var_x147 * var_x152;
        const double var_x154 = exp(9.6298788694481825 + 0.13458950201884254 * var_chaste_interface__membrane__V);
        const double var_x155 = 1.0 + var_x154;
        const double var_x156 = 1 / pow(var_x155, 2);
        const double var_x157 = var_x156 - var_chaste_interface__fast_sodium_current_h_gate__h;
        const double var_x158 = exp(0.34849999999999998 * var_chaste_interface__membrane__V);
        const double var_x159 = exp(0.079000000000000001 * var_chaste_interface__membrane__V);
        const double var_x160 = exp(-11.764705882352942 - 0.14705882352941177 * var_chaste_interface__membrane__V);
        const double var_x161 = 310000.0 * var_x158;
        const double var_x162 = 2.7000000000000002 * var_x159;
        const double var_x163 = 0.057000000000000002 * var_x160;
        const double var_x164 = var_x154 / pow(var_x155, 3);
        const double var_x165 = 0.26917900403768508 * var_x164;
        const double var_x166 = var_chaste_interface__membrane__V < -40.0;
        const double var_x167 = exp(-0.96036036036036043 - 0.0900900900900901 * var_chaste_interface__membrane__V);
        const double var_x168 = 1.0 + var_x167;
        const double var_x169 = 1 / var_x168;
        const double var_x170 = var_x156 - var_chaste_interface__fast_sodium_current_j_gate__j;
        const double var_x171 = exp(0.24440000000000001 * var_chaste_interface__membrane__V);
        const double var_x172 = exp(-0.043909999999999998 * var_chaste_interface__membrane__V);
        const double var_x173 = -25428.0 * var_x171 - 6.9480000000000002e-6 * var_x172;
        const double var_x174 = exp(24.640530000000002 + 0.311 * var_chaste_interface__membrane__V);
        const double var_x175 = 1.0 + var_x174;
        const double var_x176 = 1 / var_x175;
        const double var_x177 = var_x173 * var_x176;
        const double var_x178 = exp(-5.5312920000000005 - 0.13780000000000001 * var_chaste_interface__membrane__V);
        const double var_x179 = 1.0 + var_x178;
        const double var_x180 = exp(-0.01052 * var_chaste_interface__membrane__V);
        const double var_x181 = var_x180 / var_x179;
        const double var_x182 = 37.780000000000001 + var_chaste_interface__membrane__V;
        const double var_x183 = 0.024240000000000001 * var_x181;
        const double var_x184 = var_x177 * var_x182;
        const double var_x185 = exp(-3.2000000000000002 - var_x13);
        const double var_x186 = 1.0 + var_x185;
        const double var_x187 = exp(0.057000000000000002 * var_chaste_interface__membrane__V);
        const double var_x188 = var_x187 / var_x186;
        const double var_x189 = exp(2.5 + var_x120);
        const double var_x190 = 1.0 + var_x189;
        const double var_x191 = 1 / var_x190;
        const double var_x192 = exp(1.0 + var_x140);
        const double var_x193 = 1.0 + var_x192;
        const double var_x194 = 1 / var_x193;
        const double var_x195 = exp(-2.6923076923076925 - 0.076923076923076927 * var_chaste_interface__membrane__V);
        const double var_x196 = 1.0 + var_x195;
        const double var_x197 = 0.25 + 1.3999999999999999 / var_x196;
        const double var_x198 = var_x194 * var_x197;
        const double var_x199 = exp(-1.0666666666666667 - 0.13333333333333333 * var_chaste_interface__membrane__V);
        const double var_x200 = 1.0 + var_x199;
        const double var_x201 = 1 / (var_x191 + 1.3999999999999999 * var_x198);
        const double var_x202 = exp(3.0 + var_x108);
        const double var_x203 = 1.0 + var_x202;
        const double var_x204 = 1 / var_x203;
        const double var_x205 = exp(1.3 + var_x109);
        const double var_x206 = 1.0 + var_x205;
        const double var_x207 = 1 / var_x206;
        const double var_x208 = pow((1 + 0.037037037037037035 * var_chaste_interface__membrane__V), 2);
        const double var_x209 = exp(-3.2400000000000002 * var_x208);
        const double var_x210 = exp(2.8571428571428572 + var_x112);
        const double var_x211 = 1.0 + var_x210;
        const double var_x212 = var_x202 / pow(var_x203, 2);
        const double var_x213 = 1102.5 * var_x209;
        const double var_x214 = 1 / (20.0 + var_x213 + 200.0 * var_x207 + 180.0 * var_x204);
        const double var_x215 = exp(2.5 + var_x109);
        const double var_x216 = 1.0 + var_x215;
        const double var_x217 = 1 / var_x216;
        const double var_x218 = exp(-3.0375000000000001 * var_x208);
        const double var_x219 = exp(5.0 + var_x112);
        const double var_x220 = 1.0 + var_x219;
        const double var_x221 = 562.0 * var_x218;
        const double var_x222 = 1 / (var_x221 + 80.0 * var_x204 + 31.0 * var_x217);
        const double var_x223 = pow(var_chaste_interface__calcium_dynamics__Ca_ss, 2);
        const double var_x224 = 1 / (1.0 + 399.99999999999994 * var_x223);
        const double var_x225 = 1 / (2.0 + 80.0 * var_x224);
        const double var_x226 = var_chaste_interface__calcium_dynamics__Ca_ss / pow((0.0025000000000000005 + var_x223), 2);
        const double var_x227 = exp(-4.0 + var_x140);
        const double var_x228 = 1.0 + var_x227;
        const double var_x229 = 1 / var_x228;
        const double var_x230 = exp(-6.328125 * pow((1 + 0.022222222222222223 * var_chaste_interface__membrane__V), 2));
        const double var_x231 = exp(4.0 + var_x140);
        const double var_x232 = 1.0 + var_x231;
        const double var_x233 = 85.0 * var_x230;
        const double var_x234 = 1 / (3.0 + var_x233 + 5.0 * var_x229);
        const double var_x235 = exp(3.3333333333333335 + var_x129);
        const double var_x236 = 1.0 + var_x235;
        const double var_x237 = exp(-0.88888888888888884 * pow((1 + 0.025000000000000001 * var_chaste_interface__membrane__V), 2));
        const double var_x238 = 1 / (0.80000000000000004 + 9.5 * var_x237);
        const double var_x239 = 0.29999999999999999 + var_chaste_interface__calcium_dynamics__Ca_SR;
        const double var_x240 = pow(var_x239, (-2));
        const double var_x241 = 1 / (1.0 + 3.0 * var_x240);
        const double var_x242 = var_x241;
        const double var_x243 = pow(var_chaste_interface__calcium_dynamics__Ca_SR, (-2));
        const double var_x244 = 1 / (1.0 + 2.25 * var_x243);
        const double var_x245 = 1 / (2.5 - 1.5 * var_x244);
        const double var_x246 = var_x223 * var_x245;
        const double var_x247 = 1 / (0.059999999999999998 + 0.14999999999999999 * var_x246);
        const double var_x248 = var_x247 * var_chaste_interface__calcium_dynamics__R_prime;
        const double var_x249 = var_x246 * var_x248;
        const double var_x250 = 0.015299999999999998 * var_x249;
        const double var_x251 = 1 / (pow((0.44444444444444442 + var_x243), 2) * pow(var_chaste_interface__calcium_dynamics__Ca_SR, 3));
        const double var_x252 = -var_chaste_interface__calcium_dynamics__Ca_ss + var_chaste_interface__calcium_dynamics__Ca_SR;
        const double var_x253 = var_x252 / pow((1 - 0.59999999999999998 * var_x244), 2);
        const double var_x254 = var_x223 * var_x248 * var_x251 * var_x253;
        const double var_x255 = var_x251 * var_chaste_interface__calcium_dynamics__R_prime;
        const double var_x256 = var_x253 / pow((0.40000000000000002 + var_x246), 2);
        const double var_x257 = var_x245 * var_x255 * var_x256 * pow(var_chaste_interface__calcium_dynamics__Ca_ss, 4);
        const double var_x258 = var_x256 * pow(var_chaste_interface__calcium_dynamics__Ca_ss, 3) * var_chaste_interface__calcium_dynamics__R_prime;
        const double var_x259 = var_x245 * var_x248 * var_x252 * var_chaste_interface__calcium_dynamics__Ca_ss;
        const double var_x260 = var_x246 * var_x247 * var_x252;
        const double var_x261 = var_x58 * NV_Ith_S(mParameters, 6);
        const double var_x262 = 0.054494105879490481 * var_x261;
        const double var_x263 = 0.00025000000000000001 + var_chaste_interface__calcium_dynamics__Ca_ss;
        const double var_x264 = 1.0 + 0.0001 / pow(var_x263, 2);
        const double var_x265 = 1 / var_x264;
        const double var_x266 = var_x265;
        const double var_x267 = var_x262 * var_x265 * var_x55;
        const double var_x268 = var_x267 * var_x79;
        const double var_x269 = 0.30611192392099484 * var_x249;
        const double var_x270 = -0.11249999999999999 + 0.067500000000000004 * var_x244;
        const double var_x271 = 0.0093748487085100543 * var_x21 * var_x75 * NV_Ith_S(mParameters, 6);
        const double var_x272 = 0.00034149519658644594 * var_x40;
        const double var_x273 = 4.1599053758030084e-5 * NV_Ith_S(mParameters, 6);
        const double var_x274 = 0.00063181349969740233 * NV_Ith_S(mParameters, 6);
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = mSetVoltageDerivativeToZero ? 0.0 : (-0.00088199999999999997 + 0.03243 * var_x27 - 1000.0 * var_x37 - 2.7240000000000002 * var_x52 - 0.39200000000000002 * var_x3 - 0.29399999999999998 * var_x19 - 0.0146 * var_x2 - 2.4332029034784557 * var_x46 - 0.0024414715719063545 * var_x24 - 0.54050000000000009 * var_x18 - 0.010762281437760623 * var_x64 - var_x20 * var_x22 - var_x39 * var_x41 - var_x44 * var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 - var_x56 * var_x59 + 0.043049125751042493 * var_x58 * var_x62);
        IJth(rJacobian, 1, 0) = var_x104 * (-1.8701679591043107e-7 + 0.6318134996974023 * var_x37 + 0.0015373304419206038 * var_x46) * NV_Ith_S(mParameters, 6);
        IJth(rJacobian, 2, 0) = 3.2206119162640899e-5 * var_x111 * var_x115 * var_x116 + 0.14285714285714285 * var_x113 * var_x118 / pow(var_x114, 2) - 0.10000000000000001 * var_x110 * var_x115 * var_x117;
        IJth(rJacobian, 3, 0) = 0.01488095238095238 * var_x122 * var_x125 * var_x126 - 0.041666666666666664 * var_x123 * var_x128 / pow(var_x124, 2) - 0.050000000000000003 * var_x121 * var_x125 * var_x127;
        IJth(rJacobian, 4, 0) = 5.1020408163265302e-7 * (-var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs + 1 / var_x138) * (93.333333333333329 * var_x132 * var_x133 / pow(var_x134, 2) - 116.66666666666667 * var_x130 * var_x135 / pow(var_x131, (3 / 2))) / pow((0.057142857142857141 + var_x136), 2) + 0.071428571428571425 * var_x137 * var_x139 / pow(var_x138, 2);
        IJth(rJacobian, 5, 0) = 0.22148394241417499 * var_x148 * var_x153 / pow(var_x149, 3) - 0.20000000000000001 * var_x147 * var_x150 * var_x151 + 99.999999999999986 * var_x150 * var_x152 * (0.02 * var_x141 / pow(var_x142, 2) + 0.00050000000000000001 * var_x144 / pow(var_x145, 2)) / pow((var_x143 + var_x146), 2);
        IJth(rJacobian, 6, 0) = ((var_x166) ? (var_x157 * (108035.0 * var_x158 + 0.21330000000000002 * var_x159 - 0.008382352941176471 * var_x160) - var_x165 * (var_x161 + var_x162 + var_x163)) : (-1.5943679469924423 * var_x164 * var_x169 + 0.53361053361053368 * var_x157 * var_x167 / pow(var_x168, 2)));
        IJth(rJacobian, 7, 0) = ((var_x166) ? (var_x170 * (var_x177 - 0.00025500480000000003 * var_x181 + var_x176 * var_x182 * (3.0508668000000001e-7 * var_x172 - 6214.6032000000005 * var_x171) + 0.0033402720000000005 * var_x178 * var_x180 / pow(var_x179, 2) - 0.311 * var_x173 * var_x174 * var_x182 / pow(var_x175, 2)) - var_x165 * (var_x183 + var_x184)) : (0.034200000000000001 * var_x170 * var_x188 - 0.16150740242261102 * var_x164 * var_x188 + 0.059999999999999998 * var_x170 * var_x185 * var_x187 / pow(var_x186, 2)));
        IJth(rJacobian, 8, 0) = 0.51020408163265307 * (-var_chaste_interface__L_type_Ca_current_d_gate__d + 1 / var_x200) * (-0.050000000000000003 * var_x189 / pow(var_x190, 2) + 0.27999999999999997 * var_x192 * var_x197 / pow(var_x193, 2) - 0.15076923076923074 * var_x194 * var_x195 / pow(var_x196, 2)) / pow((var_x198 + 0.7142857142857143 * var_x191), 2) + 0.13333333333333333 * var_x199 * var_x201 / pow(var_x200, 2);
        IJth(rJacobian, 9, 0) = 8.2270247479188195e-7 * (-var_chaste_interface__L_type_Ca_current_f_gate__f + 1 / var_x211) * (18.0 * var_x212 - var_x213 * (-0.23999999999999999 - 0.0088888888888888889 * var_chaste_interface__membrane__V) - 20.0 * var_x205 / pow(var_x206, 2)) / pow((0.018140589569160998 + var_x209 + 0.16326530612244897 * var_x204 + 0.18140589569160998 * var_x207), 2) - 0.14285714285714285 * var_x210 * var_x214 / pow(var_x211, 2);
        IJth(rJacobian, 10, 0) = 3.1661199832828864e-6 * (0.33000000000000002 - var_chaste_interface__L_type_Ca_current_f2_gate__f2 + 0.67000000000000004 / var_x220) * (8.0 * var_x212 - var_x221 * (-0.22500000000000001 - 0.0083333333333333332 * var_chaste_interface__membrane__V) - 3.1000000000000001 * var_x215 / pow(var_x216, 2)) / pow((var_x218 + 0.055160142348754451 * var_x217 + 0.14234875444839859 * var_x204), 2) - 0.095714285714285724 * var_x219 * var_x222 / pow(var_x220, 2);
        IJth(rJacobian, 12, 0) = 0.00013840830449826991 * (-var_chaste_interface__transient_outward_current_s_gate__s + 1 / var_x232) * (-var_x233 * (-0.28125 - 0.0062500000000000003 * var_chaste_interface__membrane__V) + var_x227 / pow(var_x228, 2)) / pow((0.035294117647058823 + var_x230 + 0.058823529411764705 * var_x229), 2) - 0.20000000000000001 * var_x231 * var_x234 / pow(var_x232, 2);
        IJth(rJacobian, 13, 0) = 0.16666666666666666 * var_x235 * var_x238 / pow(var_x236, 2) - 0.10526315789473684 * var_x237 * (-0.044444444444444446 - 0.0011111111111111111 * var_chaste_interface__membrane__V) * (-var_chaste_interface__transient_outward_current_r_gate__r + 1 / var_x236) / pow((0.084210526315789472 + var_x237), 2);
        IJth(rJacobian, 15, 0) = var_x266 * (-var_x262 * var_x56 + 0.0040798528199519572 * var_x261 * var_x62 - 0.0010199632049879893 * var_x64 * NV_Ith_S(mParameters, 6));
        IJth(rJacobian, 17, 0) = (-1.8322591491224666e-7 - 0.0046119913257618109 * var_x46 - 0.0093748487085100543 * var_x89 - 0.0051631799195271718 * var_x52 - 1.8954404990922069 * var_x37) * NV_Ith_S(mParameters, 6);
        IJth(rJacobian, 18, 0) = (0.0034421199463514477 * var_x52 + 2.0489711795186757e-5 * var_x27 - 0.00034149519658644594 * var_x18 - 0.0002476708918813817 * var_x3 - 9.2244770955820725e-6 * var_x2 - 4.1599053758030084e-5 * var_x99 - 0.00018575316891103626 * var_x19 - 1.5425546982578716e-6 * var_x24 - var_x272 * var_x39) * NV_Ith_S(mParameters, 6);
        IJth(rJacobian, 0, 1) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x67 + 2500.0 * var_x70 + 0.12379999999999999 * var_x69 - 0.0079072731552699126 * var_x68);
        IJth(rJacobian, 1, 1) = var_x104 * (-0.0038240087783467445 - 5.3144431236283834e-11 * var_x106 + (3.9109255631269199e-5 * var_x69 - 3.9109255631269199e-5 * var_x66 - 2.4979609626472019e-6 * var_x68 - 1.5795337492435058 * var_x70) * NV_Ith_S(mParameters, 6)) + 0.00040000000000000002 * (0.0038 * var_chaste_interface__calcium_dynamics__Ca_ss + 2.40087783467447e-5 * var_chaste_interface__calcium_dynamics__Ca_SR - 0.0038240087783467445 * var_chaste_interface__calcium_dynamics__Ca_i - 0.00042515544989027063 * var_x107 - 0.00031590674984870116 * (0.00059199999999999997 * var_chaste_interface__membrane__V - 0.0079072731552699126 * log(var_x68 * NV_Ith_S(mParameters, 3)) + var_x67 * var_chaste_interface__calcium_dynamics__Ca_i - 2000.0 * var_x36 * var_x45) * NV_Ith_S(mParameters, 6)) / (pow(var_x101, 3) * pow(var_x102, 2));
        IJth(rJacobian, 14, 1) = var_x242 * (0.00036000000000000002 + 7.96875e-10 * var_x106);
        IJth(rJacobian, 15, 1) = 1.1399999999999999 * var_x265;
        IJth(rJacobian, 17, 1) = 4.7386012477305171 * var_x70 * NV_Ith_S(mParameters, 6);
        IJth(rJacobian, 0, 2) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x23 * var_x44);
        IJth(rJacobian, 2, 2) = -var_x118;
        IJth(rJacobian, 18, 2) = -var_x23 * var_x273 * var_x43;
        IJth(rJacobian, 0, 3) = mSetVoltageDerivativeToZero ? 0.0 : (-0.06584071688552609 * var_x71);
        IJth(rJacobian, 3, 3) = -var_x128;
        IJth(rJacobian, 18, 3) = -var_x273 * var_x71;
        IJth(rJacobian, 0, 4) = mSetVoltageDerivativeToZero ? 0.0 : (-0.78400000000000003 * var_x73);
        IJth(rJacobian, 4, 4) = -var_x139;
        IJth(rJacobian, 18, 4) = -0.0004953417837627634 * var_x73 * NV_Ith_S(mParameters, 6);
        IJth(rJacobian, 0, 5) = mSetVoltageDerivativeToZero ? 0.0 : (-44.513999999999996 * var_x76);
        IJth(rJacobian, 5, 5) = -1.0 * var_x153;
        IJth(rJacobian, 17, 5) = -0.028124546125530163 * var_x76 * NV_Ith_S(mParameters, 6);
        IJth(rJacobian, 0, 6) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x77 * var_chaste_interface__fast_sodium_current_j_gate__j);
        IJth(rJacobian, 6, 6) = ((var_x166) ? (-var_x161 - var_x162 - var_x163) : (-5.9230769230769234 * var_x169));
        IJth(rJacobian, 17, 6) = -var_x271 * var_chaste_interface__fast_sodium_current_j_gate__j;
        IJth(rJacobian, 0, 7) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x77 * var_chaste_interface__fast_sodium_current_h_gate__h);
        IJth(rJacobian, 7, 7) = ((var_x166) ? (-var_x183 - var_x184) : (-0.59999999999999998 * var_x188));
        IJth(rJacobian, 17, 7) = -var_x271 * var_chaste_interface__fast_sodium_current_h_gate__h;
        IJth(rJacobian, 0, 8) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x61 * var_x78);
        IJth(rJacobian, 8, 8) = -var_x201;
        IJth(rJacobian, 15, 8) = -var_x267 * var_x61;
        IJth(rJacobian, 0, 9) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x80 * var_chaste_interface__L_type_Ca_current_f2_gate__f2);
        IJth(rJacobian, 9, 9) = -var_x214;
        IJth(rJacobian, 15, 9) = -var_x268 * var_chaste_interface__L_type_Ca_current_f2_gate__f2;
        IJth(rJacobian, 0, 10) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x80 * var_chaste_interface__L_type_Ca_current_f_gate__f);
        IJth(rJacobian, 10, 10) = -var_x222;
        IJth(rJacobian, 15, 10) = -var_x268 * var_chaste_interface__L_type_Ca_current_f_gate__f;
        IJth(rJacobian, 0, 11) = mSetVoltageDerivativeToZero ? 0.0 : (-var_x78 * var_x81);
        IJth(rJacobian, 11, 11) = -var_x225;
        IJth(rJacobian, 15, 11) = -var_x267 * var_x81;
        IJth(rJacobian, 0, 12) = mSetVoltageDerivativeToZero ? 0.0 : (var_x83);
        IJth(rJacobian, 12, 12) = -var_x234;
        IJth(rJacobian, 18, 12) = var_x274 * var_x83;
        IJth(rJacobian, 0, 13) = mSetVoltageDerivativeToZero ? 0.0 : (var_x84);
        IJth(rJacobian, 13, 13) = -var_x238;
        IJth(rJacobian, 18, 13) = var_x274 * var_x84;
        IJth(rJacobian, 1, 14) = 2.40087783467447e-5 * var_x103;
        IJth(rJacobian, 14, 14) = var_x242 * (-0.00036000000000000002 - var_x250 + 0.021759999999999998 * var_x257 - 0.0032639999999999995 * var_x254) + 0.66666666666666674 * (0.00036000000000000002 * var_chaste_interface__calcium_dynamics__Ca_i + 0.0063749999999999996 * var_x107 - 0.00036000000000000002 * var_chaste_interface__calcium_dynamics__Ca_SR - var_x250 * var_x252) / (pow(var_x239, 3) * pow((0.33333333333333337 + var_x240), 2));
        IJth(rJacobian, 15, 14) = var_x266 * (var_x269 + 0.065303877103145572 * var_x254 - 0.43535918068763713 * var_x257);
        IJth(rJacobian, 16, 14) = 0.059999999999999998 * var_x255 * var_chaste_interface__calcium_dynamics__Ca_ss;
        IJth(rJacobian, 0, 15) = mSetVoltageDerivativeToZero ? 0.0 : (-0.14375050524031124 * var_x85);
        IJth(rJacobian, 1, 15) = 0.0038 * var_x103;
        IJth(rJacobian, 11, 15) = -0.0030000000000000001 * var_x225 * var_x226 + 6.2500000000000001e-5 * var_x226 * (0.40000000000000002 - var_chaste_interface__L_type_Ca_current_fCass_gate__fCass + 0.59999999999999998 * var_x224) / pow((0.025000000000000001 + var_x224), 2);
        IJth(rJacobian, 14, 15) = var_x242 * (var_x250 + 0.032639999999999995 * var_x258 - 0.030599999999999995 * var_x259);
        IJth(rJacobian, 15, 15) = var_x266 * (-1.1399999999999999 - var_x269 + 0.61222384784198969 * var_x259 - 0.65303877103145569 * var_x258 - 0.01362352646987262 * var_x85 * NV_Ith_S(mParameters, 6)) + 0.00020000000000000001 * (1.1399999999999999 * var_chaste_interface__calcium_dynamics__Ca_i - 1.1399999999999999 * var_chaste_interface__calcium_dynamics__Ca_ss + var_x252 * var_x269 - var_x262 * var_x63) / (pow(var_x263, 3) * pow(var_x264, 2));
        IJth(rJacobian, 16, 15) = var_x270 * var_chaste_interface__calcium_dynamics__R_prime;
        IJth(rJacobian, 14, 16) = -0.015299999999999998 * var_x241 * var_x260;
        IJth(rJacobian, 15, 16) = 0.30611192392099484 * var_x260 * var_x265;
        IJth(rJacobian, 16, 16) = -0.0050000000000000001 + var_x270 * var_chaste_interface__calcium_dynamics__Ca_ss;
        IJth(rJacobian, 0, 17) = mSetVoltageDerivativeToZero ? 0.0 : (0.0017025 * var_x91 - 3000.0 * var_x92 - 2.7240000000000002 * var_x88 - 396.37878066856405 * var_x90 - 0.31415382535802083 * var_x86 - 0.0077469905913117388 * var_x74);
        IJth(rJacobian, 1, 17) = 1.8954404990922069 * var_x103 * var_x92 * NV_Ith_S(mParameters, 6);
        IJth(rJacobian, 17, 17) = (3.2269874497044823e-6 * var_x91 - 4.8946532376195178e-6 * var_x74 - 0.25043746461999444 * var_x90 - 0.0051631799195271718 * var_x88 - 5.6863214972766203 * var_x92) * NV_Ith_S(mParameters, 6);
        IJth(rJacobian, 18, 17) = (0.0034421199463514477 * var_x88 - 2.151324966469655e-6 * var_x91 - 0.00019848662784277768 * var_x86) * NV_Ith_S(mParameters, 6);
        IJth(rJacobian, 0, 18) = mSetVoltageDerivativeToZero ? 0.0 : (0.86632725819392997 * var_x98 - 1.7588531525427258 * var_x100 - 10.471794178600694 * var_x86 - 14.4387876365655 * var_x94 - 7.8538456339505203 * var_x97 - 0.3900209056315565 * var_x93 - var_x41 * var_x96);
        IJth(rJacobian, 18, 18) = (0.00054735725688276197 * var_x98 - 0.00024642047334222399 * var_x93 - 0.0049621656960694418 * var_x97 - 0.0011112671657618285 * var_x100 - 0.009122620948046032 * var_x94 - 0.0066162209280925897 * var_x86 - var_x272 * var_x96) * NV_Ith_S(mParameters, 6);
    }

    N_Vector CellTenTusscher2006EpiFromCellMLCvodeOpt::ComputeDerivedQuantities(double var_chaste_interface__environment__time, const N_Vector & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__calcium_dynamics__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.000126
        double var_chaste_interface__calcium_dynamics__Ca_ss = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 0.00036
        
        // Mathematics
        const double var_calcium_dynamics__Buf_c = 0.20000000000000001; // millimolar
        const double var_calcium_dynamics__Buf_ss = 0.40000000000000002; // millimolar
        const double var_calcium_dynamics__K_buf_c = 0.001; // millimolar
        const double var_calcium_dynamics__Ca_i_bufc = 1 / (1.0 + var_calcium_dynamics__Buf_c * var_calcium_dynamics__K_buf_c / pow((var_chaste_interface__calcium_dynamics__Ca_i + var_calcium_dynamics__K_buf_c), 2)); // millimolar
        const double var_calcium_dynamics__K_buf_ss = 0.00025000000000000001; // millimolar
        const double var_calcium_dynamics__Ca_ss_bufss = 1 / (1.0 + var_calcium_dynamics__Buf_ss * var_calcium_dynamics__K_buf_ss / pow((var_chaste_interface__calcium_dynamics__Ca_ss + var_calcium_dynamics__K_buf_ss), 2)); // millimolar
        const double var_membrane__F = 96485.341499999995; // coulomb_per_millimole
        const double var_membrane__i_Stim_converted = GetIntracellularAreaStimulus(var_chaste_interface__environment__time); // uA_per_cm2

        N_Vector dqs = N_VNew_Serial(5);
        NV_Ith_S(dqs, 0) = var_membrane__F;
        NV_Ith_S(dqs, 1) = var_calcium_dynamics__Ca_i_bufc;
        NV_Ith_S(dqs, 2) = var_chaste_interface__environment__time;
        NV_Ith_S(dqs, 3) = var_membrane__i_Stim_converted;
        NV_Ith_S(dqs, 4) = var_calcium_dynamics__Ca_ss_bufss;
        return dqs;
    }

template<>
void OdeSystemInformation<CellTenTusscher2006EpiFromCellMLCvodeOpt>::Initialise(void)
{
    this->mSystemName = "tentusscher_model_2006_epi";
    this->mFreeVariableName = "environment__time";
    this->mFreeVariableUnits = "millisecond";

    // NV_Ith_S(rY, 0):
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-85.23);

    // NV_Ith_S(rY, 1):
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.000126);

    // NV_Ith_S(rY, 2):
    this->mVariableNames.push_back("rapid_time_dependent_potassium_current_Xr1_gate__Xr1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00621);

    // NV_Ith_S(rY, 3):
    this->mVariableNames.push_back("rapid_time_dependent_potassium_current_Xr2_gate__Xr2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.4712);

    // NV_Ith_S(rY, 4):
    this->mVariableNames.push_back("slow_time_dependent_potassium_current_Xs_gate__Xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0095);

    // NV_Ith_S(rY, 5):
    this->mVariableNames.push_back("fast_sodium_current_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00172);

    // NV_Ith_S(rY, 6):
    this->mVariableNames.push_back("fast_sodium_current_h_gate__h");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.7444);

    // NV_Ith_S(rY, 7):
    this->mVariableNames.push_back("fast_sodium_current_j_gate__j");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.7045);

    // NV_Ith_S(rY, 8):
    this->mVariableNames.push_back("L_type_Ca_current_d_gate__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.373e-05);

    // NV_Ith_S(rY, 9):
    this->mVariableNames.push_back("L_type_Ca_current_f_gate__f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.7888);

    // NV_Ith_S(rY, 10):
    this->mVariableNames.push_back("L_type_Ca_current_f2_gate__f2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9755);

    // NV_Ith_S(rY, 11):
    this->mVariableNames.push_back("L_type_Ca_current_fCass_gate__fCass");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9953);

    // NV_Ith_S(rY, 12):
    this->mVariableNames.push_back("transient_outward_current_s_gate__s");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.999998);

    // NV_Ith_S(rY, 13):
    this->mVariableNames.push_back("transient_outward_current_r_gate__r");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.42e-08);

    // NV_Ith_S(rY, 14):
    this->mVariableNames.push_back("calcium_dynamics__Ca_SR");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(3.64);

    // NV_Ith_S(rY, 15):
    this->mVariableNames.push_back("calcium_dynamics__Ca_ss");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.00036);

    // NV_Ith_S(rY, 16):
    this->mVariableNames.push_back("calcium_dynamics__R_prime");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9073);

    // NV_Ith_S(rY, 17):
    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.604);

    // NV_Ith_S(rY, 18):
    this->mVariableNames.push_back("cytosolic_potassium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(136.89);

    // mParameters[0]:
    this->mParameterNames.push_back("ScaleFactorGkr");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[1]:
    this->mParameterNames.push_back("ScaleFactorGks");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[2]:
    this->mParameterNames.push_back("ScaleFactorIto");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[3]:
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[4]:
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[5]:
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");

    // mParameters[6]:
    this->mParameterNames.push_back("membrane_capacitance");
    this->mParameterUnits.push_back("microF_per_cm2");

    // mParameters[7]:
    this->mParameterNames.push_back("membrane_stimulus_current_amplitude");
    this->mParameterUnits.push_back("picoA_per_picoF");

    // mParameters[8]:
    this->mParameterNames.push_back("membrane_stimulus_current_duration");
    this->mParameterUnits.push_back("millisecond");

    // mParameters[9]:
    this->mParameterNames.push_back("membrane_stimulus_current_end");
    this->mParameterUnits.push_back("millisecond");

    // mParameters[10]:
    this->mParameterNames.push_back("membrane_stimulus_current_offset");
    this->mParameterUnits.push_back("millisecond");

    // mParameters[11]:
    this->mParameterNames.push_back("membrane_stimulus_current_period");
    this->mParameterUnits.push_back("millisecond");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("K_F");
    this->mDerivedQuantityUnits.push_back("coulomb_per_millimole");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("cytosolic_calcium_flux_scaling_from_intrinsic_buffers");
    this->mDerivedQuantityUnits.push_back("millimolar");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("environment__time");
    this->mDerivedQuantityUnits.push_back("millisecond");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    // Derived Quantity index [4]:
    this->mDerivedQuantityNames.push_back("submembrane_space_calcium_flux_scaling_from_intrinsic_buffers");
    this->mDerivedQuantityUnits.push_back("millimolar");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(CellTenTusscher2006EpiFromCellMLCvodeOpt)

#endif // CHASTE_CVODE
