/*

Copyright (c) 2005-2017, University of Oxford.
All rights reserved.

University of Oxford means the Chancellor, Masters and Scholars of the
University of Oxford, having an administrative office at Wellington
Square, Oxford OX1 2JD, UK.

This file is part of Chaste.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
 * Redistributions of source code must retain the above copyright notice,
   this list of conditions and the following disclaimer.
 * Redistributions in binary form must reproduce the above copyright notice,
   this list of conditions and the following disclaimer in the documentation
   and/or other materials provided with the distribution.
 * Neither the name of the University of Oxford nor the names of its
   contributors may be used to endorse or promote products derived from this
   software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

*/

#ifndef VORONOIPRISM3DVERTEXMESHGENERATOR_HPP_
#define VORONOIPRISM3DVERTEXMESHGENERATOR_HPP_

#include <vector>
#include "MutableVertexMesh.hpp"

#include <boost/version.hpp>
#if BOOST_VERSION >= 105200
#include "boost/polygon/voronoi.hpp"

/**
 * Mesh generator that creates a 3D vertex mesh whose cross-section (in the xy plane) is a
 * 2D Voronoi tessellation using a number of Lloyd's relaxation steps
 * (http://en.wikipedia.org/wiki/Lloyd%27s_algorithm).
 */
class VoronoiPrism3dVertexMeshGenerator
{
    friend class TestVoronoiPrism3dVertexMeshGenerator;

protected:
    /** A pointer to the mesh that this class creates. */
    MutableVertexMesh<3, 3>* mpMesh;

    /** The number of elements requested across the mesh. */
    unsigned mNumElementsX;

    /** The number of elements requested up the mesh. */
    unsigned mNumElementsY;

    /** The height of elements in Z direction. */
    double mElementHeightZ;

    /** The number of Lloyd's relaxation steps requested in the Voronoi iteration. */
    unsigned mNumRelaxationSteps;

    /** The requested average target area of elements in the mesh. */
    double mElementTargetApicalArea;

    /**
     * The maximum expected number of sides any polygon will have.
     * Based on experience, we initialise this to the default value 17 in the constructor.
     * It is theoretically possible that a polygon may be generated with more sides.
     */
    unsigned mMaxExpectedNumSidesPerPolygon;

public:
    /**
     * Constructor.
     *
     * @param numElementsX  The number of elements requested across the mesh
     * @param numElementsY  The number of elements requested up the mesh
     * @param elementHeightZ    The height of element in Z direction (defaults to 1)
     * @param numRelaxationSteps  The number of Lloyd's Relaxation steps in the Voronoi iteration (defaults to 0)
     * @param elementTargetArea The requested average target area of elements in the mesh (defaults to 1.0)
     */
    VoronoiPrism3dVertexMeshGenerator(unsigned numElementsX,
                                      unsigned numElementsY,
                                      double elementHeightZ = 1,
                                      unsigned numRelaxationSteps = 0,
                                      double elementTargetApicalArea = 1.0);

    /**
     * Null constructor for derived classes to call.
     */
    VoronoiPrism3dVertexMeshGenerator()
    {
    }

    /**
     * Destructor - deletes the mesh object and pointer.
     */
    virtual ~VoronoiPrism3dVertexMeshGenerator();

    /**
     * Helper function for the constructor: allows a new mesh to be generated by the user if they don't like the
     * current one.
     */
    void GenerateVoronoiMesh();

    /**
     * @return A pointer to a 3D mutable vertex mesh
     */
    virtual MutableVertexMesh<3, 3>* GetMesh();

    /**
     * @return A pointer to a 3D mutable vertex mesh, after ReMesh() has been called to remove short edges
     */
    virtual MutableVertexMesh<3, 3>* GetMeshAfterReMesh();

    /**
     * @return A vector representing the polygon distribution of the generated mesh, triangles upwards
     */
    std::vector<double> GetPolygonDistribution();

    /**
     * Computes the coefficient of variation of the apical areas of elements in the mesh, defined to be the sample standard
     * deviation in area divided by the mean area.
     *
     * @return The coefficient of variation of the apical area of elements in the mesh
     */
    double GetApicalAreaCoefficientOfVariation();

    /**
     * Call GenerateVoronoiMesh().
     *
     * Allows the user to make a new mesh, for instance if trying to generate a specific polygon distribution.
     */
    void RefreshSeedsAndRegenerateMesh();

    /**
     * Set mMaxNumSidesPerPolygon.
     *
     * @param maxExpectedNumSidesPerPolygon the new value of mMaxNumSidesPerPolygon
     */
    void SetMaxExpectedNumSidesPerPolygon(unsigned maxExpectedNumSidesPerPolygon);

    /**
     * @return mMaxNumSidesPerPolygon
     */
    unsigned GetMaxExpectedNumSidesPerPolygon();
};

#endif // BOOST_VERSION >= 105200

#if BOOST_VERSION < 105200

/**
 * This is a fake class to suppress coverage warnings. To get the real class
 * you must build with Boost version 1.52 or above.
 */
class VoronoiPrism3dVertexMeshGenerator
{
public:
    /**
     * Fake constructor.
     */
    VoronoiPrism3dVertexMeshGenerator();
};

#endif // BOOST_VERSION < 105200

#endif /*VORONOIVERTEXMESHGENERATOR_HPP_*/
