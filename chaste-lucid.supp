#############################################################
# Suppressions of library errors in Ubuntu Lucid and newer. #
#                                                           #
# This file is used automatically if valgrind is new enough #
# to support the "..." syntax.                              #
#############################################################

#################################################
# Note if memory leaks depend on the context (e.g. 
# CHASTE_TEST_OUTPUT it may be advisable for Scons
# to produce suppressions automatically:
#       python/BuildTypes.py
#       -    #_valgrind_flags +=" --gen-suppressions=all"
#       +    _valgrind_flags +=" --gen-suppressions=all"
#################################################

# HDF5
######

{
   HDF5 file close
   Memcheck:Param
   write(buf)
   fun:__write_nocancel
   ...
   fun:MPIOI_File_write
   ...
   fun:PMPI_File_write_at
# If HDF5 is statically linked then this won't match; when installed via PETSc the linking is typically static!
#   obj:*libhdf5.*
   ...
   fun:H5Fclose
}

{
   HDF5 file create
   Memcheck:Leak
   fun:malloc
   ...
   fun:PMPI_File_open
# If HDF5 is statically linked then this won't match; when installed via PETSc the linking is typically static!
#   obj:*libhdf5.*
   ...
   fun:H5F_open
}


# Boost
#######

{
   boost serialization error
   Memcheck:Leak
   fun:_Znw*
   fun:_ZNK5boost13serialization16void_cast_detail11void_caster18recursive_registerEb
}

# Bug in Boost 1.44 - 1.46
{
   boost terminate bug
   Memcheck:Addr4
   fun:_ZNK5boost13serialization13typeid_system27extended_type_info_typeid_012is_less_thanERKNS0_18extended_type_infoE
   fun:_ZNK5boost13serialization18extended_type_infoltERKS1_
   fun:_ZNK5boost13serialization16void_cast_detail11void_casterltERKS2_
   fun:_ZNK5boost13serialization16void_cast_detail11void_caster20recursive_unregisterEv
   fun:_ZN5boost13serialization16void_cast_detail20void_caster_shortcutD0Ev
   fun:_ZNK5boost13serialization16void_cast_detail11void_caster20recursive_unregisterEv
   ...
   fun:__cxa_finalize
   ...
   fun:__run_exit_handlers
   fun:exit
   fun:(below main)
}

# Leaks caused by the above bug
{
   leak due to boost bug (1)
   Memcheck:Leak
   fun:_Znwj
   fun:_ZNSs4_Rep9_S_createEjjRKSaIcE 
   fun:_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag
   fun:_ZNSsC1EPKcRKSaIcE
   ...
   fun:_GLOBAL__*I_ArchiveLocationInfo.cpp
   ...
   fun:call_init
   fun:_dl_init
}
{
   leak due to boost bug (2)
   Memcheck:Leak
   fun:_Znwj
   fun:_ZNSs4_Rep9_S_createEjjRKSaIcE
   ...
   fun:_ZN19ArchiveLocationInfo19SetArchiveDirectoryERK10FileFinder
   fun:_ZN13ArchiveOpener*
}
{
   leak due to boost bug (3)
   Memcheck:Leak
   fun:_Znwj
   fun:_ZNSs4_Rep9_S_createEjjRKSaIcE
   fun:_ZNSs4_Rep8_M_cloneERKSaIcEj
   fun:_ZNSs7reserveEj
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_EPKS3_RKS6_
   fun:_ZN27CellBasedSimulationArchiver*
}
{
   leak due to boost bug (4)
   Memcheck:Leak
   fun:_Znwj
   fun:_ZNSs4_Rep9_S_createEjjRKSaIcE
   fun:_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag
   fun:_ZNSsC1EPKcRKSaIcE
   fun:_ZN20OdeSystemInformation*Initialise*
}
{
   leak due to boost bug (5)
   Memcheck:Leak
   fun:_Znwj
   fun:_ZNSs4_Rep9_S_createEjjRKSaIcE
   fun:_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag
   fun:_ZNSsC1EPKcRKSaIcE
   fun:*WntConcentration*
}
{
   leak due to boost bug (6)
   Memcheck:Leak
   fun:malloc
   fun:backtrace_symbols
   ...
   fun:abort
   ...
   fun:_ZSt9terminatev
   fun:__cxa_pure_virtual
   ...
   fun:__cxa_finalize
   ...
   fun:_dl_fini
}

# PETSc/OpenMPI
###############
{
   mpi_init (writev)
   Memcheck:Param
   writev(vector[...])
   fun:writev
   ...
   obj:*/lib*mpi*.so*
   fun:PMPI_Init*
   fun:*PetscInitialize*
   ...
   fun:_ZN10PetscSetup10setUpWorldEv
}
{
   mpi_init (malloc)
   Memcheck:Leak
   fun:malloc
   ...
   obj:*/lib*mpi*.so*
   fun:PMPI_Init*
   fun:*PetscInitialize*
# Oneiric doesn't have the line above
#  fun:_ZN10PetscSetup10setUpWorldEv
}
{
   mpi_init (realloc)
   Memcheck:Leak
   fun:realloc
   ...
   obj:*/lib*mpi*.so*
   fun:PMPI_Init*
   fun:*PetscInitialize*
}
{
   mpi_init (calloc)
   Memcheck:Leak
   fun:calloc
   ...
   obj:*/libmpi.so*
   fun:PMPI_Init
   fun:*PetscInitialize*
}
{
   mpi_init (sched)
   Memcheck:Param
   sched_setaffinity(mask)
   ...
   obj:*/lib*mpi*.so*
   fun:PMPI_Init*
   fun:*PetscInitialize*
}

{
   petsc finalize (malloc)
   Memcheck:Leak
   fun:malloc
   ...
   obj:*/lib*mpi*.so*
   ...
#  fun:PMPI_Finalize
   fun:*PetscFinalize*
# Oneiric doesn't have the above, but goes straight to
#  fun:_ZN10PetscSetup13tearDownWorldEv
}

{
   OpenMPI PETSc init (invalid read 8)
   Memcheck:Addr8
   fun:_wordcopy_fwd_dest_aligned
   fun:__GI_memmove
   fun:argz_insert
   obj:*/libopen-pal*
   ...
   fun:orte_init
   obj:*/lib*mpi*.so*
   fun:PMPI_Init*
   fun:*PetscInitialize*
}

{
   OpenMPI PETSc init (invalid read 4)
   Memcheck:Addr4
   fun:opal_os_dirpath_create
   fun:orte_session_dir
   ...
   fun:orte_init
   obj:*/lib*mpi*.so*
   fun:PMPI_Init*
   fun:*PetscInitialize*
}

{
   Unset filename in HYPRE_BoomerAMG todo: should this be set?
   Memcheck:Cond
   ...
   fun:hypre_BoomerAMGSetPlotFileName
   fun:hypre_BoomerAMGCreate
   fun:HYPRE_BoomerAMGCreate
   fun:PCHYPRESetType_HYPRE
   ...
   fun:PCSetFromOptions
}

{
    Leak in nss_lookup_function
    Memcheck:Leak
    ...
    fun:__nss_lookup_function
    ...
    fun:getpwuid
    fun:PetscGetUserName
}

# This last one is perhaps a little more dubious...
{
   keyval create (malloc)
   Memcheck:Leak
   fun:malloc
   ...
   obj:*/libmpi.so*
   fun:ompi_attr_create_keyval
   fun:PMPI_Keyval_create
}





# VTK
#####

{
   VTK ExpandTable Writer
   Memcheck:Cond
   fun:_ZN14vtkInformation11ExpandTableEv
   fun:_ZN14vtkInformation15SetAsObjectBaseEP17vtkInformationKeyP13vtkObjectBase
   ...
   fun:_ZN32vtkStreamingDemandDrivenPipeline*
   ...
   fun:_ZN12vtkXMLWriter*
   fun:*MeshWriter*
}

{
   VTK ExpandTable Writer UnRegister
   Memcheck:Cond
   fun:_ZN14vtkInformation11ExpandTableEv
   fun:_ZN14vtkInformation15SetAsObjectBaseEP17vtkInformationKeyP13vtkObjectBase
   fun:_ZN13vtkDataObject10InitializeEv
   fun:_ZN10vtkDataSet10InitializeEv
   fun:_ZN11vtkPointSet10InitializeEv
   fun:_ZN19vtkUnstructuredGrid10InitializeEv
   fun:_ZN19vtkUnstructuredGridD0Ev
   fun:_ZN9vtkObject18UnRegisterInternalEP13vtkObjectBasei
   fun:_ZN16VertexMeshWriter*
}

{  
   VTK ExpandTable Reader
   Memcheck:Cond
   fun:_ZN14vtkInformation11ExpandTableEv
   fun:_ZN14vtkInformation15SetAsObjectBaseEP17vtkInformationKeyP13vtkObjectBase
   ...
   fun:_ZN13VtkMeshReader*
}


{
   VTK-information delete via garbage-collector
   Memcheck:Cond
   fun:_ZN14vtkInformationD*Ev
   ...
   fun:_ZN9vtkObject18UnRegisterInternalEP13vtkObjectBasei
   ...
   fun:_ZN23vtkGarbageCollectorImpl16CollectComponentEPNS_13ComponentTypeE
   fun:_ZN23vtkGarbageCollectorImpl15CollectInternalEP13vtkObjectBase
   fun:_ZN19vtkGarbageCollector7CollectEP13vtkObjectBase
   ...
   fun:_ZN9vtkObject18UnRegisterInternalEP13vtkObjectBasei
   ...
   fun:*V*Mesh*er*
}

{
   VTK-information delete
   Memcheck:Cond
   fun:_ZN14vtkInformationD*Ev
   ...
   fun:_ZN9vtkObject18UnRegisterInternalEP13vtkObjectBasei
   ...
   fun:_ZN13vtkDataObject14SetInformationEP14vtkInformation
   fun:_ZN13vtkDataObjectD*Ev
   ...
   fun:_ZN19vtkUnstructuredGridD0Ev
   ...
   fun:_ZN9vtkObject18UnRegisterInternalEP13vtkObjectBasei
   ...
   fun:*V*Mesh*er*
}

{  
   VTK-information-copy
   Memcheck:Cond
   fun:_ZN14vtkInformation4CopyEPS_i
   fun:_ZN34vtkInformationInformationVectorKey8DeepCopyEP14vtkInformationS1_
   ...
   fun:_ZN13vtkDataObject25CopyInformationToPipelineEP14vtkInformationS1_S1_i
   fun:_ZN23vtkDemandDrivenPipeline18ExecuteInformationEP14vtkInformationPP20vtkInformationVectorS3_
   fun:_ZN32vtkStreamingDemandDrivenPipeline18ExecuteInformationEP14vtkInformationPP20vtkInformationVectorS3_
   fun:_ZN23vtkDemandDrivenPipeline14ProcessRequestEP14vtkInformationPP20vtkInformationVectorS3_
   ...
   fun:_ZN32vtkStreamingDemandDrivenPipeline6UpdateEi
   ...
   fun:_ZN13VtkMeshReader*
}

{   
   VTK-information leak
   Memcheck:Addr8
   fun:_ZN14vtkInformation15SetAsObjectBaseEP17vtkInformationKeyP13vtkObjectBase
   fun:_ZN24vtkInformationIntegerKey3SetEP14vtkInformationi
   fun:_ZN32vtkStreamingDemandDrivenPipeline21PropagateUpdateExtentEi
   fun:_ZN32vtkStreamingDemandDrivenPipeline6UpdateEi
   fun:_ZN12vtkXMLWriter5WriteEv
}

{
   VTK ZLib
   Memcheck:Cond
   fun:inflateReset2
   fun:inflateInit2_
   fun:inflateInit_
   fun:uncompress
   fun:_ZN21vtkZLibDataCompressor16UncompressBufferEPKhmPhm
   fun:_ZN17vtkDataCompressor10UncompressEPKhmPhm
}
{
   VTK ZLib with fewer inits
   Memcheck:Cond
   fun:inflateReset2
   fun:inflateInit2_
   fun:uncompress
   fun:_ZN21vtkZLibDataCompressor16UncompressBufferEPKhmPhm
   fun:_ZN16vtkXMLDataParser9ReadBlockEjPh
}

# CVODE
#######
{
   CVode stopping event todo - check this
   Memcheck:Cond
   fun:CVode
   fun:_ZN12CvodeAdaptor5SolveEP17AbstractOdeSystemRSt6vectorIdSaIdEEdddd
   fun:_ZN16TestCvodeAdaptor*
}
