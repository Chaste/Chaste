name: Project tests

on:
  workflow_dispatch:
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - develop

jobs:
  
  build-and-test:

    if: ${{ !contains(github.event.pull_request.labels.*.name, 'ci:off') }}

    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false
      matrix:
        include:
          - project_org: "Chaste"
            project_repo: "CellBasedComparison2017"
            build_target: "project_CellBasedComparison2017"
            test_target: "project_CellBasedComparison2017"

    env:
      CHASTE_TEST_OUTPUT: ${{ github.workspace }}/chaste-test-dir

    steps:
    - name: checkout repository
      uses: actions/checkout@v4

    - name: install dependencies
      run: |
        echo 'deb [signed-by=/usr/share/keyrings/chaste.asc] https://chaste.github.io/ubuntu jammy/' | sudo tee -a /etc/apt/sources.list.d/chaste.list
        sudo wget -O /usr/share/keyrings/chaste.asc https://chaste.github.io/chaste.asc
        sudo apt update
        sudo apt install chaste-dependencies
    
    - name: checkout project
      uses: actions/checkout@v4
      with:
        repository: ${{ matrix.project_org }}/${{ matrix.project_repo }}
        path: projects/${{ matrix.project_repo }}

    - name: compiler version
      run: |
        g++ --version

    - name: make build and test directories
      run: |
        mkdir -p chaste-build-dir
        mkdir -p ${CHASTE_TEST_OUTPUT}

    - name: cmake configure
      run: cmake -DCMAKE_BUILD_TYPE=Release -DChaste_ERROR_ON_WARNING=OFF ..
      working-directory: chaste-build-dir

    - name: build targets
      run: cmake --build . --parallel 4 --target ${{ matrix.build_target }}
      working-directory: chaste-build-dir

    - name: run Nightly test pack
      run: ctest -j4 -L ${{ matrix.test_target }}
      working-directory: chaste-build-dir
